import math
import textwrap
from tokenize import Double
from django.shortcuts import render
from django.http import HttpResponse

# Create your views here.

def home_3D(request):
    return render(request,"stadd/App1.html")

def run_3D(request):
    Width = float(request.POST["Width"])
    Height = float(request.POST["Height"])
    Slope = float(request.POST["Slope"])

    SW_spacing1 = request.POST["SW_spacing"]
    A_list = SW_spacing1.split()
    map_object = map(float, A_list)
    SW_spacing = list(map_object)

    EW_spacing1 = request.POST["EW_spacing"]
    A_list = EW_spacing1.split()
    map_object = map(float, A_list)
    EW_spacing = list(map_object)

    NSR_Breaks1 = request.POST["NSR_Breaks"]
    A_list = NSR_Breaks1.split()
    map_object = map(float, A_list)
    NSR_Breaks = list(map_object)

    FSR_Breaks1 = request.POST["FSR_Breaks"]
    A_list = FSR_Breaks1.split()
    map_object = map(float, A_list)
    FSR_Breaks = list(map_object)

    ICO_spacing1 = request.POST["ICO_spacing"]
    A_list = ICO_spacing1.split()
    map_object = map(float, A_list)
    ICO_spacing = list(map_object)

    Braced_bay_location1 = request.POST["Braced_bay_location"]
    A_list = Braced_bay_location1.split()
    map_object = map(float, A_list)
    Braced_bay_location = list(map_object)

    NSC_SUPPORT = request.POST["NSC_SUPPORT"]


    FSC_SUPPORT = request.POST["FSC_SUPPORT"]
    

    WC_SUPPORT = request.POST["WC_SUPPORT"]
   

    ICO_SUPPORT = request.POST["ICO_SUPPORT"]
 

    DL = float(request.POST["DL"])
    LL = float(request.POST["LL"])
    CL = float(request.POST["CL"])

    WL = float(request.POST["WL"])
    Cpi = float(request.POST["Cpi"])

    LOADS_REQUIRED = request.POST["LOADS_REQUIRED"]
    SEISMIC_CODE = request.POST["SEISMIC_CODE"]


    Dslope = math.degrees(math.atan(Slope))
    print(Dslope)

    #####################################


    def Side_wall_sp():
        Sidewall = []
        x = 0
        for i in SW_spacing:
            x = x+i
            Sidewall.append(round(x, 4))
        Sidewall.insert(0, 0)
        return Sidewall


    SW1 = Side_wall_sp()
    print('SW1')
    print(SW1)

    Length = SW1[-1]
    print('Length')
    print(Length)
    #####################################

    #####################################


    def Side_wall_sp1():
        Sidewall1 = []
        for x in SW_spacing:
            Sidewall1.append(x)
        Sidewall1.insert(0, 0)
        Sidewall1.append(0)
        return Sidewall1


    SW2 = Side_wall_sp1()
    print('SW2')
    print(SW2)
    #####################################


    #####################################
    def NS_Rafter_Breaks():
        NS_Rafter = []
        y = []
        x = 0
        for i in NSR_Breaks:
            x = (x+i)
            y.append(x)
        y.reverse()

        for j in y:
            r = math.degrees(math.atan(Slope))
            xx = j*(math.cos(math.radians(r)))
            z = (Width/2)-xx
            NS_Rafter.append(round(z, 4))
        return NS_Rafter


    NSR = NS_Rafter_Breaks()
    print('NSR')
    print(NSR)
    #####################################


    #####################################
    def FS_Rafter_Breaks():
        FS_Rafter = []
        y = []
        x = 0
        for i in FSR_Breaks:
            x = (x+i)
            y.append(x)

        for j in y:
            r = math.degrees(math.atan(Slope))
            xx = j*(math.cos(math.radians(r)))
            z = (Width/2)+xx
            FS_Rafter.append(round(z, 4))
        return FS_Rafter


    FSR = FS_Rafter_Breaks()
    print('FSR')
    print(FSR)
    #####################################


    #####################################
    Rafter_Breaks = NSR+FSR
    print('Rafter_Breaks')
    print(Rafter_Breaks)
    #####################################


    #####################################
    def End_wall_sp():
        Endwall = []
        x = 0
        for i in EW_spacing:
            x = x+i
            Endwall.append(round(x, 4))
        return Endwall


    EW1 = End_wall_sp()
    print('EW1')
    print(EW1)

    #####################################

    #####################################
    EW11 = []
    for x in EW1:
        EW11.append(x)

    for x in Rafter_Breaks:
        if x not in EW11:
            EW11.append(x)
        EW11.sort()
    print('EW11')
    print(EW11)
    #####################################


    #####################################
    EW2 = []
    for x in EW1:
        EW2.append(x)
    if Width in EW2:
        EW2.remove(Width)

    print('EW2')
    print(EW2)
    #####################################

    #####################################


    def ICO_column_sp():
        Int_column = []
        x = 0
        for i in ICO_spacing:
            x = x+i
            Int_column.append(x)
        if Width in Int_column:
            Int_column.remove(Width)
        return Int_column


    ICO = ICO_column_sp()
    print('ICO')
    print(ICO)

    #####################################

    #####################################
    ICO_for_rafter_Lz = []
    Final_ICO_Dist = 0
    for x in ICO_spacing:
        ICO_for_rafter_Lz.append(x)
        Final_ICO_Dist = Final_ICO_Dist + x

    ICO_for_rafter_Lz.append(Width-Final_ICO_Dist)

    print('ICO_for_rafter_Lz')
    print(ICO_for_rafter_Lz)

    #####################################

    #####################################
    EW3 = []
    for x in EW2:
        EW3.append(x)
    for x in EW3:
        if x in ICO:
            EW3.remove(x)

    print('EW3')
    print(EW3)
    #####################################
    #####################################
    EW_for_WC_Lz = []
    for x in EW3:
        if x <= Width/2:
            EW_for_WC_Lz.append(x)
        else:
            EW_for_WC_Lz.append(Width-x)
    print('EW_for_WC_Lz')
    print(EW_for_WC_Lz)
    #####################################

    #####################################


    def End_wall_sp1():
        Endwall1 = []
        for x in EW_spacing:
            Endwall1.append(x)
        Endwall1.insert(0, 0)
        Endwall1.append(0)
        return Endwall1


    EW4 = End_wall_sp1()
    print('EW4')
    print(EW4)
    #####################################

    #####################################


    def Frame_X_Coordinate():
        X_Coordinate = []
        for i in EW1:
            X_Coordinate.append(i)

        X_Coordinate.append(0)
        X_Coordinate.append(Width/2)
        X_Coordinate.append(Width)
        X_Coordinate = list(dict.fromkeys(X_Coordinate))
        X_Coordinate.sort()
        X_Coordinate.insert(0, 0)
        X_Coordinate.append(Width)
        return X_Coordinate


    EWX = Frame_X_Coordinate()
    print('EWX')
    print(EWX)

    #####################################

    #####################################
    for x in Rafter_Breaks:
        if x not in EWX:
            EWX.append(x)
        EWX.sort()
    print(EWX)
    #####################################


    #####################################
    def Frame_Y_Coordinate():
        Y_Coordinate = []
        if (Width/2) not in EW11:
            EW11.append(Width/2)
            EW11.sort()
        for i in EW11:
            if i > Width/2:
                y = ((Width-i)*Slope)+Height
                Y_Coordinate.append(y)
            else:
                y = (i*Slope)+Height
                Y_Coordinate.append(y)
        Y_Coordinate.insert(0, 0)
        Y_Coordinate.insert(1, Height)
        Y_Coordinate.append(0)
        return Y_Coordinate


    EWY = Frame_Y_Coordinate()
    print('EWY')
    print(EWY)
    #####################################

    #####################################


    def ICO_Nodes():
        ICO_Nodes = []
        j = 0
        while j < len(ICO):
            i = 0
            while i < len(EWX):
                if ICO[j] == EWX[i]:
                    ICO_Nodes.append(i+1)
                i = i+1
            j = j+1
        return ICO_Nodes


    ICO_Nodes = ICO_Nodes()
    print('ICO_Nodes')
    print(ICO_Nodes)
    #####################################

    #####################################
    ICO_nodes_for_Rafter_Lz = [2]

    for x in ICO_Nodes:
        ICO_nodes_for_Rafter_Lz.append(x)

    ICO_nodes_for_Rafter_Lz.append(len(EWX)-1)

    print('ICO_nodes_for_Rafter_Lz')
    print(ICO_nodes_for_Rafter_Lz)
    #####################################


    #####################################
    def Bracing_Nodes():
        BR_Nodes = []
        j = 0
        while j < len(EW1):
            i = 0
            while i < len(EWX):
                if EW1[j] == EWX[i]:
                    BR_Nodes.append(i+1)
                i = i+1
            j = j+1
        BR_Nodes.append(2)
        BR_Nodes.remove(len(EWX))
        BR_Nodes.sort()
        return BR_Nodes


    BR_Nodes = Bracing_Nodes()
    print('BR_Nodes')
    print(BR_Nodes)
    #####################################

    #####################################


    def ICO_Nodes1():
        x = 0
        ICO_Nodes1 = []
        while x < len(ICO_Nodes):
            y = 0
            while y < len(BR_Nodes):
                if ICO_Nodes[x] == BR_Nodes[y]:
                    ICO_Nodes1.append(y)
                y = y+1
            x = x+1
        return ICO_Nodes1


    ICO_Nodes1 = ICO_Nodes1()
    print('ICO_Nodes1')
    print(ICO_Nodes1)
    #####################################

    #####################################


    def WC_Nodes():
        WC_Nodes = []
        j = 0
        while j < len(EW2):
            i = 0
            while i < len(EWX):
                if EW2[j] == EWX[i]:
                    WC_Nodes.append(i+1)
                i = i+1
            j = j+1
        return WC_Nodes


    WC_Nodes = WC_Nodes()
    print('WC_Nodes')
    print(WC_Nodes)
    #####################################

    #####################################


    def Only_WC_Nodes():
        for x in ICO_Nodes:
            if x in WC_Nodes:
                WC_Nodes.remove(x)
        return WC_Nodes


    Only_WC_Nodes = Only_WC_Nodes()
    print('Only_WC_Nodes')
    print(Only_WC_Nodes)
    #####################################


    #####################################
    def Only_WC_Distance():
        for x in ICO:
            if x in EW2:
                EW2.remove(x)
        return EW2


    Only_WC_Distance = Only_WC_Distance()
    print('Only_WC_Distance')
    print(Only_WC_Distance)
    #####################################

    #####################################


    def Pieces():
        Pieces = []
        j = 0
        while j < len(Rafter_Breaks):
            i = 0
            while i < len(EW11):
                if Rafter_Breaks[j] == EW11[i]:
                    Pieces.append(i+2)
                i = i+1
            j = j+1
        return Pieces


    Pieces = Pieces()
    print('Pieces')
    print(Pieces)
    #####################################

    #####################################
    if Length >= Width:
        Length1 = Length
        Width1 = Width
    else:
        Length1 = Width
        Width1 = Length


    # (H/W <= 1/2) & (1 < L/W <= 3/2)
    ISW1 = [0.7, -0.2, -0.5, -0.5]
    ISW2 = [-0.5, -0.5, 0.7, -0.2]

    if Height/Width1 <= 1/2:
        if Length1/Width1 >= 1 and Length1/Width1 <= 3/2:
            Cpe1 = ISW1[0]
            Cpe4 = ISW1[1]
            Cpe5 = ISW1[2]
            Cpe6 = ISW1[3]

            Cpe1a = ISW2[0]
            Cpe4a = ISW2[1]
            Cpe5a = ISW2[2]
            Cpe6a = ISW2[3]

    # (H/W <= 1/2) & (3/2 < L/W < 4)
    ISW11 = [0.7, -0.25, -0.6, -0.6]
    ISW12 = [-0.5, -0.5, 0.7, -0.1]

    if Height/Width1 <= 1/2:
        if Length1/Width1 >= 3/2 and Length1/Width1 < 4:
            Cpe1 = ISW11[0]
            Cpe4 = ISW11[1]
            Cpe5 = ISW11[2]
            Cpe6 = ISW11[3]

            Cpe1a = ISW12[0]
            Cpe4a = ISW12[1]
            Cpe5a = ISW12[2]
            Cpe6a = ISW12[3]

    # (1/2 < H/W <= 3/2) & (1 <= L/W <= 3/2)
    ISW21 = [0.7, -0.25, -0.6, -0.6]
    ISW22 = [-0.6, -0.6, 0.7, -0.25]

    if Height/Width1 > 1/2 and Height/Width1 <= 3/2:
        if Length1/Width1 >= 1 and Length1/Width1 <= 3/2:
            Cpe1 = ISW21[0]
            Cpe4 = ISW21[1]
            Cpe5 = ISW21[2]
            Cpe6 = ISW21[3]

            Cpe1a = ISW22[0]
            Cpe4a = ISW22[1]
            Cpe5a = ISW22[2]
            Cpe6a = ISW22[3]

    # (1/2 < H/W <= 3/2) & (3/2 <= L/W < 4)
    ISW31 = [0.7, -0.3, -0.7, -0.7]
    ISW32 = [-0.5, -0.5, 0.7, -0.1]

    if Height/Width1 > 1/2 and Height/Width1 <= 3/2:
        if Length1/Width1 >= 3/2 and Length1/Width1 < 4:
            Cpe1 = ISW31[0]
            Cpe4 = ISW31[1]
            Cpe5 = ISW31[2]
            Cpe6 = ISW31[3]

            Cpe1a = ISW32[0]
            Cpe4a = ISW32[1]
            Cpe5a = ISW32[2]
            Cpe6a = ISW32[3]

    # (3/2 < H/W < 6) & (1 < L/W <= 3/2)
    ISW41 = [0.8, -0.25, -0.8, -0.8]
    ISW42 = [-0.8, -0.8, 0.8, -0.25]

    if Height/Width1 > 3/2 and Height/Width1 < 6:
        if Length1/Width1 > 1 and Length1/Width1 <= 3/2:
            Cpe1 = ISW41[0]
            Cpe4 = ISW41[1]
            Cpe5 = ISW41[2]
            Cpe6 = ISW41[3]

            Cpe1a = ISW42[0]
            Cpe4a = ISW42[1]
            Cpe5a = ISW42[2]
            Cpe6a = ISW42[3]

    # (3/2 < H/W < 6) & (3/2 <= L/W < 4)
    ISW51 = [0.7, -0.4, -0.7, -0.7]
    ISW52 = [-0.5, -0.5, 0.8, -0.1]

    if Height/Width1 > 3/2 and Height/Width1 < 6:
        if Length1/Width1 >= 3/2 and Length1/Width1 < 4:
            Cpe1 = ISW51[0]
            Cpe4 = ISW51[1]
            Cpe5 = ISW51[2]
            Cpe6 = ISW51[3]

            Cpe1a = ISW52[0]
            Cpe4a = ISW52[1]
            Cpe5a = ISW52[2]
            Cpe6a = ISW52[3]

    # (H/W >= 6) & (L/W = 3/2)
    ISW61 = [0.95, -1.85, -0.9, -0.9]
    ISW62 = [-0.8, -0.8, 0.9, -0.85]

    if Height/Width1 >= 6:
        if Length1/Width1 == 3/2:
            Cpe1 = ISW61[0]
            Cpe4 = ISW61[1]
            Cpe5 = ISW61[2]
            Cpe6 = ISW61[3]

            Cpe1a = ISW62[0]
            Cpe4a = ISW62[1]
            Cpe5a = ISW62[2]
            Cpe6a = ISW62[3]

    # (H/W >= 6) & (L/W = 1)
    ISW71 = [0.95, -1.25, -0.7, -0.7]
    ISW72 = [-0.7, -0.7, 0.95, -1.25]

    if Height/Width1 >= 6:
        if Length1/Width1 == 1:
            Cpe1 = ISW71[0]
            Cpe4 = ISW71[1]
            Cpe5 = ISW71[2]
            Cpe6 = ISW71[3]

            Cpe1a = ISW72[0]
            Cpe4a = ISW72[1]
            Cpe5a = ISW72[2]
            Cpe6a = ISW72[3]

    # (H/W >= 6) & (L/W = 2)
    ISW81 = [0.85, -0.75, -0.75, -0.75]
    ISW82 = [-0.75, -0.75, 0.85, -0.75]

    if Height/Width1 >= 6:
        if Length1/Width1 == 2:
            Cpe1 = ISW81[0]
            Cpe4 = ISW81[1]
            Cpe5 = ISW81[2]
            Cpe6 = ISW81[3]

            Cpe1a = ISW82[0]
            Cpe4a = ISW82[1]
            Cpe5a = ISW82[2]
            Cpe6a = ISW82[3]

    ######

    # (H/W <= 1/2)
    ISR1 = [0, -0.8, -0.4, -0.8, -0.4]
    ISR2 = [5, -0.9, -0.4, -0.8, -0.4]
    ISR3 = [10, -1.2, -0.4, -0.8, -0.6]
    ISR4 = [20, -0.4, -0.4, -0.7, -0.6]
    ISR5 = [30, 0, -0.4, -0.7, -0.6]
    ISR6 = [45, 0.3, -0.5, -0.7, -0.6]
    ISR7 = [60, 0.7, -0.6, -0.7, -0.6]

    if Height/Width1 <= 1/2:
        if Dslope > 0 and Dslope <= 5:
            Cpe2 = (((ISR2[1]-ISR1[1])/(ISR2[0]-ISR1[0]))*Dslope) + ISR1[1]
            Cpe3 = (((ISR2[2]-ISR1[2])/(ISR2[0]-ISR1[0]))*Dslope) + ISR1[2]

            Cpe2a = (((ISR2[3]-ISR1[3])/(ISR2[0]-ISR1[0]))*Dslope) + ISR1[3]
            Cpe3a = (((ISR2[4]-ISR1[4])/(ISR2[0]-ISR1[0]))*Dslope) + ISR1[4]

        if Dslope > 5 and Dslope <= 10:
            Cpe2 = (((ISR3[1]-ISR2[1])/(ISR3[0]-ISR2[0]))*Dslope) + ISR2[1]
            Cpe3 = (((ISR3[2]-ISR2[2])/(ISR3[0]-ISR2[0]))*Dslope) + ISR2[2]

            Cpe2a = (((ISR3[3]-ISR2[3])/(ISR3[0]-ISR2[0]))*Dslope) + ISR2[3]
            Cpe3a = (((ISR3[4]-ISR2[4])/(ISR3[0]-ISR2[0]))*Dslope) + ISR2[4]

        if Dslope > 10 and Dslope <= 20:
            Cpe2 = (((ISR4[1]-ISR3[1])/(ISR4[0]-ISR3[0]))*Dslope) + ISR3[1]
            Cpe3 = (((ISR4[2]-ISR3[2])/(ISR4[0]-ISR3[0]))*Dslope) + ISR3[2]

            Cpe2a = (((ISR4[3]-ISR3[3])/(ISR4[0]-ISR3[0]))*Dslope) + ISR3[3]
            Cpe3a = (((ISR4[4]-ISR3[4])/(ISR4[0]-ISR3[0]))*Dslope) + ISR3[4]

        if Dslope > 20 and Dslope <= 30:
            Cpe2 = (((ISR5[1]-ISR4[1])/(ISR5[0]-ISR4[0]))*Dslope) + ISR4[1]
            Cpe3 = (((ISR5[2]-ISR4[2])/(ISR5[0]-ISR4[0]))*Dslope) + ISR4[2]

            Cpe2a = (((ISR5[3]-ISR4[3])/(ISR5[0]-ISR4[0]))*Dslope) + ISR4[3]
            Cpe3a = (((ISR5[4]-ISR4[4])/(ISR5[0]-ISR4[0]))*Dslope) + ISR4[4]

        if Dslope > 30 and Dslope <= 45:
            Cpe2 = (((ISR6[1]-ISR5[1])/(ISR6[0]-ISR5[0]))*Dslope) + ISR5[1]
            Cpe3 = (((ISR6[2]-ISR5[2])/(ISR6[0]-ISR5[0]))*Dslope) + ISR5[2]

            Cpe2a = (((ISR6[3]-ISR5[3])/(ISR6[0]-ISR5[0]))*Dslope) + ISR5[3]
            Cpe3a = (((ISR6[4]-ISR5[4])/(ISR6[0]-ISR5[0]))*Dslope) + ISR5[4]

        if Dslope > 45 and Dslope <= 60:
            Cpe2 = (((ISR7[1]-ISR6[1])/(ISR7[0]-ISR6[0]))*Dslope) + ISR6[1]
            Cpe3 = (((ISR7[2]-ISR6[2])/(ISR7[0]-ISR6[0]))*Dslope) + ISR6[2]

            Cpe2a = (((ISR7[3]-ISR6[3])/(ISR7[0]-ISR6[0]))*Dslope) + ISR6[3]
            Cpe3a = (((ISR7[4]-ISR6[4])/(ISR7[0]-ISR6[0]))*Dslope) + ISR6[4]


    # (1/2 <= H/W <= 3/2)
    ISR11 = [0, -0.8, -0.6, -1.0, -0.6]
    ISR12 = [5, -0.9, -0.6, -0.9, -0.6]
    ISR13 = [10, -1.1, -0.6, -0.8, -0.6]
    ISR14 = [20, -0.7, -0.5, -0.8, -0.6]
    ISR15 = [30, -0.2, -0.5, -0.8, -0.8]
    ISR16 = [45, 0.2, -0.5, -0.8, -0.8]
    ISR17 = [60, 0.6, -0.5, -0.8, -0.8]


    if Height/Width1 > 1/2 and Height/Width1 <= 3/2:
        if Dslope > 0 and Dslope <= 5:
            Cpe2 = (((ISR12[1]-ISR11[1])/(ISR12[0]-ISR11[0]))*Dslope) + ISR11[1]
            Cpe3 = (((ISR12[2]-ISR11[2])/(ISR12[0]-ISR11[0]))*Dslope) + ISR11[2]

            Cpe2a = (((ISR12[3]-ISR11[3])/(ISR12[0]-ISR11[0]))*Dslope) + ISR11[3]
            Cpe3a = (((ISR12[4]-ISR11[4])/(ISR12[0]-ISR11[0]))*Dslope) + ISR11[4]

        if Dslope > 5 and Dslope <= 10:
            Cpe2 = (((ISR13[1]-ISR12[1])/(ISR13[0]-ISR12[0]))*Dslope) + ISR12[1]
            Cpe3 = (((ISR13[2]-ISR12[2])/(ISR13[0]-ISR12[0]))*Dslope) + ISR12[2]

            Cpe2a = (((ISR13[3]-ISR12[3])/(ISR13[0]-ISR12[0]))*Dslope) + ISR12[3]
            Cpe3a = (((ISR13[4]-ISR12[4])/(ISR13[0]-ISR12[0]))*Dslope) + ISR12[4]

        if Dslope > 10 and Dslope <= 20:
            Cpe2 = (((ISR14[1]-ISR13[1])/(ISR14[0]-ISR13[0]))*Dslope) + ISR13[1]
            Cpe3 = (((ISR14[2]-ISR13[2])/(ISR14[0]-ISR13[0]))*Dslope) + ISR13[2]

            Cpe2a = (((ISR14[3]-ISR13[3])/(ISR14[0]-ISR13[0]))*Dslope) + ISR13[3]
            Cpe3a = (((ISR14[4]-ISR13[4])/(ISR14[0]-ISR13[0]))*Dslope) + ISR13[4]

        if Dslope > 20 and Dslope <= 30:
            Cpe2 = (((ISR15[1]-ISR14[1])/(ISR15[0]-ISR14[0]))*Dslope) + ISR14[1]
            Cpe3 = (((ISR15[2]-ISR14[2])/(ISR15[0]-ISR14[0]))*Dslope) + ISR14[2]

            Cpe2a = (((ISR15[3]-ISR14[3])/(ISR15[0]-ISR14[0]))*Dslope) + ISR14[3]
            Cpe3a = (((ISR15[4]-ISR14[4])/(ISR15[0]-ISR14[0]))*Dslope) + ISR14[4]

        if Dslope > 30 and Dslope <= 45:
            Cpe2 = (((ISR16[1]-ISR15[1])/(ISR16[0]-ISR15[0]))*Dslope) + ISR15[1]
            Cpe3 = (((ISR16[2]-ISR15[2])/(ISR16[0]-ISR15[0]))*Dslope) + ISR15[2]

            Cpe2a = (((ISR16[3]-ISR15[3])/(ISR16[0]-ISR15[0]))*Dslope) + ISR15[3]
            Cpe3a = (((ISR16[4]-ISR15[4])/(ISR16[0]-ISR15[0]))*Dslope) + ISR15[4]

        if Dslope > 45 and Dslope <= 60:
            Cpe2 = (((ISR17[1]-ISR16[1])/(ISR17[0]-ISR16[0]))*Dslope) + ISR16[1]
            Cpe3 = (((ISR17[2]-ISR16[2])/(ISR17[0]-ISR16[0]))*Dslope) + ISR16[2]

            Cpe2a = (((ISR17[3]-ISR16[3])/(ISR17[0]-ISR16[0]))*Dslope) + ISR16[3]
            Cpe3a = (((ISR17[4]-ISR16[4])/(ISR17[0]-ISR16[0]))*Dslope) + ISR16[4]

    # (3/2 < H/W < 6)
    ISR21 = [0, -0.7, -0.6, -0.9, -0.7]
    ISR22 = [5, -0.7, -0.6, -0.8, -0.8]
    ISR23 = [10, -0.7, -0.6, -0.8, -0.8]
    ISR24 = [20, -0.8, -0.6, -0.8, -0.8]
    ISR25 = [30, -1.0, -0.5, -0.8, -0.7]
    ISR26 = [40, -0.2, -0.5, -0.8, -0.7]
    ISR27 = [50, 0.2, -0.5, -0.8, -0.7]
    ISR28 = [60, 0.5, -0.5, -0.8, -0.7]

    if Height/Width1 > 3/2 and Height/Width1 < 6:
        if Dslope > 0 and Dslope <= 5:
            Cpe2 = (((ISR22[1]-ISR21[1])/(ISR22[0]-ISR21[0]))*Dslope) + ISR21[1]
            Cpe3 = (((ISR22[2]-ISR21[2])/(ISR22[0]-ISR21[0]))*Dslope) + ISR21[2]

            Cpe2a = (((ISR22[3]-ISR21[3])/(ISR22[0]-ISR21[0]))*Dslope) + ISR21[3]
            Cpe3a = (((ISR22[4]-ISR21[4])/(ISR22[0]-ISR21[0]))*Dslope) + ISR21[4]

        if Dslope > 5 and Dslope <= 10:
            Cpe2 = (((ISR23[1]-ISR22[1])/(ISR23[0]-ISR22[0]))*Dslope) + ISR22[1]
            Cpe3 = (((ISR23[2]-ISR22[2])/(ISR23[0]-ISR22[0]))*Dslope) + ISR22[2]

            Cpe2a = (((ISR23[3]-ISR22[3])/(ISR23[0]-ISR22[0]))*Dslope) + ISR22[3]
            Cpe3a = (((ISR23[4]-ISR22[4])/(ISR23[0]-ISR22[0]))*Dslope) + ISR22[4]

        if Dslope > 10 and Dslope <= 20:
            Cpe2 = (((ISR24[1]-ISR23[1])/(ISR24[0]-ISR23[0]))*Dslope) + ISR23[1]
            Cpe3 = (((ISR24[2]-ISR23[2])/(ISR24[0]-ISR23[0]))*Dslope) + ISR23[2]

            Cpe2a = (((ISR24[3]-ISR23[3])/(ISR24[0]-ISR23[0]))*Dslope) + ISR23[3]
            Cpe3a = (((ISR24[4]-ISR23[4])/(ISR24[0]-ISR23[0]))*Dslope) + ISR23[4]

        if Dslope > 20 and Dslope <= 30:
            Cpe2 = (((ISR25[1]-ISR24[1])/(ISR25[0]-ISR24[0]))*Dslope) + ISR24[1]
            Cpe3 = (((ISR25[2]-ISR24[2])/(ISR25[0]-ISR24[0]))*Dslope) + ISR24[2]

            Cpe2a = (((ISR25[3]-ISR24[3])/(ISR25[0]-ISR24[0]))*Dslope) + ISR24[3]
            Cpe3a = (((ISR25[4]-ISR24[4])/(ISR25[0]-ISR24[0]))*Dslope) + ISR24[4]

        if Dslope > 30 and Dslope <= 40:
            Cpe2 = (((ISR26[1]-ISR25[1])/(ISR26[0]-ISR25[0]))*Dslope) + ISR25[1]
            Cpe3 = (((ISR26[2]-ISR25[2])/(ISR26[0]-ISR25[0]))*Dslope) + ISR25[2]

            Cpe2a = (((ISR26[3]-ISR25[3])/(ISR26[0]-ISR25[0]))*Dslope) + ISR25[3]
            Cpe3a = (((ISR26[4]-ISR25[4])/(ISR26[0]-ISR25[0]))*Dslope) + ISR25[4]

        if Dslope > 40 and Dslope <= 50:
            Cpe2 = (((ISR27[1]-ISR26[1])/(ISR27[0]-ISR26[0]))*Dslope) + ISR26[1]
            Cpe3 = (((ISR27[2]-ISR26[2])/(ISR27[0]-ISR26[0]))*Dslope) + ISR26[2]

            Cpe2a = (((ISR27[3]-ISR26[3])/(ISR27[0]-ISR26[0]))*Dslope) + ISR26[3]
            Cpe3a = (((ISR27[4]-ISR26[4])/(ISR27[0]-ISR26[0]))*Dslope) + ISR26[4]

        if Dslope > 50 and Dslope <= 60:
            Cpe2 = (((ISR28[1]-ISR27[1])/(ISR28[0]-ISR27[0]))*Dslope) + ISR27[1]
            Cpe3 = (((ISR28[2]-ISR27[2])/(ISR28[0]-ISR27[0]))*Dslope) + ISR27[2]

            Cpe2a = (((ISR28[3]-ISR27[3])/(ISR28[0]-ISR27[0]))*Dslope) + ISR27[3]
            Cpe3a = (((ISR28[4]-ISR27[4])/(ISR28[0]-ISR27[0]))*Dslope) + ISR27[4]

##########################################################################

    response = HttpResponse(content_type='text/plain')
    response['content-Disposition'] = 'attachement; filename = staad.std'


    response.writelines("STAAD SPACE\n")
    response.writelines("START JOB INFORMATION\n")
    response.writelines("ENGINEER DATE 10/6/2021\n")
    response.writelines("END JOB INFORMATION\n")
    response.writelines("INPUT WIDTH 79\n")
    response.writelines("UNIT METER KN\n")

    ##############################################################################
    #JOINT COORDINATES
    ##############################################################################

    response.writelines("JOINT COORDINATES")

    #FRAME CO-COORDINATES#########################################################

    j=0
    while j<len(SW1):
        i=0
        while i<len(EWX):
            if i%2==0:
                response.writelines(f"\n")
            response.writelines(f"{(len(EWX)*j)+i+1} {round(EWX[i],5)} {round(EWY[i],5)} {round(SW1[j],5)};")

            i=i+1
        j=j+1


    #ICO CO-COORDINATES###########################################################

    j=0
    while j<len(SW1):
        i=0
        while i<len(ICO):
            if i%3==0:
                response.writelines(f"\n")
            response.writelines(f"{(len(EWX)*len(SW1))+i+(j*len(ICO))+1} {ICO[i]} {0} {SW1[j]};")
            i=i+1
        j=j+1

    #WC CO-COORDINATES############################################################

    j=0
    while j<len(SW1):
        i=0
        while i<len(Only_WC_Nodes):
            if j==0:
                if i%3==0:
                    response.writelines(f"\n")
                response.writelines(f"{(len(EWX)*len(SW1))+(len(ICO)*len(SW1))+i+(j*len(Only_WC_Nodes))+1} {Only_WC_Distance[i]} {0} {SW1[j]};")
            if j==(len(SW1)-1):
                if i%3==0:
                    response.writelines(f"\n")
                response.writelines(f"{(len(EWX)*len(SW1))+(len(ICO)*len(SW1))+i+(1*len(Only_WC_Nodes))+1} {Only_WC_Distance[i]} {0} {SW1[j]};")
            i=i+1
        j=j+1


    ##############################################################################
    #MEMBER INCIDENCES
    ##############################################################################
    response.writelines("\n")
    response.writelines("MEMBER INCIDENCES")

    #FRAME INCIDENCES############################################################

    j=0
    while j<len(SW1):
        i=0
        while i<(len(EWX)-1):
            if i%4==0:
                response.writelines(f"\n")
            response.writelines(f"{((len(EWX)-1)*j)+i+1} {((len(EWX)-1)*j)+i+1+j} {((len(EWX)-1)*j)+i+2+j};")
            i=i+1
        j=j+1

    #ICO INCIDENCES###############################################################

    j=0
    while j<len(SW1):
        i=0
        while i<len(ICO_Nodes):
            if i%4==0:
                response.writelines(f"\n")
            response.writelines(f"{((len(EWX)-1)*len(SW1))+(j*len(ICO_Nodes))+i+1} {(len(EWX)*len(SW1))+(j*len(ICO_Nodes))+1+i} {(j*len(EWX))+ICO_Nodes[i]};")
            i=i+1
        j=j+1

    #WC INCIDENCES###############################################################

    j=0
    while j<len(SW1):
        i=0
        while i<len(Only_WC_Nodes):
            if j==0:
                if i%4==0:
                    response.writelines(f"\n")
                response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(j*len(Only_WC_Nodes))+i+1} {(len(EWX)*len(SW1))+(len(ICO)*len(SW1))+(j*len(Only_WC_Nodes))+1+i} {(j*len(EWX))+Only_WC_Nodes[i]};")
            if j==(len(SW1)-1):
                if i%4==0:
                    response.writelines(f"\n")
                response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(1*len(Only_WC_Nodes))+i+1} {(len(EWX)*len(SW1))+(len(ICO)*len(SW1))+(1*len(Only_WC_Nodes))+1+i} {(j*len(EWX))+Only_WC_Nodes[i]};")

            i=i+1
        j=j+1


    #COLDFORM MEMBERS INCIDENCES###############################################################

    j=0
    while j<len(BR_Nodes):
        i=0
        while i<(len(SW1)-1):
            if i%4==0:
                response.writelines(f"\n")
            response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(EW3)*2)+i+1+(j*(len(SW1)-1))} {BR_Nodes[j]+(i*len(EWX))} {BR_Nodes[j]+((i+1)*len(EWX))};")
            i=i+1
        j=j+1

    #BRACING MEMBERS INCIDENCES###############################################################

    j=0
    while j<len(Braced_bay_location):
        i=0
        while i<(len(BR_Nodes)-1):
            if i%4==0:
                response.writelines(f"\n")
            response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+i+1+(j*(len(BR_Nodes)-1))} {BR_Nodes[i]+((Braced_bay_location[j]-1)*len(EWX))} {BR_Nodes[i+1]+(Braced_bay_location[j])*len(EWX)};")
            i=i+1
        j=j+1

    j=0
    while j<len(Braced_bay_location):
        i=0
        while i<(len(BR_Nodes)-1):
            if i%4==0:
                response.writelines(f"\n")
            response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+((len(BR_Nodes)-1)*len(Braced_bay_location))+i+1+(j*(len(BR_Nodes)-1))} {BR_Nodes[i+1]+((Braced_bay_location[j]-1)*len(EWX))} {BR_Nodes[i]+(Braced_bay_location[j])*len(EWX)};")
            i=i+1
        j=j+1

    response.writelines(f"\n")
    j=0
    while j<len(Braced_bay_location):
        i=1
        while i<=2:
            if i==1:
                response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+((len(BR_Nodes)-1)*len(Braced_bay_location)*2)+i+(j*2)} {i+((Braced_bay_location[j]-1)*len(EWX))} {(i+1)+(Braced_bay_location[j])*len(EWX)}\n")
            if i==2:
                response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+((len(BR_Nodes)-1)*len(Braced_bay_location)*2)+i+(j*2)} {i+((Braced_bay_location[j]-1)*len(EWX))} {(i-1)+(Braced_bay_location[j])*len(EWX)}\n")
            i=i+1
        j=j+1

    j=0
    while j<len(Braced_bay_location):
        i=1
        while i<=2:
            if i==1:
                response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+((len(BR_Nodes)-1)*len(Braced_bay_location)*2)+(len(Braced_bay_location)*2)+i+(j*2)} {i+(len(EWX)-2)+((Braced_bay_location[j]-1)*len(EWX))} {(i+1)+(len(EWX)-2)+(Braced_bay_location[j])*len(EWX)}\n")
            if i==2:
                response.writelines(f"{((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+((len(BR_Nodes)-1)*len(Braced_bay_location)*2)+(len(Braced_bay_location)*2)+i+(j*2)} {i+(len(EWX)-2)+((Braced_bay_location[j]-1)*len(EWX))} {(i-1)+(len(EWX)-2)+(Braced_bay_location[j])*len(EWX)}\n")
            i=i+1
        j=j+1

    ##############################################################################
    response.writelines("DEFINE MATERIAL START\n")
    response.writelines("ISOTROPIC STEEL\n")
    response.writelines("E 2.05e+08\n")
    response.writelines("POISSON 0.3\n")
    response.writelines("DENSITY 76.8195\n")
    response.writelines("ALPHA 1.2e-05\n")
    response.writelines("DAMP 0.03\n")
    response.writelines("TYPE STEEL\n")
    response.writelines("STRENGTH FY 253200 FU 407800 RY 1.5 RT 1.2\n")
    response.writelines("END DEFINE MATERIAL\n")

    response.writelines("MEMBER PROPERTY\n")

    response.writelines("********************************************************************\n")
    response.writelines("*MAIN FRAME MEMBERS\n")
    response.writelines("********************************************************************\n")


    x=0
    while x<(len(EWX)-1):
        i=0
        CRET=[]
        while i<(len(SW1)):
            CRET.insert(i,(x+1)+(i*(len(EWX)-1)))
            i=i+1
        print(CRET)
        CRET1=[]
        y=1
        while y<=len(CRET):
            if len(CRET)>=15:
                CRET1.append(CRET[y-1])
                if y%15==0 or y%len(CRET)==0:
                    st=' '.join(map(str,CRET1))
                    response.writelines(f"{st} -\n")
                    print(CRET1)
                    print(st)
                    CRET1=[]
            else:
                if y==len(CRET):
                    st=' '.join(map(str,CRET))
                    response.writelines(f"{st} -\n")
            y=y+1
        response.writelines(f"TAPERED 0.27 0.005 0.27 0.15 0.008\n")
        x=x+1

    if len(ICO)>0:

        response.writelines("********************************************************************\n")
        response.writelines("*INTERIOR COLUMNS\n")
        response.writelines("********************************************************************\n")

        x=0
        CRET=[]
        while x<(len(ICO)*len(SW1)):
            CRET.insert(x,((len(EWX)-1)*len(SW1))+x+1)
            x=x+1
        print(CRET)
        CRET1=[]
        x=1
        while x<=len(CRET):
            if len(CRET)>=15:
                CRET1.append(CRET[x-1])
                if x%15==0 or x%len(CRET)==0:
                    st=' '.join(map(str,CRET1))
                    response.writelines(f"{st} -\n")
                    print(CRET1)
                    print(st)
                    CRET1=[]
            else:
                if x==len(CRET):
                    st=' '.join(map(str,CRET))
                    response.writelines(f"{st} -\n")
            x=x+1
        response.writelines(f"TAPERED 0.27 0.005 0.27 0.15 0.008\n")


    response.writelines("********************************************************************\n")
    response.writelines("*WIND COLUMNS\n")
    response.writelines("********************************************************************\n")

    x=0
    while x<2:
        i=0
        CRET=[]
        while i<(len(Only_WC_Nodes)):
            CRET.insert(i,((len(EWX)-1)*len(SW1))+((len(ICO))*len(SW1))+1+i+(x*len(Only_WC_Nodes)))
            i=i+1
        print(CRET)
        CRET1=[]
        y=1
        while y<=len(CRET):
            if len(CRET)>=15:
                CRET1.append(CRET[y-1])
                if y%15==0 or y%len(CRET)==0:
                    st=' '.join(map(str,CRET1))
                    response.writelines(f"{st} -\n")
                    print(CRET1)
                    print(st)
                    CRET1=[]
            else:
                if y==len(CRET):
                    st=' '.join(map(str,CRET))
                    response.writelines(f"{st} -\n")
            y=y+1
        x=x+1
    response.writelines(f"TAPERED 0.27 0.005 0.27 0.15 0.008\n")

    response.writelines("********************************************************************\n")
    response.writelines("*ROOF BRACINGS\n")
    response.writelines("********************************************************************\n")
    response.writelines(f"MEMBER PROPERTY INDIAN\n")

    i=((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))
    CRET=[]
    while i<(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+(len(Braced_bay_location)*(len(BR_Nodes)-1)*2)):
        CRET.append(i+1)
        i=i+1
    print(CRET)
    CRET1=[]
    x=1
    while x<=len(CRET):
        if len(CRET)>=15:
            CRET1.append(CRET[x-1])
            if x%15==0 or x%len(CRET)==0:
                st=' '.join(map(str,CRET1))
                response.writelines(f"{st} -\n")
                print(CRET1)
                print(st)
                CRET1=[]
        else:
            if x==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st} -\n")
        x=x+1

    response.writelines(f"TABLE ST PIP1937M\n")


    response.writelines("********************************************************************\n")
    response.writelines("*WALL BRACINGS\n")
    response.writelines("********************************************************************\n")

    i=(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+(len(Braced_bay_location)*(len(BR_Nodes)-1)*2))
    CRET=[]
    while i<(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+(len(Braced_bay_location)*(len(BR_Nodes)-1)*2)+(len(Braced_bay_location)*2*2)):
        CRET.append(i+1)
        i=i+1
    print(CRET)
    CRET1=[]
    x=1
    while x<=len(CRET):
        if len(CRET)>=15:
            CRET1.append(CRET[x-1])
            if x%15==0 or x%len(CRET)==0:
                st=' '.join(map(str,CRET1))
                response.writelines(f"{st} -\n")
                print(CRET1)
                print(st)
                CRET1=[]
        else:
            if x==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st} -\n")
        x=x+1
    response.writelines(f"TABLE ST PIP1937M\n")


    response.writelines("********************************************************************\n")
    response.writelines("*FORCE TRANSFER MEMBERS\n")
    response.writelines("********************************************************************\n")
    response.writelines("MEMBER PROPERTY COLDFORMED INDIAN\n")

    x=0
    CRET=[]
    while x<(len(BR_Nodes)):
        i=0

        while i<(len(SW1)-1):

            CRET.insert(i,((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(EW3)*2)+i+1+(x*(len(SW1)-1)))
            i=i+1
        x=x+1
    print(CRET)
    CRET1=[]
    x=1
    while x<=len(CRET):
        if len(CRET)>=15:
            CRET1.append(CRET[x-1])
            if x%15==0 or x%len(CRET)==0:
                st=' '.join(map(str,CRET1))
                response.writelines(f"{st} -\n")
                print(CRET1)
                print(st)
                CRET1=[]
        else:
            if x==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st} -\n")
        x=x+1
    response.writelines(f"TABLE ST 200ZS60X2\n")


    response.writelines("********************************************************************\n")
    response.writelines("CONSTANTS\n")


    x=0
    while x<2:
        i=0
        CRET=[]
        while i<(len(Only_WC_Nodes)):
            CRET.insert(i,((len(EWX)-1)*len(SW1))+((len(ICO))*len(SW1))+1+i+(x*len(Only_WC_Nodes)))
            i=i+1
        response.writelines(f"BETA 90 MEMB -\n")
        print(CRET)
        CRET1=[]
        y=1
        while y<=len(CRET):
            if len(CRET)>=15:
                CRET1.append(CRET[y-1])
                if y%15==0 or y%len(CRET)==0:
                    st=' '.join(map(str,CRET1))
                    if y==len(CRET):
                        response.writelines(f"{st}\n")
                    else:
                        response.writelines(f"{st} -\n")
                    print(CRET1)
                    print(st)
                    CRET1=[]
            else:
                if y==len(CRET):
                    st=' '.join(map(str,CRET))
                    response.writelines(f"{st}\n")
            y=y+1

        x=x+1



    response.writelines("MATERIAL STEEL ALL\n")
    response.writelines("********************************************************************\n")

    response.writelines("SUPPORTS\n")

    x=0
    CRET=[]
    while x<1:
        i=0
        while i<(len(SW1)):
            CRET.insert(i,(len(EWX)*i)+1)
            i=i+1
        x=x+1
    print(CRET)
    CRET1=[]
    x=1
    while x<=len(CRET):
        if len(CRET)>=15:
            CRET1.append(CRET[x-1])
            if x%15==0 or x%len(CRET)==0:
                st=' '.join(map(str,CRET1))
                response.writelines(f"{st} -\n")
                print(CRET1)
                print(st)
                CRET1=[]
        else:
            if x==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st} -\n")
        x=x+1
    response.writelines(f"{NSC_SUPPORT}\n")


    x=0
    CRET=[]
    while x<1:
        i=0
        while i<(len(SW1)):
            CRET.insert(i,(len(EWX)*(i+1)))
            i=i+1
        x=x+1
    print(CRET)
    CRET1=[]
    x=1
    while x<=len(CRET):
        if len(CRET)>=15:
            CRET1.append(CRET[x-1])
            if x%15==0 or x%len(CRET)==0:
                st=' '.join(map(str,CRET1))
                response.writelines(f"{st} -\n")
                print(CRET1)
                print(st)
                CRET1=[]
        else:
            if x==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st} -\n")
        x=x+1
    response.writelines(f"{FSC_SUPPORT}\n")

    if len(ICO)>0:

        x=0
        CRET=[]
        while x<len(ICO):
            i=0
            while i<(len(SW1)):
                CRET.insert(i,((len(EWX)*len(SW1))+(i)+1+(x*len(SW1))))
                i=i+1
            x=x+1
        print(CRET)
        CRET1=[]
        x=1
        while x<=len(CRET):
            if len(CRET)>=15:
                CRET1.append(CRET[x-1])
                if x%15==0 or x%len(CRET)==0:
                    st=' '.join(map(str,CRET1))
                    response.writelines(f"{st} -\n")
                    print(CRET1)
                    print(st)
                    CRET1=[]
            else:
                if x==len(CRET):
                    st=' '.join(map(str,CRET))
                    response.writelines(f"{st} -\n")
            x=x+1
        response.writelines(f"{ICO_SUPPORT}\n")



    x=0
    while x<2:
        i=0
        CRET=[]
        while i<(len(Only_WC_Nodes)):
            CRET.insert(i,((len(EWX))*len(SW1))+((len(ICO))*len(SW1))+1+i+(x*len(Only_WC_Nodes)))
            i=i+1
        print(CRET)
        CRET1=[]
        y=1
        while y<=len(CRET):
            if len(CRET)>=15:
                CRET1.append(CRET[y-1])
                if y%15==0 or y%len(CRET)==0:
                    st=' '.join(map(str,CRET1))
                    response.writelines(f"{st} -\n")
                    print(CRET1)
                    print(st)
                    CRET1=[]
            else:
                if y==len(CRET):
                    st=' '.join(map(str,CRET))
                    response.writelines(f"{st} -\n")
            y=y+1
        response.writelines(f"{WC_SUPPORT}\n")
        x=x+1

    response.writelines("********************************************************************\n")

    response.writelines("MEMBER RELEASE\n")

    x=0
    CRET=[]
    while x<2:
        i=0
        while i<(len(Only_WC_Nodes)):
            CRET.insert(i,((len(EWX)-1)*len(SW1))+((len(ICO))*len(SW1))+1+i+(x*len(Only_WC_Nodes)))
            i=i+1
        x=x+1

    print(CRET)
    CRET1=[]
    x=1
    while x<=len(CRET):
        if len(CRET)>=15:
            CRET1.append(CRET[x-1])
            if x%15==0 or x%len(CRET)==0:
                st=' '.join(map(str,CRET1))
                response.writelines(f"{st} -\n")
                print(CRET1)
                print(st)
                CRET1=[]
        else:
            if x==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st} -\n")
        x=x+1
    response.writelines(f"END MY MZ\n")



    response.writelines("********************************************************************\n")

    response.writelines("MEMBER TRUSS\n")

    x=0
    CRET=[]
    while x<(len(BR_Nodes)):
        i=0

        while i<(len(SW1)-1):
            CRET.insert(i,((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(EW3)*2)+i+1+(x*(len(SW1)-1)))
            i=i+1
        x=x+1
    print(CRET)
    CRET1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRET1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRET1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRET1)
                print(st)
                CRET1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines("********************************************************************\n")

    response.writelines("MEMBER TENSION\n")

    i=((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))
    CRET=[]
    while i<(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+(len(Braced_bay_location)*(len(BR_Nodes)-1)*2)+(len(Braced_bay_location)*2*2)):
        CRET.append(i+1)
        i=i+1
    print(CRET)
    CRET1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRET1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRET1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRET1)
                print(st)
                CRET1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1


    if LOADS_REQUIRED == 'EL-DL-RLL-WL':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")

        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL\n")
        response.writelines("5 1.5 6 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 101 1.2DL+1.2RLL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.6\n")
        response.writelines("LOAD COMB 102 1.2DL+1.2RLL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 8 0.6\n")
        response.writelines("LOAD COMB 103 1.2DL+1.2RLL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 9 0.6\n")
        response.writelines("LOAD COMB 104 1.2DL+1.2RLL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 10 0.6\n")
        response.writelines("LOAD COMB 105 1.2DL+1.2RLL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 11 0.6\n")
        response.writelines("LOAD COMB 106 1.2DL+1.2RLL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 12 0.6\n")
        response.writelines("LOAD COMB 107 1.2DL+1.2RLL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 13 0.6\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 14 0.6\n")

        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.2 1 0.6\n")
        response.writelines("LOAD COMB 110 1.2DL+1.2RLL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.2 2 0.6\n")
        response.writelines("LOAD COMB 111 1.2DL+1.2RLL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.2 3 0.6\n")
        response.writelines("LOAD COMB 112 1.2DL+1.2RLL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.2 4 0.6\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 113 1.2DL+1.2RLL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2\n")
        response.writelines("LOAD COMB 114 1.2DL+1.2RLL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 8 1.2\n")
        response.writelines("LOAD COMB 115 1.2DL+1.2RLL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 9 1.2\n")
        response.writelines("LOAD COMB 116 1.2DL+1.2RLL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 10 1.2\n")
        response.writelines("LOAD COMB 117 1.2DL+1.2RLL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 11 1.2\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 12 1.2\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 13 1.2\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 14 1.2\n")

        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+1.2+SLX\n")
        response.writelines("5 1.2 6 1.2 1 1.2\n")
        response.writelines("LOAD COMB 122 1.2DL+1.2RLL+1.2-SLX\n")
        response.writelines("5 1.2 6 1.2 2 1.2\n")
        response.writelines("LOAD COMB 123 1.2DL+1.2RLL+1.2+SLZ\n")
        response.writelines("5 1.2 6 1.2 3 1.2\n")
        response.writelines("LOAD COMB 124 1.2DL+1.2RLL+1.2-SLZ\n")
        response.writelines("5 1.2 6 1.2 4 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 125 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 7 1.5\n")
        response.writelines("LOAD COMB 126 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 127 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 128 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 129 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 130 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 131 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 132 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 133 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 134 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 135 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 136 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 137 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 7 1.5\n")
        response.writelines("LOAD COMB 138 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 139 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 140 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 141 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 142 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 143 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 144 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 145 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 146 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 147 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 148 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 149 1.2DL+1.2RLL\n")
        response.writelines("5 1.2 6 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 150 0.9DL+1.2RLL\n")
        response.writelines("5 0.9 6 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 151 1.0DL+0.35RLL\n")
        response.writelines("5 1.0 6 0.35\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 201 1.0DL+1.0RLL \n")
        response.writelines("5 1.0 6 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 202 1.0DL+0.8RLL+0.8WL+X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8\n")
        response.writelines("LOAD COMB 203 1.0DL+0.8RLL+0.8WL+X-CPI\n")
        response.writelines("5 1.0 6 0.8 8 0.8\n")
        response.writelines("LOAD COMB 204 1.0DL+0.8RLL+0.8WL-X+CPI\n")
        response.writelines("5 1.0 6 0.8 9 0.8\n")
        response.writelines("LOAD COMB 205 1.0DL+0.8RLL+0.8WL-X-CPI\n")
        response.writelines("5 1.0 6 0.8 10 0.8\n")
        response.writelines("LOAD COMB 206 1.0DL+0.8RLL+0.8WL+Z+CPI\n")
        response.writelines("5 1.0 6 0.8 11 0.8\n")
        response.writelines("LOAD COMB 207 1.0DL+0.8RLL+0.8WL-Z+CPI\n")
        response.writelines("5 1.0 6 0.8 12 0.8 \n")
        response.writelines("LOAD COMB 208 1.0DL+0.8RLL+0.8WL+Z-CPI\n")
        response.writelines("5 1.0 6 0.8 13 0.8\n")
        response.writelines("LOAD COMB 209 1.0DL+0.8RLL+0.8WL-Z-CPI\n")
        response.writelines("5 1.0 6 0.8 14 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 210 1.0DL+0.8RLL+0.8+SLX\n")
        response.writelines("5 1.0 6 0.8 1 0.8\n")
        response.writelines("LOAD COMB 211 1.0DL+0.8RLL+0.8-SLX\n")
        response.writelines("5 1.0 6 0.8 2 0.8\n")
        response.writelines("LOAD COMB 212 1.0DL+0.8RLL+0.8+SLZ\n")
        response.writelines("5 1.0 6 0.8 3 0.8\n")
        response.writelines("LOAD COMB 213 1.0DL+0.8RLL+0.8-SLZ\n")
        response.writelines("5 1.0 6 0.8 4 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 214 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0\n")
        response.writelines("LOAD COMB 215 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 216 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 217 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 218 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 219 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 220 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 221 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 222 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 223 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 224 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 225 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 151\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-MLL-WL':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE =='IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 MLL\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05MLL\n")
        response.writelines("5 1.5 6 1.5 7 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.05RLL+1.5MLL\n")
        response.writelines("5 1.5 6 1.05 7 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 102 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 0.6\n")
        response.writelines("LOAD COMB 103 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6\n")
        response.writelines("LOAD COMB 104 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6\n")
        response.writelines("LOAD COMB 105 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6\n")
        response.writelines("LOAD COMB 106 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6\n")
        response.writelines("LOAD COMB 107 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 110 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6\n")
        response.writelines("LOAD COMB 111 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6\n")
        response.writelines("LOAD COMB 112 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6\n")
        response.writelines("LOAD COMB 113 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6\n")
        response.writelines("LOAD COMB 114 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6\n")
        response.writelines("LOAD COMB 115 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6\n")
        response.writelines("LOAD COMB 116 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6\n")
        response.writelines("LOAD COMB 117 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+1.05MLL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+1.05MLL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+1.05MLL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6\n")
        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+1.05MLL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 122 1.2DL+1.05RLL+1.2MLL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6\n")
        response.writelines("LOAD COMB 123 1.2DL+1.05RLL+1.2MLL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6\n")
        response.writelines("LOAD COMB 124 1.2DL+1.05RLL+1.2MLL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6\n")
        response.writelines("LOAD COMB 125 1.2DL+1.05RLL+1.2MLL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 126 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2\n")
        response.writelines("LOAD COMB 131 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2\n")
        response.writelines("LOAD COMB 132 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2\n")
        response.writelines("LOAD COMB 133 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 134 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2\n")
        response.writelines("LOAD COMB 135 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2\n")
        response.writelines("LOAD COMB 136 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2\n")
        response.writelines("LOAD COMB 137 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2\n")
        response.writelines("LOAD COMB 138 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2\n")
        response.writelines("LOAD COMB 139 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2\n")
        response.writelines("LOAD COMB 140 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2\n")
        response.writelines("LOAD COMB 141 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2\n")

        response.writelines("LOAD COMB 142 1.2DL+1.2RLL+0.53MLL+1.2+SLX\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2\n")
        response.writelines("LOAD COMB 143 1.2DL+1.2RLL+0.53MLL+1.2-SLX\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2\n")
        response.writelines("LOAD COMB 144 1.2DL+1.2RLL+0.53MLL+1.2+SLZ\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2\n")
        response.writelines("LOAD COMB 145 1.2DL+1.2RLL+0.53MLL+1.2-SLZ\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 146 1.2DL+0.53RLL+1.2MLL+1.2+SLX\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2\n")
        response.writelines("LOAD COMB 147 1.2DL+0.53RLL+1.2MLL+1.2-SLX\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2\n")
        response.writelines("LOAD COMB 148 1.2DL+0.53RLL+1.2MLL+1.2+SLZ\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2\n")
        response.writelines("LOAD COMB 149 1.2DL+0.53RLL+1.2MLL+1.2-SLZ\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2\n")
        response.writelines("****\n")




        response.writelines("LOAD COMB 150 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 151 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 152 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 153 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 154 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 155 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 156 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 157 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 158 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 159 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 160 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 161 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 162 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 163 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 164 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 165 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 166 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 167 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 168 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 169 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 170 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 171 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 172 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 173 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 174 1.2DL+1.2RLL\n")
        response.writelines("5 1.2 6 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 175 0.9DL+1.2RLL\n")
        response.writelines("5 0.9 6 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 176 1.0DL+0.35RLL+0.35MLL\n")
        response.writelines("5 1.0 6 0.35 7 0.35\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 201 1.0DL+1.0RLL+1.0MLL \n")
        response.writelines("5 1.0 6 1.0 7 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 202 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 0.8\n")
        response.writelines("LOAD COMB 203 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8\n")
        response.writelines("LOAD COMB 204 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8\n")
        response.writelines("LOAD COMB 205 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8\n")
        response.writelines("LOAD COMB 206 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8\n")
        response.writelines("LOAD COMB 207 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 \n")
        response.writelines("LOAD COMB 208 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8\n")
        response.writelines("LOAD COMB 209 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 210 1.0DL+0.8RLL+0.8MLL+0.8+SLX\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8\n")
        response.writelines("LOAD COMB 211 1.0DL+0.8RLL+0.8MLL+0.8-SLX\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8\n")
        response.writelines("LOAD COMB 212 1.0DL+0.8RLL+0.8MLL+0.8+SLZ\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8\n")
        response.writelines("LOAD COMB 213 1.0DL+0.8RLL+0.8MLL+0.8-SLZ\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 214 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0\n")
        response.writelines("LOAD COMB 215 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 216 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 217 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 218 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 219 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 220 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 221 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 222 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 223 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 224 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 225 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 176\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-WL-CRL(1)':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 CRL1\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 CRL2\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 17 CRL3\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 18 CRL4\n")

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.5 15 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.5RLL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.5 16 1.05\n")
        response.writelines("LOAD COMB 102 1.5DL+1.5RLL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.5 17 1.05\n")
        response.writelines("LOAD COMB 103 1.5DL+1.5RLL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.5 18 1.05\n")

        response.writelines("LOAD COMB 104 1.5DL+1.05RLL+1.5CRL1\n")
        response.writelines("5 1.5 6 1.05 15 1.5\n")
        response.writelines("LOAD COMB 105 1.5DL+1.05RLL+1.5CRL2\n")
        response.writelines("5 1.5 6 1.05 16 1.5\n")
        response.writelines("LOAD COMB 106 1.5DL+1.05RLL+1.5CRL3\n")
        response.writelines("5 1.5 6 1.05 17 1.5\n")
        response.writelines("LOAD COMB 107 1.5DL+1.05RLL+1.5CRL4\n")
        response.writelines("5 1.5 6 1.05 18 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.6 15 1.05\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 8 0.6 15 1.05\n")
        response.writelines("LOAD COMB 110 1.2DL+1.2RLL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 9 0.6 15 1.05\n")
        response.writelines("LOAD COMB 111 1.2DL+1.2RLL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 10 0.6 15 1.05\n")
        response.writelines("LOAD COMB 112 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 11 0.6 15 1.05\n")
        response.writelines("LOAD COMB 113 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 12 0.6 15 1.05\n")
        response.writelines("LOAD COMB 114 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 13 0.6 15 1.05\n")
        response.writelines("LOAD COMB 115 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 14 0.6 15 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 116 1.2DL+1.2RLL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.6 16 1.05\n")
        response.writelines("LOAD COMB 117 1.2DL+1.2RLL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 122 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 123 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 14 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 124 1.2DL+1.2RLL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.6 17 1.05\n")
        response.writelines("LOAD COMB 125 1.2DL+1.2RLL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 126 1.2DL+1.2RLL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 131 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 14 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 132 1.2DL+1.2RLL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.6 18 1.05\n")
        response.writelines("LOAD COMB 133 1.2DL+1.2RLL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 8 0.6 18 1.05\n")
        response.writelines("LOAD COMB 134 1.2DL+1.2RLL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 135 1.2DL+1.2RLL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 136 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 137 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 138 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 139 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 14 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 140 1.2DL+1.05RLL+0.6WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 0.6 15 1.2\n")
        response.writelines("LOAD COMB 141 1.2DL+1.05RLL+0.6WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 8 0.6 15 1.2\n")
        response.writelines("LOAD COMB 142 1.2DL+1.05RLL+0.6WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 9 0.6 15 1.2\n")
        response.writelines("LOAD COMB 143 1.2DL+1.05RLL+0.6WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 10 0.6 15 1.2\n")
        response.writelines("LOAD COMB 144 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 11 0.6 15 1.2\n")
        response.writelines("LOAD COMB 145 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 12 0.6 15 1.2\n")
        response.writelines("LOAD COMB 146 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 13 0.6 15 1.2\n")
        response.writelines("LOAD COMB 147 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 14 0.6 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 148 1.2DL+1.05RLL+0.6WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 0.6 16 1.2\n")
        response.writelines("LOAD COMB 149 1.2DL+1.05RLL+0.6WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 8 0.6 16 1.2\n")
        response.writelines("LOAD COMB 150 1.2DL+1.05RLL+0.6WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 9 0.6 16 1.2\n")
        response.writelines("LOAD COMB 151 1.2DL+1.05RLL+0.6WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 10 0.6 16 1.2\n")
        response.writelines("LOAD COMB 152 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 11 0.6 16 1.2\n")
        response.writelines("LOAD COMB 153 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 12 0.6 16 1.2\n")
        response.writelines("LOAD COMB 154 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 13 0.6 16 1.2\n")
        response.writelines("LOAD COMB 155 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 14 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 156 1.2DL+1.05RLL+0.6WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 0.6 17 1.2\n")
        response.writelines("LOAD COMB 157 1.2DL+1.05RLL+0.6WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 8 0.6 17 1.2\n")
        response.writelines("LOAD COMB 158 1.2DL+1.05RLL+0.6WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 159 1.2DL+1.05RLL+0.6WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 160 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 161 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 162 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 163 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 14 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 164 1.2DL+1.05RLL+0.6WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 0.6 18 1.2\n")
        response.writelines("LOAD COMB 165 1.2DL+1.05RLL+0.6WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 8 0.6 18 1.2\n")
        response.writelines("LOAD COMB 166 1.2DL+1.05RLL+0.6WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 9 0.6 18 1.2\n")
        response.writelines("LOAD COMB 167 1.2DL+1.05RLL+0.6WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 10 0.6 18 1.2\n")
        response.writelines("LOAD COMB 168 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 11 0.6 18 1.2\n")
        response.writelines("LOAD COMB 169 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 12 0.6 18 1.2\n")
        response.writelines("LOAD COMB 170 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 13 0.6 18 1.2\n")
        response.writelines("LOAD COMB 171 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 14 0.6 18 1.2\n")

        response.writelines("LOAD COMB 172 1.2DL+1.2RLL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 1 0.6 15 1.05\n")
        response.writelines("LOAD COMB 173 1.2DL+1.2RLL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 2 0.6 15 1.05\n")
        response.writelines("LOAD COMB 174 1.2DL+1.2RLL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 3 0.6 15 1.05\n")
        response.writelines("LOAD COMB 175 1.2DL+1.2RLL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 4 0.6 15 1.05\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 176 1.2DL+1.2RLL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 177 1.2DL+1.2RLL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 178 1.2DL+1.2RLL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 179 1.2DL+1.2RLL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 4 0.6 16 1.05\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 180 1.2DL+1.2RLL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 181 1.2DL+1.2RLL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 182 1.2DL+1.2RLL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 183 1.2DL+1.2RLL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 4 0.6 17 1.05\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 184 1.2DL+1.2RLL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 185 1.2DL+1.2RLL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 186 1.2DL+1.2RLL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 187 1.2DL+1.2RLL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 4 0.6 18 1.05\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 188 1.2DL+1.05RLL+0.6+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 1 0.6 15 1.2\n")
        response.writelines("LOAD COMB 189 1.2DL+1.05RLL+0.6-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 2 0.6 15 1.2\n")
        response.writelines("LOAD COMB 190 1.2DL+1.05RLL+0.6+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 3 0.6 15 1.2\n")
        response.writelines("LOAD COMB 191 1.2DL+1.05RLL+0.6-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 4 0.6 15 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 192 1.2DL+1.05RLL+0.6+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 1 0.6 16 1.2\n")
        response.writelines("LOAD COMB 193 1.2DL+1.05RLL+0.6-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 2 0.6 16 1.2\n")
        response.writelines("LOAD COMB 194 1.2DL+1.05RLL+0.6+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 3 0.6 16 1.2\n")
        response.writelines("LOAD COMB 195 1.2DL+1.05RLL+0.6-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 4 0.6 16 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 196 1.2DL+1.05RLL+0.6+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 197 1.2DL+1.05RLL+0.6-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 198 1.2DL+1.05RLL+0.6+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 199 1.2DL+1.05RLL+0.6-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 4 0.6 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 200 1.2DL+1.05RLL+0.6+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 1 0.6 18 1.2\n")
        response.writelines("LOAD COMB 201 1.2DL+1.05RLL+0.6-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 2 0.6 18 1.2\n")
        response.writelines("LOAD COMB 202 1.2DL+1.05RLL+0.6+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 3 0.6 18 1.2\n")
        response.writelines("LOAD COMB 203 1.2DL+1.05RLL+0.6-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 4 0.6 18 1.2\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 204 1.2DL+1.2RLL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.53\n")
        response.writelines("LOAD COMB 205 1.2DL+1.2RLL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 8 1.2 15 0.53\n")
        response.writelines("LOAD COMB 206 1.2DL+1.2RLL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 9 1.2 15 0.53\n")
        response.writelines("LOAD COMB 207 1.2DL+1.2RLL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 10 1.2 15 0.53\n")
        response.writelines("LOAD COMB 208 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 11 1.2 15 0.53\n")
        response.writelines("LOAD COMB 209 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 12 1.2 15 0.53\n")
        response.writelines("LOAD COMB 210 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 13 1.2 15 0.53\n")
        response.writelines("LOAD COMB 211 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 14 1.2 15 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 212 1.2DL+1.2RLL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 16 0.53\n")
        response.writelines("LOAD COMB 213 1.2DL+1.2RLL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 214 1.2DL+1.2RLL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 215 1.2DL+1.2RLL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 216 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 217 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 218 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 219 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 14 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 220 1.2DL+1.2RLL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 17 0.53\n")
        response.writelines("LOAD COMB 221 1.2DL+1.2RLL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 222 1.2DL+1.2RLL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 223 1.2DL+1.2RLL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 224 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 225 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 226 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 227 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 14 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 228 1.2DL+1.2RLL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 18 0.53\n")
        response.writelines("LOAD COMB 229 1.2DL+1.2RLL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 8 1.2 18 0.53\n")
        response.writelines("LOAD COMB 230 1.2DL+1.2RLL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 231 1.2DL+1.2RLL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 232 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 233 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 234 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 235 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 14 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 236 1.2DL+0.53RLL+1.2WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2\n")
        response.writelines("LOAD COMB 237 1.2DL+0.53RLL+1.2WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 8 1.2 15 1.2\n")
        response.writelines("LOAD COMB 238 1.2DL+0.53RLL+1.2WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 9 1.2 15 1.2\n")
        response.writelines("LOAD COMB 239 1.2DL+0.53RLL+1.2WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 10 1.2 15 1.2\n")
        response.writelines("LOAD COMB 240 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 11 1.2 15 1.2\n")
        response.writelines("LOAD COMB 241 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 12 1.2 15 1.2\n")
        response.writelines("LOAD COMB 242 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 13 1.2 15 1.2\n")
        response.writelines("LOAD COMB 243 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 14 1.2 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 244 1.2DL+0.53RLL+1.2WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2\n")
        response.writelines("LOAD COMB 245 1.2DL+0.53RLL+1.2WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 8 1.2 16 1.2\n")
        response.writelines("LOAD COMB 246 1.2DL+0.53RLL+1.2WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 9 1.2 16 1.2\n")
        response.writelines("LOAD COMB 247 1.2DL+0.53RLL+1.2WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 10 1.2 16 1.2\n")
        response.writelines("LOAD COMB 248 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 11 1.2 16 1.2\n")
        response.writelines("LOAD COMB 249 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 12 1.2 16 1.2\n")
        response.writelines("LOAD COMB 250 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 13 1.2 16 1.2\n")
        response.writelines("LOAD COMB 251 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 14 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 252 1.2DL+0.53RLL+1.2WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 17 1.2\n")
        response.writelines("LOAD COMB 253 1.2DL+0.53RLL+1.2WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 8 1.2 17 1.2\n")
        response.writelines("LOAD COMB 254 1.2DL+0.53RLL+1.2WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 255 1.2DL+0.53RLL+1.2WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 256 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 257 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 258 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 259 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 14 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 260 1.2DL+0.53RLL+1.2WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 18 1.2\n")
        response.writelines("LOAD COMB 261 1.2DL+0.53RLL+1.2WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 8 1.2 18 1.2\n")
        response.writelines("LOAD COMB 262 1.2DL+0.53RLL+1.2WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 9 1.2 18 1.2\n")
        response.writelines("LOAD COMB 263 1.2DL+0.53RLL+1.2WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 10 1.2 18 1.2\n")
        response.writelines("LOAD COMB 264 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 11 1.2 18 1.2\n")
        response.writelines("LOAD COMB 265 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 12 1.2 18 1.2\n")
        response.writelines("LOAD COMB 266 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 13 1.2 18 1.2\n")
        response.writelines("LOAD COMB 267 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 14 1.2 18 1.2\n")

        response.writelines("LOAD COMB 268 1.2DL+1.2RLL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 1 1.2 15 0.53\n")
        response.writelines("LOAD COMB 269 1.2DL+1.2RLL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 2 1.2 15 0.53\n")
        response.writelines("LOAD COMB 270 1.2DL+1.2RLL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 3 1.2 15 0.53\n")
        response.writelines("LOAD COMB 271 1.2DL+1.2RLL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 4 1.2 15 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 272 1.2DL+1.2RLL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 273 1.2DL+1.2RLL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 274 1.2DL+1.2RLL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 275 1.2DL+1.2RLL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 4 1.2 16 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 276 1.2DL+1.2RLL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 277 1.2DL+1.2RLL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 278 1.2DL+1.2RLL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 279 1.2DL+1.2RLL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 280 1.2DL+1.2RLL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 281 1.2DL+1.2RLL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 282 1.2DL+1.2RLL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 283 1.2DL+1.2RLL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 284 1.2DL+0.53RLL+1.2+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 1 1.2 15 1.2\n")
        response.writelines("LOAD COMB 285 1.2DL+0.53RLL+1.2-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 2 1.2 15 1.2\n")
        response.writelines("LOAD COMB 286 1.2DL+0.53RLL+1.2+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 3 1.2 15 1.2\n")
        response.writelines("LOAD COMB 287 1.2DL+0.53RLL+1.2-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 4 1.2 15 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 288 1.2DL+0.53RLL+1.2+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 1 1.2 16 1.2\n")
        response.writelines("LOAD COMB 289 1.2DL+0.53RLL+1.2-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 2 1.2 16 1.2\n")
        response.writelines("LOAD COMB 290 1.2DL+0.53RLL+1.2+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 3 1.2 16 1.2\n")
        response.writelines("LOAD COMB 291 1.2DL+0.53RLL+1.2-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 4 1.2 16 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 292 1.2DL+0.53RLL+1.2+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 293 1.2DL+0.53RLL+1.2-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 294 1.2DL+0.53RLL+1.2+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 295 1.2DL+0.53RLL+1.2-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 296 1.2DL+0.53RLL+1.2+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 1 1.2 18 1.2\n")
        response.writelines("LOAD COMB 297 1.2DL+0.53RLL+1.2-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 2 1.2 18 1.2\n")
        response.writelines("LOAD COMB 298 1.2DL+0.53RLL+1.2+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 3 1.2 18 1.2\n")
        response.writelines("LOAD COMB 299 1.2DL+0.53RLL+1.2-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 4 1.2 18 1.2\n")
        response.writelines("****\n")


        response.writelines("LOAD COMB 300 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 7 1.5\n")
        response.writelines("LOAD COMB 301 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 302 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 303 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 304 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 305 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 306 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 307 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 308 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 309 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 310 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 311 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 312 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 7 1.5\n")
        response.writelines("LOAD COMB 313 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 314 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 315 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 316 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 317 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 318 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 319 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 320 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 321 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 322 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 323 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 324 1.2DL+1.2RLL+1.2CRL1\n")
        response.writelines("5 1.2 6 1.2 15 1.2\n")
        response.writelines("LOAD COMB 325 1.2DL+1.2RLL+1.2CRL2\n")
        response.writelines("5 1.2 6 1.2 16 1.2\n")
        response.writelines("LOAD COMB 326 1.2DL+1.2RLL+1.2CRL3\n")
        response.writelines("5 1.2 6 1.2 17 1.2\n")
        response.writelines("LOAD COMB 327 1.2DL+1.2RLL+1.2CRL4\n")
        response.writelines("5 1.2 6 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 328 0.9DL+1.2RLL+1.2CRL1\n")
        response.writelines("5 0.9 6 1.2 15 1.2\n")
        response.writelines("****\n")
        response.writelines("LOAD COMB 329 0.9DL+1.2RLL+1.2CRL2\n")
        response.writelines("5 0.9 6 1.2 16 1.2\n")
        response.writelines("****\n")
        response.writelines("LOAD COMB 330 0.9DL+1.2RLL+1.2CRL3\n")
        response.writelines("5 0.9 6 1.2 17 1.2\n")
        response.writelines("****\n")
        response.writelines("LOAD COMB 331 0.9DL+1.2RLL+1.2CRL4\n")
        response.writelines("5 0.9 6 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 332 1.0DL+0.35RLL+0.35CRL1\n")
        response.writelines("5 1.0 6 0.35 15 0.35\n")
        response.writelines("LOAD COMB 333 1.0DL+0.35RLL+0.35CRL2\n")
        response.writelines("5 1.0 6 0.35 16 0.35\n")
        response.writelines("LOAD COMB 334 1.0DL+0.35RLL+0.35CRL3\n")
        response.writelines("5 1.0 6 0.35 17 0.35\n")
        response.writelines("LOAD COMB 335 1.0DL+0.35RLL+0.35CRL4\n")
        response.writelines("5 1.0 6 0.35 18 0.35\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 501 1.0DL+1.0RLL+1.0CRL1 \n")
        response.writelines("5 1.0 6 1.0 15 1.0\n")
        response.writelines("LOAD COMB 502 1.0DL+1.0RLL+1.0CRL2 \n")
        response.writelines("5 1.0 6 1.0 16 1.0\n")
        response.writelines("LOAD COMB 503 1.0DL+1.0RLL+1.0CRL3 \n")
        response.writelines("5 1.0 6 1.0 17 1.0\n")
        response.writelines("LOAD COMB 504 1.0DL+1.0RLL+1.0CRL4 \n")
        response.writelines("5 1.0 6 1.0 18 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 505 1.0DL+0.8RLL+0.8WL+X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8\n")
        response.writelines("LOAD COMB 506 1.0DL+0.8RLL+0.8WL+X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 8 0.8 15 0.8\n")
        response.writelines("LOAD COMB 507 1.0DL+0.8RLL+0.8WL-X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 9 0.8 15 0.8\n")
        response.writelines("LOAD COMB 508 1.0DL+0.8RLL+0.8WL-X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 10 0.8 15 0.8\n")
        response.writelines("LOAD COMB 509 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 11 0.8 15 0.8\n")
        response.writelines("LOAD COMB 510 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 12 0.8 15 0.8 \n")
        response.writelines("LOAD COMB 511 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 13 0.8 15 0.8\n")
        response.writelines("LOAD COMB 512 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 14 0.8 15 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 513 1.0DL+0.8RLL+0.8WL+X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8\n")
        response.writelines("LOAD COMB 514 1.0DL+0.8RLL+0.8WL+X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 8 0.8 16 0.8\n")
        response.writelines("LOAD COMB 515 1.0DL+0.8RLL+0.8WL-X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 9 0.8 16 0.8\n")
        response.writelines("LOAD COMB 516 1.0DL+0.8RLL+0.8WL-X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 10 0.8 16 0.8\n")
        response.writelines("LOAD COMB 517 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 11 0.8 16 0.8\n")
        response.writelines("LOAD COMB 518 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 12 0.8 16 0.8 \n")
        response.writelines("LOAD COMB 519 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 13 0.8 16 0.8\n")
        response.writelines("LOAD COMB 520 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 14 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 521 1.0DL+0.8RLL+0.8WL+X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 17 0.8\n")
        response.writelines("LOAD COMB 522 1.0DL+0.8RLL+0.8WL+X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 8 0.8 17 0.8\n")
        response.writelines("LOAD COMB 523 1.0DL+0.8RLL+0.8WL-X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 524 1.0DL+0.8RLL+0.8WL-X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 525 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 526 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 12 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 527 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 13 0.8 17 0.8\n")
        response.writelines("LOAD COMB 528 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 14 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 529 1.0DL+0.8RLL+0.8WL+X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 18 0.8\n")
        response.writelines("LOAD COMB 530 1.0DL+0.8RLL+0.8WL+X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 8 0.8 18 0.8\n")
        response.writelines("LOAD COMB 531 1.0DL+0.8RLL+0.8WL-X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 9 0.8 18 0.8\n")
        response.writelines("LOAD COMB 532 1.0DL+0.8RLL+0.8WL-X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 10 0.8 18 0.8\n")
        response.writelines("LOAD COMB 533 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 11 0.8 18 0.8\n")
        response.writelines("LOAD COMB 534 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 12 0.8 18 0.8 \n")
        response.writelines("LOAD COMB 535 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 13 0.8 18 0.8\n")
        response.writelines("LOAD COMB 536 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 14 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 537 1.0DL+0.8RLL+0.8+SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 1 0.8 15 0.8\n")
        response.writelines("LOAD COMB 538 1.0DL+0.8RLL+0.8-SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 2 0.8 15 0.8\n")
        response.writelines("LOAD COMB 539 1.0DL+0.8RLL+0.8+SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 3 0.8 15 0.8\n")
        response.writelines("LOAD COMB 540 1.0DL+0.8RLL+0.8-SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 4 0.8 15 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 541 1.0DL+0.8RLL+0.8+SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 1 0.8 16 0.8\n")
        response.writelines("LOAD COMB 542 1.0DL+0.8RLL+0.8-SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 2 0.8 16 0.8\n")
        response.writelines("LOAD COMB 543 1.0DL+0.8RLL+0.8+SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 3 0.8 16 0.8\n")
        response.writelines("LOAD COMB 544 1.0DL+0.8RLL+0.8-SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 4 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 545 1.0DL+0.8RLL+0.8+SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 546 1.0DL+0.8RLL+0.8-SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 547 1.0DL+0.8RLL+0.8+SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 548 1.0DL+0.8RLL+0.8-SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 549 1.0DL+0.8RLL+0.8+SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 1 0.8 18 0.8\n")
        response.writelines("LOAD COMB 550 1.0DL+0.8RLL+0.8-SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 2 0.8 18 0.8\n")
        response.writelines("LOAD COMB 551 1.0DL+0.8RLL+0.8+SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 3 0.8 18 0.8\n")
        response.writelines("LOAD COMB 552 1.0DL+0.8RLL+0.8-SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 4 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 553 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0\n")
        response.writelines("LOAD COMB 554 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 555 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 556 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 557 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 558 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 559 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 560 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 561 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 562 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 563 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 564 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 335\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-MLL-WL-CRL(1)':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 MLL\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 CRL1\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 17 CRL2\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 18 CRL3\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 19 CRL4\n")

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05MLL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.5 7 1.05 16 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.5RLL+1.05MLL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.5 7 1.05 17 1.05\n")
        response.writelines("LOAD COMB 102 1.5DL+1.5RLL+1.05MLL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.5 7 1.05 18 1.05\n")
        response.writelines("LOAD COMB 103 1.5DL+1.5RLL+1.05MLL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.5 7 1.05 19 1.05\n")

        response.writelines("LOAD COMB 104 1.5DL+1.05RLL+1.5MLL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.05 7 1.5 16 1.05\n")
        response.writelines("LOAD COMB 105 1.5DL+1.05RLL+1.5MLL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.05 7 1.5 17 1.05\n")
        response.writelines("LOAD COMB 106 1.5DL+1.05RLL+1.5MLL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.05 7 1.5 18 1.05\n")
        response.writelines("LOAD COMB 107 1.5DL+1.05RLL+1.5MLL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.05 7 1.5 19 1.05\n")

        response.writelines("LOAD COMB 108 1.5DL+1.05RLL+1.05MLL+1.5CRL1\n")
        response.writelines("5 1.5 6 1.05 7 1.05 16 1.5\n")
        response.writelines("LOAD COMB 109 1.5DL+1.05RLL+1.05MLL+1.5CRL2\n")
        response.writelines("5 1.5 6 1.05 7 1.05 17 1.5\n")
        response.writelines("LOAD COMB 110 1.5DL+1.05RLL+1.05MLL+1.5CRL3\n")
        response.writelines("5 1.5 6 1.05 7 1.05 18 1.5\n")
        response.writelines("LOAD COMB 111 1.5DL+1.05RLL+1.05MLL+1.5CRL4\n")
        response.writelines("5 1.5 6 1.05 7 1.05 19 1.5\n")



        response.writelines("****\n")
        response.writelines("LOAD COMB 112 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 113 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 114 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 115 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 116 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 117 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 16 1.05\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 122 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 123 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 124 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 125 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 126 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 0.6 18 1.05\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 131 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 132 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 133 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 134 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 135 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 136 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 0.6 19 1.05\n")
        response.writelines("LOAD COMB 137 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 19 1.05\n")
        response.writelines("LOAD COMB 138 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 19 1.05\n")
        response.writelines("LOAD COMB 139 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 19 1.05\n")
        response.writelines("LOAD COMB 140 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 19 1.05\n")
        response.writelines("LOAD COMB 141 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 19 1.05\n")
        response.writelines("LOAD COMB 142 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 19 1.05\n")
        response.writelines("LOAD COMB 143 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 144 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 145 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 146 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 147 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 148 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 149 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 150 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 16 1.05\n")
        response.writelines("LOAD COMB 151 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 152 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 153 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 154 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 155 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 156 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 157 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 158 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 159 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 160 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 18 1.05\n")
        response.writelines("LOAD COMB 161 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 162 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 163 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 164 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 165 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 166 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 167 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 168 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 19 1.05\n")
        response.writelines("LOAD COMB 169 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 19 1.05\n")
        response.writelines("LOAD COMB 170 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 19 1.05\n")
        response.writelines("LOAD COMB 171 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 19 1.05\n")
        response.writelines("LOAD COMB 172 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 19 1.05\n")
        response.writelines("LOAD COMB 173 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 19 1.05\n")
        response.writelines("LOAD COMB 174 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 19 1.05\n")
        response.writelines("LOAD COMB 175 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 176 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 0.6 16 1.2\n")
        response.writelines("LOAD COMB 177 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 16 1.2\n")
        response.writelines("LOAD COMB 178 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 16 1.2\n")
        response.writelines("LOAD COMB 179 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 16 1.2\n")
        response.writelines("LOAD COMB 180 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 16 1.2\n")
        response.writelines("LOAD COMB 181 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 16 1.2\n")
        response.writelines("LOAD COMB 182 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 16 1.2\n")
        response.writelines("LOAD COMB 183 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 184 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 0.6 17 1.2\n")
        response.writelines("LOAD COMB 185 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 186 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 187 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 188 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 189 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 190 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 191 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 192 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 0.6 18 1.2\n")
        response.writelines("LOAD COMB 193 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 18 1.2\n")
        response.writelines("LOAD COMB 194 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 18 1.2\n")
        response.writelines("LOAD COMB 195 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 18 1.2\n")
        response.writelines("LOAD COMB 196 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 18 1.2\n")
        response.writelines("LOAD COMB 197 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 18 1.2\n")
        response.writelines("LOAD COMB 198 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 18 1.2\n")
        response.writelines("LOAD COMB 199 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 200 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 0.6 19 1.2\n")
        response.writelines("LOAD COMB 201 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 19 1.2\n")
        response.writelines("LOAD COMB 202 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 19 1.2\n")
        response.writelines("LOAD COMB 203 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 19 1.2\n")
        response.writelines("LOAD COMB 204 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 19 1.2\n")
        response.writelines("LOAD COMB 205 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 19 1.2\n")
        response.writelines("LOAD COMB 206 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 19 1.2\n")
        response.writelines("LOAD COMB 207 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 208 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 209 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 210 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 211 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 212 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 213 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 214 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 215 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 216 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 217 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 218 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 219 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 220 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 19 1.05\n")
        response.writelines("LOAD COMB 221 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 19 1.05\n")
        response.writelines("LOAD COMB 222 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 19 1.05\n")
        response.writelines("LOAD COMB 223 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 224 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 225 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 226 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 227 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 228 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 229 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 230 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 231 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 232 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 233 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 234 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 235 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 236 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 19 1.05\n")
        response.writelines("LOAD COMB 237 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 19 1.05\n")
        response.writelines("LOAD COMB 238 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 19 1.05\n")
        response.writelines("LOAD COMB 239 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 240 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 16 1.2\n")
        response.writelines("LOAD COMB 241 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 16 1.2\n")
        response.writelines("LOAD COMB 242 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 16 1.2\n")
        response.writelines("LOAD COMB 243 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 244 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 245 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 246 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 247 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 248 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 18 1.2\n")
        response.writelines("LOAD COMB 249 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 18 1.2\n")
        response.writelines("LOAD COMB 250 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 18 1.2\n")
        response.writelines("LOAD COMB 251 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 252 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 19 1.2\n")
        response.writelines("LOAD COMB 253 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 19 1.2\n")
        response.writelines("LOAD COMB 254 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 19 1.2\n")
        response.writelines("LOAD COMB 255 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 256 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 257 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 258 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 259 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 260 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 261 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 262 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 16 0.53\n")
        response.writelines("LOAD COMB 263 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 264 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 265 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 266 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 267 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 268 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 269 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 270 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 271 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 272 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 18 0.53\n")
        response.writelines("LOAD COMB 273 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 274 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 275 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 276 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 277 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 278 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 279 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 280 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 19 0.53\n")
        response.writelines("LOAD COMB 281 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 19 0.53\n")
        response.writelines("LOAD COMB 282 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 19 0.53\n")
        response.writelines("LOAD COMB 283 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 19 0.53\n")
        response.writelines("LOAD COMB 284 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 19 0.53\n")
        response.writelines("LOAD COMB 285 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 19 0.53\n")
        response.writelines("LOAD COMB 286 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 19 0.53\n")
        response.writelines("LOAD COMB 287 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 288 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 289 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 290 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 291 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 292 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 293 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 294 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 16 0.53\n")
        response.writelines("LOAD COMB 295 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 296 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 297 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 298 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 299 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 300 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 301 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 302 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 303 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 304 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 18 0.53\n")
        response.writelines("LOAD COMB 305 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 306 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 307 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 308 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 309 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 310 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 311 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 312 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 19 0.53\n")
        response.writelines("LOAD COMB 313 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 19 0.53\n")
        response.writelines("LOAD COMB 314 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 19 0.53\n")
        response.writelines("LOAD COMB 315 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 19 0.53\n")
        response.writelines("LOAD COMB 316 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 19 0.53\n")
        response.writelines("LOAD COMB 317 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 19 0.53\n")
        response.writelines("LOAD COMB 318 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 19 0.53\n")
        response.writelines("LOAD COMB 319 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 320 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 16 1.2\n")
        response.writelines("LOAD COMB 321 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 16 1.2\n")
        response.writelines("LOAD COMB 322 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 16 1.2\n")
        response.writelines("LOAD COMB 323 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 16 1.2\n")
        response.writelines("LOAD COMB 324 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 16 1.2\n")
        response.writelines("LOAD COMB 325 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 16 1.2\n")
        response.writelines("LOAD COMB 326 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 16 1.2\n")
        response.writelines("LOAD COMB 327 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 328 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 17 1.2\n")
        response.writelines("LOAD COMB 329 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 330 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 331 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 332 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 333 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 334 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 335 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 336 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 18 1.2\n")
        response.writelines("LOAD COMB 337 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 18 1.2\n")
        response.writelines("LOAD COMB 338 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 18 1.2\n")
        response.writelines("LOAD COMB 339 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 18 1.2\n")
        response.writelines("LOAD COMB 340 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 18 1.2\n")
        response.writelines("LOAD COMB 341 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 18 1.2\n")
        response.writelines("LOAD COMB 342 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 18 1.2\n")
        response.writelines("LOAD COMB 343 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 344 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 19 1.2\n")
        response.writelines("LOAD COMB 345 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 19 1.2\n")
        response.writelines("LOAD COMB 346 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 19 1.2\n")
        response.writelines("LOAD COMB 347 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 19 1.2\n")
        response.writelines("LOAD COMB 348 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 19 1.2\n")
        response.writelines("LOAD COMB 349 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 19 1.2\n")
        response.writelines("LOAD COMB 350 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 19 1.2\n")
        response.writelines("LOAD COMB 351 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 19 1.2\n")

        response.writelines("LOAD COMB 352 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 353 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 354 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 355 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 16 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 356 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 357 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 358 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 359 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 360 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 361 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 362 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 363 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 364 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 19 0.53\n")
        response.writelines("LOAD COMB 365 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 19 0.53\n")
        response.writelines("LOAD COMB 366 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 19 0.53\n")
        response.writelines("LOAD COMB 367 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 19 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 368 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 369 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 370 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 371 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 16 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 372 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 373 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 374 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 375 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 376 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 377 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 378 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 379 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 380 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 19 0.53\n")
        response.writelines("LOAD COMB 381 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 19 0.53\n")
        response.writelines("LOAD COMB 382 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 19 0.53\n")
        response.writelines("LOAD COMB 383 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 19 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 384 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 16 1.2\n")
        response.writelines("LOAD COMB 385 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 16 1.2\n")
        response.writelines("LOAD COMB 386 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 16 1.2\n")
        response.writelines("LOAD COMB 387 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 16 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 388 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 389 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 390 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 391 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 392 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 18 1.2\n")
        response.writelines("LOAD COMB 393 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 18 1.2\n")
        response.writelines("LOAD COMB 394 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 18 1.2\n")
        response.writelines("LOAD COMB 395 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 18 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 396 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 19 1.2\n")
        response.writelines("LOAD COMB 397 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 19 1.2\n")
        response.writelines("LOAD COMB 398 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 19 1.2\n")
        response.writelines("LOAD COMB 399 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 19 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 400 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 401 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 402 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 403 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 404 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 405 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 406 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 407 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 408 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 409 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 410 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 411 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 412 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 413 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 414 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 415 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 416 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 417 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 418 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 419 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 420 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 421 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 422 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 423 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 424 1.2DL+1.2RLL+1.2CRL1\n")
        response.writelines("5 1.2 6 1.2 16 1.2\n")
        response.writelines("LOAD COMB 425 1.2DL+1.2RLL+1.2CRL2\n")
        response.writelines("5 1.2 6 1.2 17 1.2\n")
        response.writelines("LOAD COMB 426 1.2DL+1.2RLL+1.2CRL3\n")
        response.writelines("5 1.2 6 1.2 18 1.2\n")
        response.writelines("LOAD COMB 427 1.2DL+1.2RLL+1.2CRL4\n")
        response.writelines("5 1.2 6 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 428 0.9DL+1.2RLL+1.2CRL1\n")
        response.writelines("5 0.9 6 1.2 16 1.2\n")
        response.writelines("LOAD COMB 429 0.9DL+1.2RLL+1.2CRL2\n")
        response.writelines("5 0.9 6 1.2 17 1.2\n")
        response.writelines("LOAD COMB 430 0.9DL+1.2RLL+1.2CRL3\n")
        response.writelines("5 0.9 6 1.2 18 1.2\n")
        response.writelines("LOAD COMB 431 0.9DL+1.2RLL+1.2CRL4\n")
        response.writelines("5 0.9 6 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 432 1.0DL+0.35RLL+0.35MLL+1.2CRL1\n")
        response.writelines("5 1.0 6 0.35 7 0.35 16 1.2\n")
        response.writelines("LOAD COMB 433 1.0DL+0.35RLL+0.35MLL+1.2CRL2\n")
        response.writelines("5 1.0 6 0.35 7 0.35 17 1.2\n")
        response.writelines("LOAD COMB 434 1.0DL+0.35RLL+0.35MLL+1.2CRL3\n")
        response.writelines("5 1.0 6 0.35 7 0.35 18 1.2\n")
        response.writelines("LOAD COMB 435 1.0DL+0.35RLL+0.35MLL+1.2CRL4\n")
        response.writelines("5 1.0 6 0.35 7 0.35 19 1.2\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 501 1.0DL+1.0RLL+1.0MLL+1.2CRL1 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 16 1.2\n")
        response.writelines("LOAD COMB 502 1.0DL+1.0RLL+1.0MLL+1.2CR2 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 17 1.2\n")
        response.writelines("LOAD COMB 503 1.0DL+1.0RLL+1.0MLL+1.2CRL3 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 18 1.2\n")
        response.writelines("LOAD COMB 504 1.0DL+1.0RLL+1.0MLL+1.2CRL4 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 505 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 0.8 16 0.8\n")
        response.writelines("LOAD COMB 506 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 16 0.8\n")
        response.writelines("LOAD COMB 507 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 16 0.8\n")
        response.writelines("LOAD COMB 508 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 16 0.8\n")
        response.writelines("LOAD COMB 509 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 16 0.8\n")
        response.writelines("LOAD COMB 510 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 16 0.8 \n")
        response.writelines("LOAD COMB 511 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 16 0.8\n")
        response.writelines("LOAD COMB 512 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 513 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 0.8 17 0.8\n")
        response.writelines("LOAD COMB 514 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 515 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 516 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 517 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 518 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 519 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 17 0.8\n")
        response.writelines("LOAD COMB 520 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 521 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 0.8 18 0.8\n")
        response.writelines("LOAD COMB 522 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 18 0.8\n")
        response.writelines("LOAD COMB 523 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 18 0.8\n")
        response.writelines("LOAD COMB 524 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 18 0.8\n")
        response.writelines("LOAD COMB 525 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 18 0.8\n")
        response.writelines("LOAD COMB 526 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 18 0.8 \n")
        response.writelines("LOAD COMB 527 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 18 0.8\n")
        response.writelines("LOAD COMB 528 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 529 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 0.8 19 0.8\n")
        response.writelines("LOAD COMB 530 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 19 0.8\n")
        response.writelines("LOAD COMB 531 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 19 0.8\n")
        response.writelines("LOAD COMB 532 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 19 0.8\n")
        response.writelines("LOAD COMB 533 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 19 0.8\n")
        response.writelines("LOAD COMB 534 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 19 0.8 \n")
        response.writelines("LOAD COMB 535 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 19 0.8\n")
        response.writelines("LOAD COMB 536 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 537 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 16 0.8\n")
        response.writelines("LOAD COMB 538 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 16 0.8\n")
        response.writelines("LOAD COMB 539 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 16 0.8\n")
        response.writelines("LOAD COMB 540 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 541 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 542 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 543 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 544 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 545 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 18 0.8\n")
        response.writelines("LOAD COMB 546 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 18 0.8\n")
        response.writelines("LOAD COMB 547 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 18 0.8\n")
        response.writelines("LOAD COMB 548 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 549 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 19 0.8\n")
        response.writelines("LOAD COMB 550 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 19 0.8\n")
        response.writelines("LOAD COMB 551 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 19 0.8\n")
        response.writelines("LOAD COMB 552 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 553 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0\n")
        response.writelines("LOAD COMB 554 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 555 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 556 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 557 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 558 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 559 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 560 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 561 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 562 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 563 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 564 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 435\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-CL-WL':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("**COLLATERAL LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 CL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL\n")
        response.writelines("5 1.5 6 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 101 1.2DL+1.2RLL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 8 0.6\n")
        response.writelines("LOAD COMB 102 1.2DL+1.2RLL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 9 0.6\n")
        response.writelines("LOAD COMB 103 1.2DL+1.2RLL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 10 0.6\n")
        response.writelines("LOAD COMB 104 1.2DL+1.2RLL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 11 0.6\n")
        response.writelines("LOAD COMB 105 1.2DL+1.2RLL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 12 0.6\n")
        response.writelines("LOAD COMB 106 1.2DL+1.2RLL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 13 0.6\n")
        response.writelines("LOAD COMB 107 1.2DL+1.2RLL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 14 0.6\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 15 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.2 1 0.6\n")
        response.writelines("LOAD COMB 110 1.2DL+1.2RLL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.2 2 0.6\n")
        response.writelines("LOAD COMB 111 1.2DL+1.2RLL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.2 3 0.6\n")
        response.writelines("LOAD COMB 112 1.2DL+1.2RLL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.2 4 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 113 1.2DL+1.2RLL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 8 1.2\n")
        response.writelines("LOAD COMB 114 1.2DL+1.2RLL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 9 1.2\n")
        response.writelines("LOAD COMB 115 1.2DL+1.2RLL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 10 1.2\n")
        response.writelines("LOAD COMB 116 1.2DL+1.2RLL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 11 1.2\n")
        response.writelines("LOAD COMB 117 1.2DL+1.2RLL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 12 1.2\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 13 1.2\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 14 1.2\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+1.2+SLX\n")
        response.writelines("5 1.2 6 1.2 1 1.2\n")
        response.writelines("LOAD COMB 122 1.2DL+1.2RLL+1.2-SLX\n")
        response.writelines("5 1.2 6 1.2 2 1.2\n")
        response.writelines("LOAD COMB 123 1.2DL+1.2RLL+1.2+SLZ\n")
        response.writelines("5 1.2 6 1.2 3 1.2\n")
        response.writelines("LOAD COMB 124 1.2DL+1.2RLL+1.2-SLZ\n")
        response.writelines("5 1.2 6 1.2 4 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 125 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 126 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 127 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 128 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 129 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 130 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 131 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 132 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 133 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 134 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 135 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 136 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 137 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 138 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 139 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 140 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 141 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 142 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 143 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 144 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 145 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 146 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 147 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 148 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 149 1.2DL+1.2RLL\n")
        response.writelines("5 1.2 6 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 150 0.9DL+1.2RLL\n")
        response.writelines("5 0.9 6 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 151 1.0DL+0.35RLL\n")
        response.writelines("5 1.0 6 0.35\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 152 1.5DL+1.5RLL+1.5CL\n")
        response.writelines("5 1.5 6 1.5 7 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 153 1.2DL+1.2RLL+1.2CL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 0.6\n")
        response.writelines("LOAD COMB 154 1.2DL+1.2RLL+1.2CL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 0.6\n")
        response.writelines("LOAD COMB 155 1.2DL+1.2RLL+1.2CL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 0.6\n")
        response.writelines("LOAD COMB 156 1.2DL+1.2RLL+1.2CL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 0.6\n")
        response.writelines("LOAD COMB 157 1.2DL+1.2RLL+1.2CL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 0.6\n")
        response.writelines("LOAD COMB 158 1.2DL+1.2RLL+1.2CL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 0.6\n")
        response.writelines("LOAD COMB 159 1.2DL+1.2RLL+1.2CL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 0.6\n")
        response.writelines("LOAD COMB 160 1.2DL+1.2RLL+1.2CL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 161 1.2DL+1.2RLL+1.2CL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 0.6\n")
        response.writelines("LOAD COMB 162 1.2DL+1.2RLL+1.2CL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 0.6\n")
        response.writelines("LOAD COMB 163 1.2DL+1.2RLL+1.2CL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 0.6\n")
        response.writelines("LOAD COMB 164 1.2DL+1.2RLL+1.2CL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 165 1.2DL+1.2RLL+1.2CL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2\n")
        response.writelines("LOAD COMB 166 1.2DL+1.2RLL+1.2CL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 1.2\n")
        response.writelines("LOAD COMB 167 1.2DL+1.2RLL+1.2CL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 1.2\n")
        response.writelines("LOAD COMB 168 1.2DL+1.2RLL+1.2CL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 1.2\n")
        response.writelines("LOAD COMB 169 1.2DL+1.2RLL+1.2CL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 1.2\n")
        response.writelines("LOAD COMB 170 1.2DL+1.2RLL+1.2CL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 1.2\n")
        response.writelines("LOAD COMB 171 1.2DL+1.2RLL+1.2CL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 1.2\n")
        response.writelines("LOAD COMB 172 1.2DL+1.2RLL+1.2CL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 173 1.2DL+1.2RLL+1.2CL+1.2+SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 1.2\n")
        response.writelines("LOAD COMB 174 1.2DL+1.2RLL+1.2CL+1.2-SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 1.2\n")
        response.writelines("LOAD COMB 175 1.2DL+1.2RLL+1.2CL+1.2+SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 1.2\n")
        response.writelines("LOAD COMB 176 1.2DL+1.2RLL+1.2CL+1.2-SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 177 1.5DL+1.5CL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 7 1.5 8 1.5\n")
        response.writelines("LOAD COMB 178 1.5DL+1.5CL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 7 1.5 9 1.5\n")
        response.writelines("LOAD COMB 179 1.5DL+1.5CL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 7 1.5 10 1.5\n")
        response.writelines("LOAD COMB 180 1.5DL+1.5CL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 7 1.5 11 1.5\n")
        response.writelines("LOAD COMB 181 1.5DL+1.5CL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 7 1.5 12 1.5\n")
        response.writelines("LOAD COMB 182 1.5DL+1.5CL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 7 1.5 13 1.5\n")
        response.writelines("LOAD COMB 183 1.5DL+1.5CL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 7 1.5 14 1.5\n")
        response.writelines("LOAD COMB 184 1.5DL+1.5CL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 7 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 185 1.5DL+1.5CL+1.5+SLX\n")
        response.writelines("5 1.5 7 1.5 1 1.5\n")
        response.writelines("LOAD COMB 186 1.5DL+1.5CL+1.5-SLX\n")
        response.writelines("5 1.5 7 1.5 2 1.5\n")
        response.writelines("LOAD COMB 187 1.5DL+1.5CL+1.5+SLZ\n")
        response.writelines("5 1.5 7 1.5 3 1.5\n")
        response.writelines("LOAD COMB 188 1.5DL+1.5CL+1.5-SLZ\n")
        response.writelines("5 1.5 7 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 189 0.9DL+0.9CL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 7 0.9 8 1.5\n")
        response.writelines("LOAD COMB 190 0.9DL+0.9CL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 7 0.9 9 1.5\n")
        response.writelines("LOAD COMB 191 0.9DL+0.9CL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 7 0.9 10 1.5\n")
        response.writelines("LOAD COMB 192 0.9DL+0.9CL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 7 0.9 11 1.5\n")
        response.writelines("LOAD COMB 193 0.9DL+0.9CL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 7 0.9 12 1.5\n")
        response.writelines("LOAD COMB 194 0.9DL+0.9CL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 7 0.9 13 1.5\n")
        response.writelines("LOAD COMB 195 0.9DL+0.9CL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 7 0.9 14 1.5\n")
        response.writelines("LOAD COMB 196 0.9DL+0.9CL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 7 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 197 0.9DL+0.9CL+1.5+SLX\n")
        response.writelines("5 0.9 7 0.9 1 1.5\n")
        response.writelines("LOAD COMB 198 0.9DL+0.9CL+1.5-SLX\n")
        response.writelines("5 0.9 7 0.9 2 1.5\n")
        response.writelines("LOAD COMB 199 0.9DL+0.9CL+1.5+SLZ\n")
        response.writelines("5 0.9 7 0.9 3 1.5\n")
        response.writelines("LOAD COMB 200 0.9DL+0.9CL+1.5-SLZ\n")
        response.writelines("5 0.9 7 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 201 1.2DL+1.2RLL+1.2CL\n")
        response.writelines("5 1.2 6 1.2 7 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 202 0.9DL+1.2RLL+0.9CL\n")
        response.writelines("5 0.9 6 1.2 7 0.9\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 203 1.0DL+0.35RLL+1.0CL\n")
        response.writelines("5 1.0 6 0.35 7 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 501 1.0DL+1.0RLL \n")
        response.writelines("5 1.0 6 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 502 1.0DL+0.8RLL+0.8WL+X+CPI\n")
        response.writelines("5 1.0 6 0.8 8 0.8\n")
        response.writelines("LOAD COMB 503 1.0DL+0.8RLL+0.8WL+X-CPI\n")
        response.writelines("5 1.0 6 0.8 9 0.8\n")
        response.writelines("LOAD COMB 504 1.0DL+0.8RLL+0.8WL-X+CPI\n")
        response.writelines("5 1.0 6 0.8 10 0.8\n")
        response.writelines("LOAD COMB 505 1.0DL+0.8RLL+0.8WL-X-CPI\n")
        response.writelines("5 1.0 6 0.8 11 0.8\n")
        response.writelines("LOAD COMB 506 1.0DL+0.8RLL+0.8WL+Z+CPI\n")
        response.writelines("5 1.0 6 0.8 12 0.8\n")
        response.writelines("LOAD COMB 507 1.0DL+0.8RLL+0.8WL-Z+CPI\n")
        response.writelines("5 1.0 6 0.8 13 0.8 \n")
        response.writelines("LOAD COMB 508 1.0DL+0.8RLL+0.8WL+Z-CPI\n")
        response.writelines("5 1.0 6 0.8 14 0.8\n")
        response.writelines("LOAD COMB 509 1.0DL+0.8RLL+0.8WL-Z-CPI\n")
        response.writelines("5 1.0 6 0.8 15 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 510 1.0DL+0.8RLL+0.8+SLX\n")
        response.writelines("5 1.0 6 0.8 1 0.8\n")
        response.writelines("LOAD COMB 511 1.0DL+0.8RLL+0.8-SLX\n")
        response.writelines("5 1.0 6 0.8 2 0.8\n")
        response.writelines("LOAD COMB 512 1.0DL+0.8RLL+0.8+SLZ\n")
        response.writelines("5 1.0 6 0.8 3 0.8\n")
        response.writelines("LOAD COMB 513 1.0DL+0.8RLL+0.8-SLZ\n")
        response.writelines("5 1.0 6 0.8 4 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 514 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 515 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 516 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 517 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 518 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 519 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 520 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")
        response.writelines("LOAD COMB 521 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 15 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 522 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 523 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 524 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 525 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 526 1.0DL+1.0RLL+1.0CL \n")
        response.writelines("5 1.0 6 1.0 7 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 527 1.0DL+0.8RLL+1.0CL+0.8WL+X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 1.0 8 0.8\n")
        response.writelines("LOAD COMB 528 1.0DL+0.8RLL+1.0CL+0.8WL+X-CPI\n")
        response.writelines("5 1.0 6 0.8 7 1.0 9 0.8\n")
        response.writelines("LOAD COMB 529 1.0DL+0.8RLL+1.0CL+0.8WL-X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 1.0 10 0.8\n")
        response.writelines("LOAD COMB 530 1.0DL+0.8RLL+1.0CL+0.8WL-X-CPI\n")
        response.writelines("5 1.0 6 0.8 7 1.0 11 0.8\n")
        response.writelines("LOAD COMB 531 1.0DL+0.8RLL+1.0CL+0.8WL+Z+CPI\n")
        response.writelines("5 1.0 6 0.8 7 1.0 12 0.8\n")
        response.writelines("LOAD COMB 532 1.0DL+0.8RLL+1.0CL+0.8WL-Z+CPI\n")
        response.writelines("5 1.0 6 0.8 7 1.0 13 0.8 \n")
        response.writelines("LOAD COMB 533 1.0DL+0.8RLL+1.0CL+0.8WL+Z-CPI\n")
        response.writelines("5 1.0 6 0.8 7 1.0 14 0.8\n")
        response.writelines("LOAD COMB 534 1.0DL+0.8RLL+1.0CL+0.8WL-Z-CPI\n")
        response.writelines("5 1.0 6 0.8 7 1.0 15 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 535 1.0DL+0.8RLL+1.0CL+0.8+SLX\n")
        response.writelines("5 1.0 6 0.8 7 1.0 1 0.8\n")
        response.writelines("LOAD COMB 536 1.0DL+0.8RLL+1.0CL+0.8-SLX\n")
        response.writelines("5 1.0 6 0.8 7 1.0 2 0.8\n")
        response.writelines("LOAD COMB 537 1.0DL+0.8RLL+1.0CL+0.8+SLZ\n")
        response.writelines("5 1.0 6 0.8 7 1.0 3 0.8\n")
        response.writelines("LOAD COMB 538 1.0DL+0.8RLL+1.0CL+0.8-SLZ\n")
        response.writelines("5 1.0 6 0.8 7 1.0 4 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 539 1.0DL+1.0CL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0 8 1.0\n")
        response.writelines("LOAD COMB 540 1.0DL+1.0CL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 7 1.0 9 1.0\n")
        response.writelines("LOAD COMB 541 1.0DL+1.0CL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 7 1.0 10 1.0\n")
        response.writelines("LOAD COMB 542 1.0DL+1.0CL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 7 1.0 11 1.0\n")
        response.writelines("LOAD COMB 543 1.0DL+1.0CL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 7 1.0 12 1.0\n")
        response.writelines("LOAD COMB 544 1.0DL+1.0CL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 7 1.0 13 1.0\n")
        response.writelines("LOAD COMB 545 1.0DL+1.0CL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 7 1.0 14 1.0\n")
        response.writelines("LOAD COMB 546 1.0DL+1.0CL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 7 1.0 15 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 547 1.0DL+1.0CL+1.0+SLX\n")
        response.writelines("5 1.0 7 1.0 1 1.0\n")
        response.writelines("LOAD COMB 548 1.0DL+1.0CL+1.0-SLX\n")
        response.writelines("5 1.0 7 1.0 2 1.0\n")
        response.writelines("LOAD COMB 549 1.0DL+1.0CL+1.0+SLZ\n")
        response.writelines("5 1.0 7 1.0 3 1.0\n")
        response.writelines("LOAD COMB 550 1.0DL+1.0CL+1.0-SLZ\n")
        response.writelines("5 1.0 7 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 203\n")



    if LOADS_REQUIRED == 'EL-DL-RLL-MLL-CL-WL':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("**COLLATERAL LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1


        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 MLL\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 CL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05MLL\n")
        response.writelines("5 1.5 6 1.5 7 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.05RLL+1.5MLL\n")
        response.writelines("5 1.5 6 1.05 7 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 102 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6\n")
        response.writelines("LOAD COMB 103 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6\n")
        response.writelines("LOAD COMB 104 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6\n")
        response.writelines("LOAD COMB 105 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6\n")
        response.writelines("LOAD COMB 106 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6\n")
        response.writelines("LOAD COMB 107 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 16 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 110 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6\n")
        response.writelines("LOAD COMB 111 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6\n")
        response.writelines("LOAD COMB 112 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6\n")
        response.writelines("LOAD COMB 113 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6\n")
        response.writelines("LOAD COMB 114 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6\n")
        response.writelines("LOAD COMB 115 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6\n")
        response.writelines("LOAD COMB 116 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6\n")
        response.writelines("LOAD COMB 117 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 16 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+1.05MLL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+1.05MLL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+1.05MLL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6\n")
        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+1.05MLL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 122 1.2DL+1.05RLL+1.2MLL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6\n")
        response.writelines("LOAD COMB 123 1.2DL+1.05RLL+1.2MLL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6\n")
        response.writelines("LOAD COMB 124 1.2DL+1.05RLL+1.2MLL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6\n")
        response.writelines("LOAD COMB 125 1.2DL+1.05RLL+1.2MLL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 126 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2\n")
        response.writelines("LOAD COMB 131 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2\n")
        response.writelines("LOAD COMB 132 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2\n")
        response.writelines("LOAD COMB 133 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 134 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2\n")
        response.writelines("LOAD COMB 135 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2\n")
        response.writelines("LOAD COMB 136 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2\n")
        response.writelines("LOAD COMB 137 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2\n")
        response.writelines("LOAD COMB 138 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2\n")
        response.writelines("LOAD COMB 139 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2\n")
        response.writelines("LOAD COMB 140 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2\n")
        response.writelines("LOAD COMB 141 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2\n")

        response.writelines("LOAD COMB 142 1.2DL+1.2RLL+0.53MLL+1.2+SLX\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2\n")
        response.writelines("LOAD COMB 143 1.2DL+1.2RLL+0.53MLL+1.2-SLX\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2\n")
        response.writelines("LOAD COMB 144 1.2DL+1.2RLL+0.53MLL+1.2+SLZ\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2\n")
        response.writelines("LOAD COMB 145 1.2DL+1.2RLL+0.53MLL+1.2-SLZ\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 146 1.2DL+0.53RLL+1.2MLL+1.2+SLX\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2\n")
        response.writelines("LOAD COMB 147 1.2DL+0.53RLL+1.2MLL+1.2-SLX\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2\n")
        response.writelines("LOAD COMB 148 1.2DL+0.53RLL+1.2MLL+1.2+SLZ\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2\n")
        response.writelines("LOAD COMB 149 1.2DL+0.53RLL+1.2MLL+1.2-SLZ\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 150 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 151 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 152 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 153 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 154 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 155 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 156 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("LOAD COMB 157 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 158 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 159 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 160 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 161 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 162 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 163 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 164 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 165 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 166 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 167 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 168 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("LOAD COMB 169 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 170 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 171 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 172 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 173 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 174 1.2DL+1.2RLL+1.2MLL\n")
        response.writelines("5 1.2 6 1.2 7 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 175 0.9DL+1.2RLL+1.2MLL\n")
        response.writelines("5 0.9 6 1.2 7 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 176 1.0DL+0.35RLL+0.35MLL\n")
        response.writelines("5 1.0 6 0.35 7 0.35\n")

        response.writelines("LOAD COMB 177 1.5DL+1.5RLL+1.05MLL+1.5CL\n")
        response.writelines("5 1.5 6 1.5 7 1.05 8 1.5\n")
        response.writelines("LOAD COMB 178 1.5DL+1.05RLL+1.5MLL+1.5CL\n")
        response.writelines("5 1.5 6 1.05 7 1.5 8 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 179 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 9 0.6\n")
        response.writelines("LOAD COMB 180 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 10 0.6\n")
        response.writelines("LOAD COMB 181 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 11 0.6\n")
        response.writelines("LOAD COMB 182 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 12 0.6\n")
        response.writelines("LOAD COMB 183 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 13 0.6\n")
        response.writelines("LOAD COMB 184 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 14 0.6\n")
        response.writelines("LOAD COMB 185 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 15 0.6\n")
        response.writelines("LOAD COMB 186 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 16 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 187 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 9 0.6\n")
        response.writelines("LOAD COMB 188 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 10 0.6\n")
        response.writelines("LOAD COMB 189 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 11 0.6\n")
        response.writelines("LOAD COMB 190 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 12 0.6\n")
        response.writelines("LOAD COMB 191 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 13 0.6\n")
        response.writelines("LOAD COMB 192 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 14 0.6\n")
        response.writelines("LOAD COMB 193 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 15 0.6\n")
        response.writelines("LOAD COMB 194 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 16 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 195 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 1 0.6\n")
        response.writelines("LOAD COMB 196 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 2 0.6\n")
        response.writelines("LOAD COMB 197 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 3 0.6\n")
        response.writelines("LOAD COMB 198 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 4 0.6\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 199 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLX\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 1 0.6\n")
        response.writelines("LOAD COMB 200 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLX\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 2 0.6\n")
        response.writelines("LOAD COMB 201 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLZ\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 3 0.6\n")
        response.writelines("LOAD COMB 202 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLZ\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 4 0.6\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 203 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 9 1.2\n")
        response.writelines("LOAD COMB 204 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 10 1.2\n")
        response.writelines("LOAD COMB 205 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 11 1.2\n")
        response.writelines("LOAD COMB 206 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 12 1.2\n")
        response.writelines("LOAD COMB 207 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 13 1.2\n")
        response.writelines("LOAD COMB 208 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 14 1.2\n")
        response.writelines("LOAD COMB 209 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 15 1.2\n")
        response.writelines("LOAD COMB 210 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 211 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 9 1.2\n")
        response.writelines("LOAD COMB 212 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 10 1.2\n")
        response.writelines("LOAD COMB 213 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 11 1.2\n")
        response.writelines("LOAD COMB 214 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 12 1.2\n")
        response.writelines("LOAD COMB 215 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 13 1.2\n")
        response.writelines("LOAD COMB 216 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z+CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 14 1.2\n")
        response.writelines("LOAD COMB 217 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 15 1.2\n")
        response.writelines("LOAD COMB 218 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z-CPI\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2\n")

        response.writelines("LOAD COMB 219 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLX\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 1 1.2\n")
        response.writelines("LOAD COMB 220 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLX\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 2 1.2\n")
        response.writelines("LOAD COMB 221 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLZ\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 3 1.2\n")
        response.writelines("LOAD COMB 222 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLZ\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 4 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 223 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLX\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 1 1.2\n")
        response.writelines("LOAD COMB 224 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLX\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 2 1.2\n")
        response.writelines("LOAD COMB 225 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLZ\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 3 1.2\n")
        response.writelines("LOAD COMB 226 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLZ\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 4 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 227 1.5DL+1.5CL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5 9 1.5\n")
        response.writelines("LOAD COMB 228 1.5DL+1.5CL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 8 1.5 10 1.5\n")
        response.writelines("LOAD COMB 229 1.5DL+1.5CL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 8 1.5 11 1.5\n")
        response.writelines("LOAD COMB 230 1.5DL+1.5CL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 8 1.5 12 1.5\n")
        response.writelines("LOAD COMB 231 1.5DL+1.5CL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 8 1.5 13 1.5\n")
        response.writelines("LOAD COMB 232 1.5DL+1.5CL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 8 1.5 14 1.5\n")
        response.writelines("LOAD COMB 233 1.5DL+1.5CL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 8 1.5 15 1.5\n")
        response.writelines("LOAD COMB 234 1.5DL+1.5CL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 8 1.5 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 235 1.5DL+1.5CL+1.5+SLX\n")
        response.writelines("5 1.5 8 1.5 1 1.5\n")
        response.writelines("LOAD COMB 236 1.5DL+1.5CL+1.5-SLX\n")
        response.writelines("5 1.5 8 1.5 2 1.5\n")
        response.writelines("LOAD COMB 237 1.5DL+1.5CL+1.5+SLZ\n")
        response.writelines("5 1.5 8 1.5 3 1.5\n")
        response.writelines("LOAD COMB 238 1.5DL+1.5CL+1.5-SLZ\n")
        response.writelines("5 1.5 8 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 239 0.9DL+0.9CL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 0.9 9 1.5\n")
        response.writelines("LOAD COMB 240 0.9DL+0.9CL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 8 0.9 10 1.5\n")
        response.writelines("LOAD COMB 241 0.9DL+0.9CL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 8 0.9 11 1.5\n")
        response.writelines("LOAD COMB 242 0.9DL+0.9CL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 8 0.9 12 1.5\n")
        response.writelines("LOAD COMB 243 0.9DL+0.9CL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 8 0.9 13 1.5\n")
        response.writelines("LOAD COMB 244 0.9DL+0.9CL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 8 0.9 14 1.5\n")
        response.writelines("LOAD COMB 245 0.9DL+0.9CL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 8 0.9 15 1.5\n")
        response.writelines("LOAD COMB 246 0.9DL+0.9CL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 8 0.9 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 247 0.9DL+0.9CL+1.5+SLX\n")
        response.writelines("5 0.9 8 0.9 1 1.5\n")
        response.writelines("LOAD COMB 248 0.9DL+0.9CL+1.5-SLX\n")
        response.writelines("5 0.9 8 0.9 2 1.5\n")
        response.writelines("LOAD COMB 249 0.9DL+0.9CL+1.5+SLZ\n")
        response.writelines("5 0.9 8 0.9 3 1.5\n")
        response.writelines("LOAD COMB 250 0.9DL+0.9CL+1.5-SLZ\n")
        response.writelines("5 0.9 8 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 251 1.2DL+1.2RLL+1.2MLL+1.2CL\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 252 0.9DL+1.2RLL+1.2MLL+0.9CL\n")
        response.writelines("5 0.9 6 1.2 7 1.2 8 0.9\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 253 1.0DL+0.35RLL+0.35MLL+1.0CL\n")
        response.writelines("5 1.0 6 0.35 7 0.35 8 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 501 1.0DL+1.0RLL+1.0MLL \n")
        response.writelines("5 1.0 6 1.0 7 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 502 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8\n")
        response.writelines("LOAD COMB 503 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8\n")
        response.writelines("LOAD COMB 504 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8\n")
        response.writelines("LOAD COMB 505 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8\n")
        response.writelines("LOAD COMB 506 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8\n")
        response.writelines("LOAD COMB 507 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 \n")
        response.writelines("LOAD COMB 508 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8\n")
        response.writelines("LOAD COMB 509 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 510 1.0DL+0.8RLL+0.8MLL+0.8+SLX\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8\n")
        response.writelines("LOAD COMB 511 1.0DL+0.8RLL+0.8MLL+0.8-SLX\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8\n")
        response.writelines("LOAD COMB 512 1.0DL+0.8RLL+0.8MLL+0.8+SLZ\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8\n")
        response.writelines("LOAD COMB 513 1.0DL+0.8RLL+0.8MLL+0.8-SLZ\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 514 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 515 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 516 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 517 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 518 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 519 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 14 1.0\n")
        response.writelines("LOAD COMB 520 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 15 1.0\n")
        response.writelines("LOAD COMB 521 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 522 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 523 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 524 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 525 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("LOAD COMB 526 1.0DL+1.0RLL+1.0MLL+1.0CL \n")
        response.writelines("5 1.0 6 1.0 7 1.0 8 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 527 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 9 0.8\n")
        response.writelines("LOAD COMB 528 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 10 0.8\n")
        response.writelines("LOAD COMB 529 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 11 0.8\n")
        response.writelines("LOAD COMB 530 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 12 0.8\n")
        response.writelines("LOAD COMB 531 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 13 0.8\n")
        response.writelines("LOAD COMB 532 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z+CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 14 0.8 \n")
        response.writelines("LOAD COMB 533 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 15 0.8\n")
        response.writelines("LOAD COMB 534 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z-CPI\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 535 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLX\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 1 0.8\n")
        response.writelines("LOAD COMB 536 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLX\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 2 0.8\n")
        response.writelines("LOAD COMB 537 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLZ\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 3 0.8\n")
        response.writelines("LOAD COMB 538 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLZ\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 4 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 539 1.0DL+1.0CL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 8 1.0 9 1.0\n")
        response.writelines("LOAD COMB 540 1.0DL+1.0CL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0 10 1.0\n")
        response.writelines("LOAD COMB 541 1.0DL+1.0CL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 8 1.0 11 1.0\n")
        response.writelines("LOAD COMB 542 1.0DL+1.0CL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 8 1.0 12 1.0\n")
        response.writelines("LOAD COMB 543 1.0DL+1.0CL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 8 1.0 13 1.0\n")
        response.writelines("LOAD COMB 544 1.0DL+1.0CL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 8 1.0 14 1.0\n")
        response.writelines("LOAD COMB 545 1.0DL+1.0CL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 8 1.0 15 1.0\n")
        response.writelines("LOAD COMB 546 1.0DL+1.0CL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 8 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 547 1.0DL+1.0CL+1.0+SLX\n")
        response.writelines("5 1.0 8 1.0 1 1.0\n")
        response.writelines("LOAD COMB 548 1.0DL+1.0CL+1.0-SLX\n")
        response.writelines("5 1.0 8 1.0 2 1.0\n")
        response.writelines("LOAD COMB 549 1.0DL+1.0CL+1.0+SLZ\n")
        response.writelines("5 1.0 8 1.0 3 1.0\n")
        response.writelines("LOAD COMB 550 1.0DL+1.0CL+1.0-SLZ\n")
        response.writelines("5 1.0 8 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 253\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-CL-WL-CRL(1)':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("**COLLATERAL LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 CL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 CRL1\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 17 CRL2\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 18 CRL3\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 19 CRL4\n")

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.5 16 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.5RLL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.5 17 1.05\n")
        response.writelines("LOAD COMB 102 1.5DL+1.5RLL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.5 18 1.05\n")
        response.writelines("LOAD COMB 103 1.5DL+1.5RLL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.5 19 1.05\n")

        response.writelines("LOAD COMB 104 1.5DL+1.05RLL+1.5CRL1\n")
        response.writelines("5 1.5 6 1.05 16 1.5\n")
        response.writelines("LOAD COMB 105 1.5DL+1.05RLL+1.5CRL2\n")
        response.writelines("5 1.5 6 1.05 17 1.5\n")
        response.writelines("LOAD COMB 106 1.5DL+1.05RLL+1.5CRL3\n")
        response.writelines("5 1.5 6 1.05 18 1.5\n")
        response.writelines("LOAD COMB 107 1.5DL+1.05RLL+1.5CRL4\n")
        response.writelines("5 1.5 6 1.05 19 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 110 1.2DL+1.2RLL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 111 1.2DL+1.2RLL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 112 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 113 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 114 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 14 0.6 16 1.05\n")
        response.writelines("LOAD COMB 115 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 15 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 116 1.2DL+1.2RLL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 117 1.2DL+1.2RLL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 122 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 123 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 15 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 124 1.2DL+1.2RLL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 8 0.6 18 1.05\n")
        response.writelines("LOAD COMB 125 1.2DL+1.2RLL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 126 1.2DL+1.2RLL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 131 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 15 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 132 1.2DL+1.2RLL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 8 0.6 19 1.05\n")
        response.writelines("LOAD COMB 133 1.2DL+1.2RLL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 9 0.6 19 1.05\n")
        response.writelines("LOAD COMB 134 1.2DL+1.2RLL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 10 0.6 19 1.05\n")
        response.writelines("LOAD COMB 135 1.2DL+1.2RLL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 11 0.6 19 1.05\n")
        response.writelines("LOAD COMB 136 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 12 0.6 19 1.05\n")
        response.writelines("LOAD COMB 137 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 13 0.6 19 1.05\n")
        response.writelines("LOAD COMB 138 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 14 0.6 19 1.05\n")
        response.writelines("LOAD COMB 139 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 15 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 140 1.2DL+1.05RLL+0.6WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 8 0.6 16 1.2\n")
        response.writelines("LOAD COMB 141 1.2DL+1.05RLL+0.6WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 9 0.6 16 1.2\n")
        response.writelines("LOAD COMB 142 1.2DL+1.05RLL+0.6WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 10 0.6 16 1.2\n")
        response.writelines("LOAD COMB 143 1.2DL+1.05RLL+0.6WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 11 0.6 16 1.2\n")
        response.writelines("LOAD COMB 144 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 12 0.6 16 1.2\n")
        response.writelines("LOAD COMB 145 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 13 0.6 16 1.2\n")
        response.writelines("LOAD COMB 146 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 14 0.6 16 1.2\n")
        response.writelines("LOAD COMB 147 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 15 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 148 1.2DL+1.05RLL+0.6WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 8 0.6 17 1.2\n")
        response.writelines("LOAD COMB 149 1.2DL+1.05RLL+0.6WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 150 1.2DL+1.05RLL+0.6WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 151 1.2DL+1.05RLL+0.6WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 152 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 153 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 154 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 155 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 15 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 156 1.2DL+1.05RLL+0.6WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 8 0.6 18 1.2\n")
        response.writelines("LOAD COMB 157 1.2DL+1.05RLL+0.6WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 9 0.6 18 1.2\n")
        response.writelines("LOAD COMB 158 1.2DL+1.05RLL+0.6WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 10 0.6 18 1.2\n")
        response.writelines("LOAD COMB 159 1.2DL+1.05RLL+0.6WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 11 0.6 18 1.2\n")
        response.writelines("LOAD COMB 160 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 12 0.6 18 1.2\n")
        response.writelines("LOAD COMB 161 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 13 0.6 18 1.2\n")
        response.writelines("LOAD COMB 162 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 14 0.6 18 1.2\n")
        response.writelines("LOAD COMB 163 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 15 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 164 1.2DL+1.05RLL+0.6WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 8 0.6 19 1.2\n")
        response.writelines("LOAD COMB 165 1.2DL+1.05RLL+0.6WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 9 0.6 19 1.2\n")
        response.writelines("LOAD COMB 166 1.2DL+1.05RLL+0.6WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 10 0.6 19 1.2\n")
        response.writelines("LOAD COMB 167 1.2DL+1.05RLL+0.6WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 11 0.6 19 1.2\n")
        response.writelines("LOAD COMB 168 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 12 0.6 19 1.2\n")
        response.writelines("LOAD COMB 169 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 13 0.6 19 1.2\n")
        response.writelines("LOAD COMB 170 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 14 0.6 19 1.2\n")
        response.writelines("LOAD COMB 171 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 15 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 172 1.2DL+1.2RLL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 173 1.2DL+1.2RLL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 174 1.2DL+1.2RLL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 175 1.2DL+1.2RLL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 4 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 176 1.2DL+1.2RLL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 177 1.2DL+1.2RLL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 178 1.2DL+1.2RLL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 179 1.2DL+1.2RLL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 180 1.2DL+1.2RLL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 181 1.2DL+1.2RLL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 182 1.2DL+1.2RLL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 183 1.2DL+1.2RLL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 184 1.2DL+1.2RLL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 1 0.6 19 1.05\n")
        response.writelines("LOAD COMB 185 1.2DL+1.2RLL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 2 0.6 19 1.05\n")
        response.writelines("LOAD COMB 186 1.2DL+1.2RLL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 3 0.6 19 1.05\n")
        response.writelines("LOAD COMB 187 1.2DL+1.2RLL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 4 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 188 1.2DL+1.05RLL+0.6+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 1 0.6 16 1.2\n")
        response.writelines("LOAD COMB 189 1.2DL+1.05RLL+0.6-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 2 0.6 16 1.2\n")
        response.writelines("LOAD COMB 190 1.2DL+1.05RLL+0.6+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 3 0.6 16 1.2\n")
        response.writelines("LOAD COMB 191 1.2DL+1.05RLL+0.6-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 4 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 192 1.2DL+1.05RLL+0.6+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 193 1.2DL+1.05RLL+0.6-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 194 1.2DL+1.05RLL+0.6+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 195 1.2DL+1.05RLL+0.6-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 4 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 196 1.2DL+1.05RLL+0.6+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 1 0.6 18 1.2\n")
        response.writelines("LOAD COMB 197 1.2DL+1.05RLL+0.6-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 2 0.6 18 1.2\n")
        response.writelines("LOAD COMB 198 1.2DL+1.05RLL+0.6+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 3 0.6 18 1.2\n")
        response.writelines("LOAD COMB 199 1.2DL+1.05RLL+0.6-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 4 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 200 1.2DL+1.05RLL+0.6+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 1 0.6 19 1.2\n")
        response.writelines("LOAD COMB 201 1.2DL+1.05RLL+0.6-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 2 0.6 19 1.2\n")
        response.writelines("LOAD COMB 202 1.2DL+1.05RLL+0.6+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 3 0.6 19 1.2\n")
        response.writelines("LOAD COMB 203 1.2DL+1.05RLL+0.6-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 4 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 204 1.2DL+1.2RLL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 205 1.2DL+1.2RLL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 206 1.2DL+1.2RLL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 207 1.2DL+1.2RLL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 208 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 209 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 210 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 14 1.2 16 0.53\n")
        response.writelines("LOAD COMB 211 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 15 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 212 1.2DL+1.2RLL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 213 1.2DL+1.2RLL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 214 1.2DL+1.2RLL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 215 1.2DL+1.2RLL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 216 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 217 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 218 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 219 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 15 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 220 1.2DL+1.2RLL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 8 1.2 18 0.53\n")
        response.writelines("LOAD COMB 221 1.2DL+1.2RLL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 222 1.2DL+1.2RLL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 223 1.2DL+1.2RLL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 224 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 225 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 226 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 227 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 15 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 228 1.2DL+1.2RLL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 8 1.2 19 0.53\n")
        response.writelines("LOAD COMB 229 1.2DL+1.2RLL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 9 1.2 19 0.53\n")
        response.writelines("LOAD COMB 230 1.2DL+1.2RLL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 10 1.2 19 0.53\n")
        response.writelines("LOAD COMB 231 1.2DL+1.2RLL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 11 1.2 19 0.53\n")
        response.writelines("LOAD COMB 232 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 12 1.2 19 0.53\n")
        response.writelines("LOAD COMB 233 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 13 1.2 19 0.53\n")
        response.writelines("LOAD COMB 234 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 14 1.2 19 0.53\n")
        response.writelines("LOAD COMB 235 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 15 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 236 1.2DL+0.53RLL+1.2WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 8 1.2 16 1.2\n")
        response.writelines("LOAD COMB 237 1.2DL+0.53RLL+1.2WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 9 1.2 16 1.2\n")
        response.writelines("LOAD COMB 238 1.2DL+0.53RLL+1.2WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 10 1.2 16 1.2\n")
        response.writelines("LOAD COMB 239 1.2DL+0.53RLL+1.2WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 11 1.2 16 1.2\n")
        response.writelines("LOAD COMB 240 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 12 1.2 16 1.2\n")
        response.writelines("LOAD COMB 241 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 13 1.2 16 1.2\n")
        response.writelines("LOAD COMB 242 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 14 1.2 16 1.2\n")
        response.writelines("LOAD COMB 243 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 15 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 244 1.2DL+0.53RLL+1.2WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 8 1.2 17 1.2\n")
        response.writelines("LOAD COMB 245 1.2DL+0.53RLL+1.2WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 246 1.2DL+0.53RLL+1.2WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 247 1.2DL+0.53RLL+1.2WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 248 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 249 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 250 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 251 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 15 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 252 1.2DL+0.53RLL+1.2WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 8 1.2 18 1.2\n")
        response.writelines("LOAD COMB 253 1.2DL+0.53RLL+1.2WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 9 1.2 18 1.2\n")
        response.writelines("LOAD COMB 254 1.2DL+0.53RLL+1.2WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 10 1.2 18 1.2\n")
        response.writelines("LOAD COMB 255 1.2DL+0.53RLL+1.2WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 11 1.2 18 1.2\n")
        response.writelines("LOAD COMB 256 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 12 1.2 18 1.2\n")
        response.writelines("LOAD COMB 257 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 13 1.2 18 1.2\n")
        response.writelines("LOAD COMB 258 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 14 1.2 18 1.2\n")
        response.writelines("LOAD COMB 259 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 15 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 260 1.2DL+0.53RLL+1.2WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 8 1.2 19 1.2\n")
        response.writelines("LOAD COMB 261 1.2DL+0.53RLL+1.2WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 9 1.2 19 1.2\n")
        response.writelines("LOAD COMB 262 1.2DL+0.53RLL+1.2WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 10 1.2 19 1.2\n")
        response.writelines("LOAD COMB 263 1.2DL+0.53RLL+1.2WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 11 1.2 19 1.2\n")
        response.writelines("LOAD COMB 264 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 12 1.2 19 1.2\n")
        response.writelines("LOAD COMB 265 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 13 1.2 19 1.2\n")
        response.writelines("LOAD COMB 266 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 14 1.2 19 1.2\n")
        response.writelines("LOAD COMB 267 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 15 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 268 1.2DL+1.2RLL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 269 1.2DL+1.2RLL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 270 1.2DL+1.2RLL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 271 1.2DL+1.2RLL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 4 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 272 1.2DL+1.2RLL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 273 1.2DL+1.2RLL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 274 1.2DL+1.2RLL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 275 1.2DL+1.2RLL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 4 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 276 1.2DL+1.2RLL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 277 1.2DL+1.2RLL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 278 1.2DL+1.2RLL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 279 1.2DL+1.2RLL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 4 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 280 1.2DL+1.2RLL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 1 1.2 19 0.53\n")
        response.writelines("LOAD COMB 281 1.2DL+1.2RLL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 2 1.2 19 0.53\n")
        response.writelines("LOAD COMB 282 1.2DL+1.2RLL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 3 1.2 19 0.53\n")
        response.writelines("LOAD COMB 283 1.2DL+1.2RLL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 4 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 284 1.2DL+0.53RLL+1.2+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 1 1.2 16 1.2\n")
        response.writelines("LOAD COMB 285 1.2DL+0.53RLL+1.2-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 2 1.2 16 1.2\n")
        response.writelines("LOAD COMB 286 1.2DL+0.53RLL+1.2+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 3 1.2 16 1.2\n")
        response.writelines("LOAD COMB 287 1.2DL+0.53RLL+1.2-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 4 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 288 1.2DL+0.53RLL+1.2+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 289 1.2DL+0.53RLL+1.2-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 290 1.2DL+0.53RLL+1.2+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 291 1.2DL+0.53RLL+1.2-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 4 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 292 1.2DL+0.53RLL+1.2+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 1 1.2 18 1.2\n")
        response.writelines("LOAD COMB 293 1.2DL+0.53RLL+1.2-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 2 1.2 18 1.2\n")
        response.writelines("LOAD COMB 294 1.2DL+0.53RLL+1.2+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 3 1.2 18 1.2\n")
        response.writelines("LOAD COMB 295 1.2DL+0.53RLL+1.2-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 4 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 296 1.2DL+0.53RLL+1.2+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 1 1.2 19 1.2\n")
        response.writelines("LOAD COMB 297 1.2DL+0.53RLL+1.2-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 2 1.2 19 1.2\n")
        response.writelines("LOAD COMB 298 1.2DL+0.53RLL+1.2+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 3 1.2 19 1.2\n")
        response.writelines("LOAD COMB 299 1.2DL+0.53RLL+1.2-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 4 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 300 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 301 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 302 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 303 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 304 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 305 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 306 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 307 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 308 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 309 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 310 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 311 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 312 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 313 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 314 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 315 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 316 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 317 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 318 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 319 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 320 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 321 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 322 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 323 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 324 1.2DL+1.2RLL+1.2CRL1\n")
        response.writelines("5 1.2 6 1.2 16 1.2\n")
        response.writelines("LOAD COMB 325 1.2DL+1.2RLL+1.2CRL2\n")
        response.writelines("5 1.2 6 1.2 17 1.2\n")
        response.writelines("LOAD COMB 326 1.2DL+1.2RLL+1.2CRL3\n")
        response.writelines("5 1.2 6 1.2 18 1.2\n")
        response.writelines("LOAD COMB 327 1.2DL+1.2RLL+1.2CRL4\n")
        response.writelines("5 1.2 6 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 328 0.9DL+1.2RLL+1.2CRL1\n")
        response.writelines("5 0.9 6 1.2 16 1.2\n")
        response.writelines("LOAD COMB 329 0.9DL+1.2RLL+1.2CRL2\n")
        response.writelines("5 0.9 6 1.2 17 1.2\n")
        response.writelines("LOAD COMB 330 0.9DL+1.2RLL+1.2CRL3\n")
        response.writelines("5 0.9 6 1.2 18 1.2\n")
        response.writelines("LOAD COMB 331 0.9DL+1.2RLL+1.2CRL4\n")
        response.writelines("5 0.9 6 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 332 1.0DL+0.35RLL+0.35CRL1\n")
        response.writelines("5 1.0 6 0.35 16 0.35\n")
        response.writelines("LOAD COMB 333 1.0DL+0.35RLL+0.35CRL2\n")
        response.writelines("5 1.0 6 0.35 17 0.35\n")
        response.writelines("LOAD COMB 334 1.0DL+0.35RLL+0.35CRL3\n")
        response.writelines("5 1.0 6 0.35 18 0.35\n")
        response.writelines("LOAD COMB 335 1.0DL+0.35RLL+0.35CRL4\n")
        response.writelines("5 1.0 6 0.35 19 0.35\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 336 1.5DL+1.5RLL+1.5CL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.5 7 1.5 16 1.05\n")
        response.writelines("LOAD COMB 337 1.5DL+1.5RLL+1.5CL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.5 7 1.5 17 1.05\n")
        response.writelines("LOAD COMB 338 1.5DL+1.5RLL+1.5CL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.5 7 1.5 18 1.05\n")
        response.writelines("LOAD COMB 339 1.5DL+1.5RLL+1.5CL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.5 7 1.5 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 340 1.5DL+1.05RLL+1.5CL+1.5CRL1\n")
        response.writelines("5 1.5 6 1.05 7 1.5 16 1.5\n")
        response.writelines("LOAD COMB 341 1.5DL+1.05RLL+1.5CL+1.5CRL2\n")
        response.writelines("5 1.5 6 1.05 7 1.5 17 1.5\n")
        response.writelines("LOAD COMB 342 1.5DL+1.05RLL+1.5CL+1.5CRL3\n")
        response.writelines("5 1.5 6 1.05 7 1.5 18 1.5\n")
        response.writelines("LOAD COMB 343 1.5DL+1.05RLL+1.5CL+1.5CRL4\n")
        response.writelines("5 1.5 6 1.05 7 1.5 19 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 344 1.2DL+1.2RLL+1.2CL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 345 1.2DL+1.2RLL+1.2CL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 346 1.2DL+1.2RLL+1.2CL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 347 1.2DL+1.2RLL+1.2CL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 348 1.2DL+1.2RLL+1.2CL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 349 1.2DL+1.2RLL+1.2CL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 350 1.2DL+1.2RLL+1.2CL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 0.6 16 1.05\n")
        response.writelines("LOAD COMB 351 1.2DL+1.2RLL+1.2CL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.6 16 1.05\n")











        response.writelines("****\n")
        response.writelines("LOAD COMB 352 1.2DL+1.2RLL+1.2CL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 353 1.2DL+1.2RLL+1.2CL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 354 1.2DL+1.2RLL+1.2CL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 355 1.2DL+1.2RLL+1.2CL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 356 1.2DL+1.2RLL+1.2CL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 357 1.2DL+1.2RLL+1.2CL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 358 1.2DL+1.2RLL+1.2CL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 359 1.2DL+1.2RLL+1.2CL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 360 1.2DL+1.2RLL+1.2CL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 0.6 18 1.05\n")
        response.writelines("LOAD COMB 361 1.2DL+1.2RLL+1.2CL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 362 1.2DL+1.2RLL+1.2CL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 363 1.2DL+1.2RLL+1.2CL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 364 1.2DL+1.2RLL+1.2CL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 365 1.2DL+1.2RLL+1.2CL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 366 1.2DL+1.2RLL+1.2CL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 367 1.2DL+1.2RLL+1.2CL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 368 1.2DL+1.2RLL+1.2CL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 0.6 19 1.05\n")
        response.writelines("LOAD COMB 369 1.2DL+1.2RLL+1.2CL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 0.6 19 1.05\n")
        response.writelines("LOAD COMB 370 1.2DL+1.2RLL+1.2CL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 0.6 19 1.05\n")
        response.writelines("LOAD COMB 371 1.2DL+1.2RLL+1.2CL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 0.6 19 1.05\n")
        response.writelines("LOAD COMB 372 1.2DL+1.2RLL+1.2CL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 0.6 19 1.05\n")
        response.writelines("LOAD COMB 373 1.2DL+1.2RLL+1.2CL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 0.6 19 1.05\n")
        response.writelines("LOAD COMB 374 1.2DL+1.2RLL+1.2CL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 0.6 19 1.05\n")
        response.writelines("LOAD COMB 375 1.2DL+1.2RLL+1.2CL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 376 1.2DL+1.05RLL+1.2CL+0.6WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 16 1.2\n")
        response.writelines("LOAD COMB 377 1.2DL+1.05RLL+1.2CL+0.6WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 16 1.2\n")
        response.writelines("LOAD COMB 378 1.2DL+1.05RLL+1.2CL+0.6WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 16 1.2\n")
        response.writelines("LOAD COMB 379 1.2DL+1.05RLL+1.2CL+0.6WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 16 1.2\n")
        response.writelines("LOAD COMB 380 1.2DL+1.05RLL+1.2CL+0.6WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 16 1.2\n")
        response.writelines("LOAD COMB 381 1.2DL+1.05RLL+1.2CL+0.6WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 16 1.2\n")
        response.writelines("LOAD COMB 382 1.2DL+1.05RLL+1.2CL+0.6WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 16 1.2\n")
        response.writelines("LOAD COMB 383 1.2DL+1.05RLL+1.2CL+0.6WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 384 1.2DL+1.05RLL+1.2CL+0.6WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 17 1.2\n")
        response.writelines("LOAD COMB 385 1.2DL+1.05RLL+1.2CL+0.6WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 386 1.2DL+1.05RLL+1.2CL+0.6WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 387 1.2DL+1.05RLL+1.2CL+0.6WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 388 1.2DL+1.05RLL+1.2CL+0.6WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 389 1.2DL+1.05RLL+1.2CL+0.6WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 390 1.2DL+1.05RLL+1.2CL+0.6WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 391 1.2DL+1.05RLL+1.2CL+0.6WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 392 1.2DL+1.05RLL+1.2CL+0.6WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 18 1.2\n")
        response.writelines("LOAD COMB 393 1.2DL+1.05RLL+1.2CL+0.6WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 18 1.2\n")
        response.writelines("LOAD COMB 394 1.2DL+1.05RLL+1.2CL+0.6WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 18 1.2\n")
        response.writelines("LOAD COMB 395 1.2DL+1.05RLL+1.2CL+0.6WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 18 1.2\n")
        response.writelines("LOAD COMB 396 1.2DL+1.05RLL+1.2CL+0.6WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 18 1.2\n")
        response.writelines("LOAD COMB 397 1.2DL+1.05RLL+1.2CL+0.6WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 18 1.2\n")
        response.writelines("LOAD COMB 398 1.2DL+1.05RLL+1.2CL+0.6WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 18 1.2\n")
        response.writelines("LOAD COMB 399 1.2DL+1.05RLL+1.2CL+0.6WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 400 1.2DL+1.05RLL+1.2CL+0.6WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 19 1.2\n")
        response.writelines("LOAD COMB 401 1.2DL+1.05RLL+1.2CL+0.6WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 19 1.2\n")
        response.writelines("LOAD COMB 402 1.2DL+1.05RLL+1.2CL+0.6WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 19 1.2\n")
        response.writelines("LOAD COMB 403 1.2DL+1.05RLL+1.2CL+0.6WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 19 1.2\n")
        response.writelines("LOAD COMB 404 1.2DL+1.05RLL+1.2CL+0.6WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 19 1.2\n")
        response.writelines("LOAD COMB 405 1.2DL+1.05RLL+1.2CL+0.6WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 19 1.2\n")
        response.writelines("LOAD COMB 406 1.2DL+1.05RLL+1.2CL+0.6WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 19 1.2\n")
        response.writelines("LOAD COMB 407 1.2DL+1.05RLL+1.2CL+0.6WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 408 1.2DL+1.2RLL+1.2CL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 409 1.2DL+1.2RLL+1.2CL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 410 1.2DL+1.2RLL+1.2CL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 411 1.2DL+1.2RLL+1.2CL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 412 1.2DL+1.2RLL+1.2CL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 413 1.2DL+1.2RLL+1.2CL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 414 1.2DL+1.2RLL+1.2CL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 415 1.2DL+1.2RLL+1.2CL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 416 1.2DL+1.2RLL+1.2CL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 417 1.2DL+1.2RLL+1.2CL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 418 1.2DL+1.2RLL+1.2CL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 419 1.2DL+1.2RLL+1.2CL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 420 1.2DL+1.2RLL+1.2CL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 0.6 19 1.05\n")
        response.writelines("LOAD COMB 421 1.2DL+1.2RLL+1.2CL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 0.6 19 1.05\n")
        response.writelines("LOAD COMB 422 1.2DL+1.2RLL+1.2CL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 0.6 19 1.05\n")
        response.writelines("LOAD COMB 423 1.2DL+1.2RLL+1.2CL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 424 1.2DL+1.05RLL+1.2CL+0.6+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 16 1.2\n")
        response.writelines("LOAD COMB 425 1.2DL+1.05RLL+1.2CL+0.6-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 16 1.2\n")
        response.writelines("LOAD COMB 426 1.2DL+1.05RLL+1.2CL+0.6+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 16 1.2\n")
        response.writelines("LOAD COMB 427 1.2DL+1.05RLL+1.2CL+0.6-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 428 1.2DL+1.05RLL+1.2CL+0.6+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 429 1.2DL+1.05RLL+1.2CL+0.6-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 430 1.2DL+1.05RLL+1.2CL+0.6+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 431 1.2DL+1.05RLL+1.2CL+0.6-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 432 1.2DL+1.05RLL+1.2CL+0.6+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 18 1.2\n")
        response.writelines("LOAD COMB 433 1.2DL+1.05RLL+1.2CL+0.6-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 18 1.2\n")
        response.writelines("LOAD COMB 434 1.2DL+1.05RLL+1.2CL+0.6+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 18 1.2\n")
        response.writelines("LOAD COMB 435 1.2DL+1.05RLL+1.2CL+0.6-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 436 1.2DL+1.05RLL+1.2CL+0.6+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 19 1.2\n")
        response.writelines("LOAD COMB 437 1.2DL+1.05RLL+1.2CL+0.6-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 19 1.2\n")
        response.writelines("LOAD COMB 438 1.2DL+1.05RLL+1.2CL+0.6+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 19 1.2\n")
        response.writelines("LOAD COMB 439 1.2DL+1.05RLL+1.2CL+0.6-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 440 1.2DL+1.2RLL+1.2CL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 441 1.2DL+1.2RLL+1.2CL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 442 1.2DL+1.2RLL+1.2CL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 443 1.2DL+1.2RLL+1.2CL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 444 1.2DL+1.2RLL+1.2CL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 445 1.2DL+1.2RLL+1.2CL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 446 1.2DL+1.2RLL+1.2CL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 1.2 16 0.53\n")
        response.writelines("LOAD COMB 447 1.2DL+1.2RLL+1.2CL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 448 1.2DL+1.2RLL+1.2CL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 449 1.2DL+1.2RLL+1.2CL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 450 1.2DL+1.2RLL+1.2CL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 451 1.2DL+1.2RLL+1.2CL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 452 1.2DL+1.2RLL+1.2CL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 453 1.2DL+1.2RLL+1.2CL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 454 1.2DL+1.2RLL+1.2CL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 455 1.2DL+1.2RLL+1.2CL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 456 1.2DL+1.2RLL+1.2CL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 18 0.53\n")
        response.writelines("LOAD COMB 457 1.2DL+1.2RLL+1.2CL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 458 1.2DL+1.2RLL+1.2CL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 459 1.2DL+1.2RLL+1.2CL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 460 1.2DL+1.2RLL+1.2CL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 461 1.2DL+1.2RLL+1.2CL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 462 1.2DL+1.2RLL+1.2CL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 463 1.2DL+1.2RLL+1.2CL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 464 1.2DL+1.2RLL+1.2CL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 19 0.53\n")
        response.writelines("LOAD COMB 465 1.2DL+1.2RLL+1.2CL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 1.2 19 0.53\n")
        response.writelines("LOAD COMB 466 1.2DL+1.2RLL+1.2CL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 1.2 19 0.53\n")
        response.writelines("LOAD COMB 467 1.2DL+1.2RLL+1.2CL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 1.2 19 0.53\n")
        response.writelines("LOAD COMB 468 1.2DL+1.2RLL+1.2CL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 1.2 19 0.53\n")
        response.writelines("LOAD COMB 469 1.2DL+1.2RLL+1.2CL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 1.2 19 0.53\n")
        response.writelines("LOAD COMB 470 1.2DL+1.2RLL+1.2CL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 1.2 19 0.53\n")
        response.writelines("LOAD COMB 471 1.2DL+1.2RLL+1.2CL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 472 1.2DL+0.53RLL+1.2CL+1.2WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2\n")
        response.writelines("LOAD COMB 473 1.2DL+0.53RLL+1.2CL+1.2WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 16 1.2\n")
        response.writelines("LOAD COMB 474 1.2DL+0.53RLL+1.2CL+1.2WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 16 1.2\n")
        response.writelines("LOAD COMB 475 1.2DL+0.53RLL+1.2CL+1.2WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 16 1.2\n")
        response.writelines("LOAD COMB 476 1.2DL+0.53RLL+1.2CL+1.2WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 16 1.2\n")
        response.writelines("LOAD COMB 477 1.2DL+0.53RLL+1.2CL+1.2WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 16 1.2\n")
        response.writelines("LOAD COMB 478 1.2DL+0.53RLL+1.2CL+1.2WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 16 1.2\n")
        response.writelines("LOAD COMB 479 1.2DL+0.53RLL+1.2CL+1.2WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 480 1.2DL+0.53RLL+1.2CL+1.2WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 17 1.2\n")
        response.writelines("LOAD COMB 481 1.2DL+0.53RLL+1.2CL+1.2WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 482 1.2DL+0.53RLL+1.2CL+1.2WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 483 1.2DL+0.53RLL+1.2CL+1.2WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 484 1.2DL+0.53RLL+1.2CL+1.2WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 485 1.2DL+0.53RLL+1.2CL+1.2WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 486 1.2DL+0.53RLL+1.2CL+1.2WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 487 1.2DL+0.53RLL+1.2CL+1.2WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 488 1.2DL+0.53RLL+1.2CL+1.2WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 18 1.2\n")
        response.writelines("LOAD COMB 489 1.2DL+0.53RLL+1.2CL+1.2WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 18 1.2\n")
        response.writelines("LOAD COMB 490 1.2DL+0.53RLL+1.2CL+1.2WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 18 1.2\n")
        response.writelines("LOAD COMB 491 1.2DL+0.53RLL+1.2CL+1.2WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 18 1.2\n")
        response.writelines("LOAD COMB 492 1.2DL+0.53RLL+1.2CL+1.2WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 18 1.2\n")
        response.writelines("LOAD COMB 493 1.2DL+0.53RLL+1.2CL+1.2WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 18 1.2\n")
        response.writelines("LOAD COMB 494 1.2DL+0.53RLL+1.2CL+1.2WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 18 1.2\n")
        response.writelines("LOAD COMB 495 1.2DL+0.53RLL+1.2CL+1.2WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 496 1.2DL+0.53RLL+1.2CL+1.2WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 19 1.2\n")
        response.writelines("LOAD COMB 497 1.2DL+0.53RLL+1.2CL+1.2WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 19 1.2\n")
        response.writelines("LOAD COMB 498 1.2DL+0.53RLL+1.2CL+1.2WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 19 1.2\n")
        response.writelines("LOAD COMB 499 1.2DL+0.53RLL+1.2CL+1.2WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 19 1.2\n")
        response.writelines("LOAD COMB 500 1.2DL+0.53RLL+1.2CL+1.2WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 19 1.2\n")
        response.writelines("LOAD COMB 501 1.2DL+0.53RLL+1.2CL+1.2WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 19 1.2\n")
        response.writelines("LOAD COMB 502 1.2DL+0.53RLL+1.2CL+1.2WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 19 1.2\n")
        response.writelines("LOAD COMB 503 1.2DL+0.53RLL+1.2CL+1.2WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 504 1.2DL+1.2RLL+1.2CL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 505 1.2DL+1.2RLL+1.2CL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 506 1.2DL+1.2RLL+1.2CL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 507 1.2DL+1.2RLL+1.2CL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 1.2 16 0.53\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 508 1.2DL+1.2RLL+1.2CL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 509 1.2DL+1.2RLL+1.2CL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 510 1.2DL+1.2RLL+1.2CL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 511 1.2DL+1.2RLL+1.2CL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 512 1.2DL+1.2RLL+1.2CL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 513 1.2DL+1.2RLL+1.2CL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 514 1.2DL+1.2RLL+1.2CL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 515 1.2DL+1.2RLL+1.2CL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 516 1.2DL+1.2RLL+1.2CL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 1.2 19 0.53\n")
        response.writelines("LOAD COMB 517 1.2DL+1.2RLL+1.2CL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 1.2 19 0.53\n")
        response.writelines("LOAD COMB 518 1.2DL+1.2RLL+1.2CL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 1.2 19 0.53\n")
        response.writelines("LOAD COMB 519 1.2DL+1.2RLL+1.2CL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 1.2 19 0.53\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 520 1.2DL+0.53RLL+1.2CL+1.2+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 16 1.2\n")
        response.writelines("LOAD COMB 521 1.2DL+0.53RLL+1.2CL+1.2-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 16 1.2\n")
        response.writelines("LOAD COMB 522 1.2DL+0.53RLL+1.2CL+1.2+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 16 1.2\n")
        response.writelines("LOAD COMB 523 1.2DL+0.53RLL+1.2CL+1.2-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 16 1.2\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 524 1.2DL+0.53RLL+1.2CL+1.2+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 525 1.2DL+0.53RLL+1.2CL+1.2-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 526 1.2DL+0.53RLL+1.2CL+1.2+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 527 1.2DL+0.53RLL+1.2CL+1.2-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 528 1.2DL+0.53RLL+1.2CL+1.2+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 18 1.2\n")
        response.writelines("LOAD COMB 529 1.2DL+0.53RLL+1.2CL+1.2-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 18 1.2\n")
        response.writelines("LOAD COMB 530 1.2DL+0.53RLL+1.2CL+1.2+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 18 1.2\n")
        response.writelines("LOAD COMB 531 1.2DL+0.53RLL+1.2CL+1.2-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 18 1.2\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 532 1.2DL+0.53RLL+1.2CL+1.2+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 19 1.2\n")
        response.writelines("LOAD COMB 533 1.2DL+0.53RLL+1.2CL+1.2-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 19 1.2\n")
        response.writelines("LOAD COMB 534 1.2DL+0.53RLL+1.2CL+1.2+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 19 1.2\n")
        response.writelines("LOAD COMB 535 1.2DL+0.53RLL+1.2CL+1.2-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 19 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 536 1.5DL+1.5CL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 7 1.5 8 1.5\n")
        response.writelines("LOAD COMB 537 1.5DL+1.5CL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 7 1.5 9 1.5\n")
        response.writelines("LOAD COMB 538 1.5DL+1.5CL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 7 1.5 10 1.5\n")
        response.writelines("LOAD COMB 539 1.5DL+1.5CL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 7 1.5 11 1.5\n")
        response.writelines("LOAD COMB 540 1.5DL+1.5CL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 7 1.5 12 1.5\n")
        response.writelines("LOAD COMB 541 1.5DL+1.5CL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 7 1.5 13 1.5\n")
        response.writelines("LOAD COMB 542 1.5DL+1.5CL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 7 1.5 14 1.5\n")
        response.writelines("LOAD COMB 543 1.5DL+1.5CL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 7 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 544 1.5DL+1.5CL+1.5+SLX\n")
        response.writelines("5 1.5 7 1.5 1 1.5\n")
        response.writelines("LOAD COMB 545 1.5DL+1.5CL+1.5-SLX\n")
        response.writelines("5 1.5 7 1.5 2 1.5\n")
        response.writelines("LOAD COMB 546 1.5DL+1.5CL+1.5+SLZ\n")
        response.writelines("5 1.5 7 1.5 3 1.5\n")
        response.writelines("LOAD COMB 547 1.5DL+1.5CL+1.5-SLZ\n")
        response.writelines("5 1.5 7 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 548 0.9DL+0.9CL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 7 0.9 8 1.5\n")
        response.writelines("LOAD COMB 549 0.9DL+0.9CL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 7 0.9 9 1.5\n")
        response.writelines("LOAD COMB 550 0.9DL+0.9CL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 7 0.9 10 1.5\n")
        response.writelines("LOAD COMB 551 0.9DL+0.9CL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 7 0.9 11 1.5\n")
        response.writelines("LOAD COMB 552 0.9DL+0.9CL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 7 0.9 12 1.5\n")
        response.writelines("LOAD COMB 553 0.9DL+0.9CL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 7 0.9 13 1.5\n")
        response.writelines("LOAD COMB 554 0.9DL+0.9CL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 7 0.9 14 1.5\n")
        response.writelines("LOAD COMB 555 0.9DL+0.9CL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 7 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 556 0.9DL+0.9CL+1.5+SLX\n")
        response.writelines("5 0.9 7 0.9 1 1.5\n")
        response.writelines("LOAD COMB 557 0.9DL+0.9CL+1.5-SLX\n")
        response.writelines("5 0.9 7 0.9 2 1.5\n")
        response.writelines("LOAD COMB 558 0.9DL+0.9CL+1.5+SLZ\n")
        response.writelines("5 0.9 7 0.9 3 1.5\n")
        response.writelines("LOAD COMB 559 0.9DL+0.9CL+1.5-SLZ\n")
        response.writelines("5 0.9 7 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 560 1.2DL+1.2RLL+1.2CL+1.2CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 16 1.2\n")
        response.writelines("LOAD COMB 561 1.2DL+1.2RLL+1.2CL+1.2CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 17 1.2\n")
        response.writelines("LOAD COMB 562 1.2DL+1.2RLL+1.2CL+1.2CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 18 1.2\n")
        response.writelines("LOAD COMB 563 1.2DL+1.2RLL+1.2CL+1.2CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 564 0.9DL+1.2RLL+0.9CL+1.2CRL1\n")
        response.writelines("5 0.9 6 1.2 7 0.9 16 1.2\n")
        response.writelines("LOAD COMB 565 0.9DL+1.2RLL+0.9CL+1.2CRL2\n")
        response.writelines("5 0.9 6 1.2 7 0.9 17 1.2\n")
        response.writelines("LOAD COMB 566 0.9DL+1.2RLL+0.9CL+1.2CRL3\n")
        response.writelines("5 0.9 6 1.2 7 0.9 18 1.2\n")
        response.writelines("LOAD COMB 567 0.9DL+1.2RLL+0.9CL+1.2CRL4\n")
        response.writelines("5 0.9 6 1.2 7 0.9 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 568 1.0DL+0.35RLL+1.0CL+0.35CRL1\n")
        response.writelines("5 1.0 6 0.35 7 1.0 16 0.35\n")
        response.writelines("LOAD COMB 569 1.0DL+0.35RLL+1.0CL+0.35CRL2\n")
        response.writelines("5 1.0 6 0.35 7 1.0 17 0.35\n")
        response.writelines("LOAD COMB 570 1.0DL+0.35RLL+1.0CL+0.35CRL3\n")
        response.writelines("5 1.0 6 0.35 7 1.0 18 0.35\n")
        response.writelines("LOAD COMB 571 1.0DL+0.35RLL+1.0CL+0.35CRL4\n")
        response.writelines("5 1.0 6 0.35 7 1.0 19 0.35\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 1001 1.0DL+1.0RLL+1.0CRL1 \n")
        response.writelines("5 1.0 6 1.0 16 1.0\n")
        response.writelines("LOAD COMB 1002 1.0DL+1.0RLL+1.0CRL2 \n")
        response.writelines("5 1.0 6 1.0 17 1.0\n")
        response.writelines("LOAD COMB 1003 1.0DL+1.0RLL+1.0CRL3 \n")
        response.writelines("5 1.0 6 1.0 18 1.0\n")
        response.writelines("LOAD COMB 1004 1.0DL+1.0RLL+1.0CRL4 \n")
        response.writelines("5 1.0 6 1.0 19 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1005 1.0DL+0.8RLL+0.8WL+X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 8 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1006 1.0DL+0.8RLL+0.8WL+X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 9 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1007 1.0DL+0.8RLL+0.8WL-X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 10 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1008 1.0DL+0.8RLL+0.8WL-X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 11 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1009 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 12 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1010 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 13 0.8 16 0.8 \n")
        response.writelines("LOAD COMB 1011 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 14 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1012 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 15 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1013 1.0DL+0.8RLL+0.8WL+X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 8 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1014 1.0DL+0.8RLL+0.8WL+X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1015 1.0DL+0.8RLL+0.8WL-X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1016 1.0DL+0.8RLL+0.8WL-X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1017 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1018 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 13 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 1019 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 14 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1020 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 15 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1021 1.0DL+0.8RLL+0.8WL+X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 8 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1022 1.0DL+0.8RLL+0.8WL+X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 9 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1023 1.0DL+0.8RLL+0.8WL-X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 10 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1024 1.0DL+0.8RLL+0.8WL-X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 11 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1025 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 12 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1026 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 13 0.8 18 0.8 \n")
        response.writelines("LOAD COMB 1027 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 14 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1028 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 15 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1029 1.0DL+0.8RLL+0.8WL+X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 8 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1030 1.0DL+0.8RLL+0.8WL+X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 9 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1031 1.0DL+0.8RLL+0.8WL-X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 10 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1032 1.0DL+0.8RLL+0.8WL-X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 11 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1033 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 12 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1034 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 13 0.8 19 0.8 \n")
        response.writelines("LOAD COMB 1035 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 14 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1036 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 15 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1037 1.0DL+0.8RLL+0.8+SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 1 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1038 1.0DL+0.8RLL+0.8-SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 2 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1039 1.0DL+0.8RLL+0.8+SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 3 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1040 1.0DL+0.8RLL+0.8-SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 4 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1041 1.0DL+0.8RLL+0.8+SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1042 1.0DL+0.8RLL+0.8-SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1043 1.0DL+0.8RLL+0.8+SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1044 1.0DL+0.8RLL+0.8-SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1045 1.0DL+0.8RLL+0.8+SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 1 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1046 1.0DL+0.8RLL+0.8-SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 2 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1047 1.0DL+0.8RLL+0.8+SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 3 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1048 1.0DL+0.8RLL+0.8-SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 4 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1049 1.0DL+0.8RLL+0.8+SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 1 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1050 1.0DL+0.8RLL+0.8-SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 2 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1051 1.0DL+0.8RLL+0.8+SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 3 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1052 1.0DL+0.8RLL+0.8-SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 4 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1053 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 1054 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 1055 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 1056 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 1057 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 1058 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 1059 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")
        response.writelines("LOAD COMB 1060 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 15 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1061 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 1062 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 1063 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 1064 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1065 1.0DL+1.0RLL+1.0CL+1.0CRL1 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 16 1.0\n")
        response.writelines("LOAD COMB 1066 1.0DL+1.0RLL+1.0CL+1.0CRL2 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 17 1.0\n")
        response.writelines("LOAD COMB 1067 1.0DL+1.0RLL+1.0CL+1.0CRL3 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 18 1.0\n")
        response.writelines("LOAD COMB 1068 1.0DL+1.0RLL+1.0CL+1.0CRL4 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 19 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1069 1.0DL+0.8RLL+1.0CL+0.8WL+X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 8 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1070 1.0DL+0.8RLL+1.0CL+0.8WL+X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 9 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1071 1.0DL+0.8RLL+1.0CL+0.8WL-X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 10 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1072 1.0DL+0.8RLL+1.0CL+0.8WL-X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 11 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1073 1.0DL+0.8RLL+1.0CL+0.8WL+Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 12 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1074 1.0DL+0.8RLL+1.0CL+0.8WL-Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 13 0.8 16 0.8 \n")
        response.writelines("LOAD COMB 1075 1.0DL+0.8RLL+1.0CL+0.8WL+Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 14 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1076 1.0DL+0.8RLL+1.0CL+0.8WL-Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 15 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1077 1.0DL+0.8RLL+1.0CL+0.8WL+X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 8 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1078 1.0DL+0.8RLL+1.0CL+0.8WL+X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1079 1.0DL+0.8RLL+1.0CL+0.8WL-X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1080 1.0DL+0.8RLL+1.0CL+0.8WL-X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1081 1.0DL+0.8RLL+1.0CL+0.8WL+Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1082 1.0DL+0.8RLL+1.0CL+0.8WL-Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 13 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 1083 1.0DL+0.8RLL+1.0CL+0.8WL+Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 14 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1084 1.0DL+0.8RLL+1.0CL+0.8WL-Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 15 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1085 1.0DL+0.8RLL+1.0CL+0.8WL+X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 8 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1086 1.0DL+0.8RLL+1.0CL+0.8WL+X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 9 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1087 1.0DL+0.8RLL+1.0CL+0.8WL-X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 10 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1088 1.0DL+0.8RLL+1.0CL+0.8WL-X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 11 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1089 1.0DL+0.8RLL+1.0CL+0.8WL+Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 12 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1090 1.0DL+0.8RLL+1.0CL+0.8WL-Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 13 0.8 18 0.8 \n")
        response.writelines("LOAD COMB 1091 1.0DL+0.8RLL+1.0CL+0.8WL+Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 14 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1092 1.0DL+0.8RLL+1.0CL+0.8WL-Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 15 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1093 1.0DL+0.8RLL+1.0CL+0.8WL+X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 8 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1094 1.0DL+0.8RLL+1.0CL+0.8WL+X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 9 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1095 1.0DL+0.8RLL+1.0CL+0.8WL-X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 10 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1096 1.0DL+0.8RLL+1.0CL+0.8WL-X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 11 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1097 1.0DL+0.8RLL+1.0CL+0.8WL+Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 12 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1098 1.0DL+0.8RLL+1.0CL+0.8WL-Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 13 0.8 19 0.8 \n")
        response.writelines("LOAD COMB 1099 1.0DL+0.8RLL+1.0CL+0.8WL+Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 14 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1100 1.0DL+0.8RLL+1.0CL+0.8WL-Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 15 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1101 1.0DL+0.8RLL+1.0CL+0.8+SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 1 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1102 1.0DL+0.8RLL+1.0CL+0.8-SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 2 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1103 1.0DL+0.8RLL+1.0CL+0.8+SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 3 0.8 16 0.8\n")
        response.writelines("LOAD COMB 1104 1.0DL+0.8RLL+1.0CL+0.8-SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 4 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1105 1.0DL+0.8RLL+1.0CL+0.8+SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1106 1.0DL+0.8RLL+1.0CL+0.8-SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1107 1.0DL+0.8RLL+1.0CL+0.8+SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1108 1.0DL+0.8RLL+1.0CL+0.8-SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1109 1.0DL+0.8RLL+1.0CL+0.8+SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 1 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1110 1.0DL+0.8RLL+1.0CL+0.8-SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 2 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1111 1.0DL+0.8RLL+1.0CL+0.8+SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 3 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1112 1.0DL+0.8RLL+1.0CL+0.8-SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 1.0 4 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1113 1.0DL+0.8RLL+1.0CL+0.8+SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 1 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1114 1.0DL+0.8RLL+1.0CL+0.8-SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 2 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1115 1.0DL+0.8RLL+1.0CL+0.8+SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 3 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1116 1.0DL+0.8RLL+1.0CL+0.8-SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 1.0 4 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1117 1.0DL+1.0CL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0 8 1.0\n")
        response.writelines("LOAD COMB 1118 1.0DL+1.0CL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 7 1.0 9 1.0\n")
        response.writelines("LOAD COMB 1119 1.0DL+1.0CL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 7 1.0 10 1.0\n")
        response.writelines("LOAD COMB 1120 1.0DL+1.0CL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 7 1.0 11 1.0\n")
        response.writelines("LOAD COMB 1121 1.0DL+1.0CL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 7 1.0 12 1.0\n")
        response.writelines("LOAD COMB 1122 1.0DL+1.0CL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 7 1.0 13 1.0\n")
        response.writelines("LOAD COMB 1123 1.0DL+1.0CL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 7 1.0 14 1.0\n")
        response.writelines("LOAD COMB 1124 1.0DL+1.0CL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 7 1.0 15 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1125 1.0DL+1.0CL+1.0+SLX\n")
        response.writelines("5 1.0 7 1.0 1 1.0\n")
        response.writelines("LOAD COMB 1126 1.0DL+1.0CL+1.0-SLX\n")
        response.writelines("5 1.0 7 1.0 2 1.0\n")
        response.writelines("LOAD COMB 1127 1.0DL+1.0CL+1.0+SLZ\n")
        response.writelines("5 1.0 7 1.0 3 1.0\n")
        response.writelines("LOAD COMB 1128 1.0DL+1.0CL+1.0-SLZ\n")
        response.writelines("5 1.0 7 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 571\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-MLL-CL-WL-CRL(1)':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("**COLLATERAL LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1


        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 MLL\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 CL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 17 CRL1\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 18 CRL2\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 19 CRL3\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 20 CRL4\n")

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05MLL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.5 7 1.05 17 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.5RLL+1.05MLL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.5 7 1.05 18 1.05\n")
        response.writelines("LOAD COMB 102 1.5DL+1.5RLL+1.05MLL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.5 7 1.05 19 1.05\n")
        response.writelines("LOAD COMB 103 1.5DL+1.5RLL+1.05MLL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.5 7 1.05 20 1.05\n")

        response.writelines("LOAD COMB 104 1.5DL+1.05RLL+1.5MLL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.05 7 1.5 17 1.05\n")
        response.writelines("LOAD COMB 105 1.5DL+1.05RLL+1.5MLL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.05 7 1.5 18 1.05\n")
        response.writelines("LOAD COMB 106 1.5DL+1.05RLL+1.5MLL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.05 7 1.5 19 1.05\n")
        response.writelines("LOAD COMB 107 1.5DL+1.05RLL+1.5MLL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.05 7 1.5 20 1.05\n")

        response.writelines("LOAD COMB 108 1.5DL+1.05RLL+1.05MLL+1.5CRL1\n")
        response.writelines("5 1.5 6 1.05 7 1.05 17 1.5\n")
        response.writelines("LOAD COMB 109 1.5DL+1.05RLL+1.05MLL+1.5CRL2\n")
        response.writelines("5 1.5 6 1.05 7 1.05 18 1.5\n")
        response.writelines("LOAD COMB 110 1.5DL+1.05RLL+1.05MLL+1.5CRL3\n")
        response.writelines("5 1.5 6 1.05 7 1.05 19 1.5\n")
        response.writelines("LOAD COMB 111 1.5DL+1.05RLL+1.05MLL+1.5CRL4\n")
        response.writelines("5 1.5 6 1.05 7 1.05 20 1.5\n")



        response.writelines("****\n")
        response.writelines("LOAD COMB 112 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 113 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 114 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 115 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 116 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 117 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 17 1.05\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 16 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 122 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 123 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 124 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 125 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 126 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 18 1.05\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 16 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 19 1.05\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 19 1.05\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 19 1.05\n")
        response.writelines("LOAD COMB 131 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 19 1.05\n")
        response.writelines("LOAD COMB 132 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 19 1.05\n")
        response.writelines("LOAD COMB 133 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 19 1.05\n")
        response.writelines("LOAD COMB 134 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 19 1.05\n")
        response.writelines("LOAD COMB 135 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 16 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 136 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 20 1.05\n")
        response.writelines("LOAD COMB 137 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 20 1.05\n")
        response.writelines("LOAD COMB 138 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 20 1.05\n")
        response.writelines("LOAD COMB 139 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 20 1.05\n")
        response.writelines("LOAD COMB 140 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 20 1.05\n")
        response.writelines("LOAD COMB 141 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 20 1.05\n")
        response.writelines("LOAD COMB 142 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 20 1.05\n")
        response.writelines("LOAD COMB 143 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 16 0.6 20 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 144 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 145 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 146 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 147 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 148 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 149 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 150 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 17 1.05\n")
        response.writelines("LOAD COMB 151 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 16 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 152 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 153 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 154 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 155 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 156 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 157 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 158 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 18 1.05\n")
        response.writelines("LOAD COMB 159 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 16 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 160 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 19 1.05\n")
        response.writelines("LOAD COMB 161 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 19 1.05\n")
        response.writelines("LOAD COMB 162 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 19 1.05\n")
        response.writelines("LOAD COMB 163 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 19 1.05\n")
        response.writelines("LOAD COMB 164 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 19 1.05\n")
        response.writelines("LOAD COMB 165 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 19 1.05\n")
        response.writelines("LOAD COMB 166 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 19 1.05\n")
        response.writelines("LOAD COMB 167 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 16 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 168 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 20 1.05\n")
        response.writelines("LOAD COMB 169 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 20 1.05\n")
        response.writelines("LOAD COMB 170 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 20 1.05\n")
        response.writelines("LOAD COMB 171 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 20 1.05\n")
        response.writelines("LOAD COMB 172 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 20 1.05\n")
        response.writelines("LOAD COMB 173 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 20 1.05\n")
        response.writelines("LOAD COMB 174 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 20 1.05\n")
        response.writelines("LOAD COMB 175 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 16 0.6 20 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 176 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 177 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 178 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 179 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 180 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 181 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 182 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 17 1.2\n")
        response.writelines("LOAD COMB 183 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 16 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 184 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 18 1.2\n")
        response.writelines("LOAD COMB 185 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 18 1.2\n")
        response.writelines("LOAD COMB 186 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 18 1.2\n")
        response.writelines("LOAD COMB 187 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 18 1.2\n")
        response.writelines("LOAD COMB 188 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 18 1.2\n")
        response.writelines("LOAD COMB 189 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 18 1.2\n")
        response.writelines("LOAD COMB 190 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 18 1.2\n")
        response.writelines("LOAD COMB 191 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 16 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 192 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 19 1.2\n")
        response.writelines("LOAD COMB 193 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 19 1.2\n")
        response.writelines("LOAD COMB 194 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 19 1.2\n")
        response.writelines("LOAD COMB 195 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 19 1.2\n")
        response.writelines("LOAD COMB 196 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 19 1.2\n")
        response.writelines("LOAD COMB 197 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 19 1.2\n")
        response.writelines("LOAD COMB 198 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 19 1.2\n")
        response.writelines("LOAD COMB 199 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 16 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 200 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 20 1.2\n")
        response.writelines("LOAD COMB 201 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 20 1.2\n")
        response.writelines("LOAD COMB 202 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 20 1.2\n")
        response.writelines("LOAD COMB 203 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 20 1.2\n")
        response.writelines("LOAD COMB 204 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 20 1.2\n")
        response.writelines("LOAD COMB 205 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 20 1.2\n")
        response.writelines("LOAD COMB 206 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 20 1.2\n")
        response.writelines("LOAD COMB 207 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 16 0.6 20 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 208 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 209 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 210 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 211 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 212 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 213 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 214 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 215 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 216 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 19 1.05\n")
        response.writelines("LOAD COMB 217 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 19 1.05\n")
        response.writelines("LOAD COMB 218 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 19 1.05\n")
        response.writelines("LOAD COMB 219 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 220 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 20 1.05\n")
        response.writelines("LOAD COMB 221 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 20 1.05\n")
        response.writelines("LOAD COMB 222 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 20 1.05\n")
        response.writelines("LOAD COMB 223 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 20 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 224 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 225 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 226 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 227 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 228 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 229 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 230 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 231 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 232 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 19 1.05\n")
        response.writelines("LOAD COMB 233 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 19 1.05\n")
        response.writelines("LOAD COMB 234 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 19 1.05\n")
        response.writelines("LOAD COMB 235 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 236 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 20 1.05\n")
        response.writelines("LOAD COMB 237 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 20 1.05\n")
        response.writelines("LOAD COMB 238 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 20 1.05\n")
        response.writelines("LOAD COMB 239 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 20 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 240 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 241 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 242 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 243 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 244 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 18 1.2\n")
        response.writelines("LOAD COMB 245 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 18 1.2\n")
        response.writelines("LOAD COMB 246 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 18 1.2\n")
        response.writelines("LOAD COMB 247 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 248 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 19 1.2\n")
        response.writelines("LOAD COMB 249 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 19 1.2\n")
        response.writelines("LOAD COMB 250 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 19 1.2\n")
        response.writelines("LOAD COMB 251 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 252 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 20 1.2\n")
        response.writelines("LOAD COMB 253 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 20 1.2\n")
        response.writelines("LOAD COMB 254 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 20 1.2\n")
        response.writelines("LOAD COMB 255 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 20 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 256 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 257 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 258 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 259 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 260 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 261 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 262 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 17 0.53\n")
        response.writelines("LOAD COMB 263 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 16 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 264 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 265 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 266 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 267 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 268 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 269 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 270 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 18 0.53\n")
        response.writelines("LOAD COMB 271 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 16 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 272 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 19 0.53\n")
        response.writelines("LOAD COMB 273 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 19 0.53\n")
        response.writelines("LOAD COMB 274 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 19 0.53\n")
        response.writelines("LOAD COMB 275 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 19 0.53\n")
        response.writelines("LOAD COMB 276 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 19 0.53\n")
        response.writelines("LOAD COMB 277 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 19 0.53\n")
        response.writelines("LOAD COMB 278 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 19 0.53\n")
        response.writelines("LOAD COMB 279 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 16 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 280 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 20 0.53\n")
        response.writelines("LOAD COMB 281 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 20 0.53\n")
        response.writelines("LOAD COMB 282 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 20 0.53\n")
        response.writelines("LOAD COMB 283 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 20 0.53\n")
        response.writelines("LOAD COMB 284 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 20 0.53\n")
        response.writelines("LOAD COMB 285 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 20 0.53\n")
        response.writelines("LOAD COMB 286 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 20 0.53\n")
        response.writelines("LOAD COMB 287 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 16 1.2 20 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 288 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 289 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 290 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 291 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 292 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 293 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 294 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 17 0.53\n")
        response.writelines("LOAD COMB 295 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 296 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 297 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 298 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 299 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 300 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 301 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 302 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 18 0.53\n")
        response.writelines("LOAD COMB 303 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 304 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 19 0.53\n")
        response.writelines("LOAD COMB 305 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 19 0.53\n")
        response.writelines("LOAD COMB 306 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 19 0.53\n")
        response.writelines("LOAD COMB 307 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 19 0.53\n")
        response.writelines("LOAD COMB 308 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 19 0.53\n")
        response.writelines("LOAD COMB 309 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 19 0.53\n")
        response.writelines("LOAD COMB 310 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 19 0.53\n")
        response.writelines("LOAD COMB 311 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 312 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 20 0.53\n")
        response.writelines("LOAD COMB 313 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 20 0.53\n")
        response.writelines("LOAD COMB 314 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 20 0.53\n")
        response.writelines("LOAD COMB 315 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 20 0.53\n")
        response.writelines("LOAD COMB 316 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 20 0.53\n")
        response.writelines("LOAD COMB 317 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 20 0.53\n")
        response.writelines("LOAD COMB 318 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 20 0.53\n")
        response.writelines("LOAD COMB 319 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2 20 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 320 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 321 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 322 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 323 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 324 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 325 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 326 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 17 1.2\n")
        response.writelines("LOAD COMB 327 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 16 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 328 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 18 1.2\n")
        response.writelines("LOAD COMB 329 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 18 1.2\n")
        response.writelines("LOAD COMB 330 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 18 1.2\n")
        response.writelines("LOAD COMB 331 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 18 1.2\n")
        response.writelines("LOAD COMB 332 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 18 1.2\n")
        response.writelines("LOAD COMB 333 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 18 1.2\n")
        response.writelines("LOAD COMB 334 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 18 1.2\n")
        response.writelines("LOAD COMB 335 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 16 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 336 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 19 1.2\n")
        response.writelines("LOAD COMB 337 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 19 1.2\n")
        response.writelines("LOAD COMB 338 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 19 1.2\n")
        response.writelines("LOAD COMB 339 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 19 1.2\n")
        response.writelines("LOAD COMB 340 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 19 1.2\n")
        response.writelines("LOAD COMB 341 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 19 1.2\n")
        response.writelines("LOAD COMB 342 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 19 1.2\n")
        response.writelines("LOAD COMB 343 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 16 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 344 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 20 1.2\n")
        response.writelines("LOAD COMB 345 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 20 1.2\n")
        response.writelines("LOAD COMB 346 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 20 1.2\n")
        response.writelines("LOAD COMB 347 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 20 1.2\n")
        response.writelines("LOAD COMB 348 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 20 1.2\n")
        response.writelines("LOAD COMB 349 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 20 1.2\n")
        response.writelines("LOAD COMB 350 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 20 1.2\n")
        response.writelines("LOAD COMB 351 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 16 1.2 20 1.2\n")

        response.writelines("LOAD COMB 352 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 353 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 354 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 355 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 356 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 357 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 358 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 359 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 360 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 19 0.53\n")
        response.writelines("LOAD COMB 361 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 19 0.53\n")
        response.writelines("LOAD COMB 362 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 19 0.53\n")
        response.writelines("LOAD COMB 363 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 19 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 364 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 20 0.53\n")
        response.writelines("LOAD COMB 365 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 20 0.53\n")
        response.writelines("LOAD COMB 366 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 20 0.53\n")
        response.writelines("LOAD COMB 367 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 20 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 368 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 369 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 370 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 371 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 372 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 373 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 374 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 375 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 376 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 19 0.53\n")
        response.writelines("LOAD COMB 377 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 19 0.53\n")
        response.writelines("LOAD COMB 378 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 19 0.53\n")
        response.writelines("LOAD COMB 379 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 19 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 380 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 20 0.53\n")
        response.writelines("LOAD COMB 381 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 20 0.53\n")
        response.writelines("LOAD COMB 382 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 20 0.53\n")
        response.writelines("LOAD COMB 383 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 20 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 384 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 385 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 386 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 387 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 388 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 18 1.2\n")
        response.writelines("LOAD COMB 389 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 18 1.2\n")
        response.writelines("LOAD COMB 390 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 18 1.2\n")
        response.writelines("LOAD COMB 391 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 18 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 392 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 19 1.2\n")
        response.writelines("LOAD COMB 393 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 19 1.2\n")
        response.writelines("LOAD COMB 394 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 19 1.2\n")
        response.writelines("LOAD COMB 395 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 19 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 396 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 20 1.2\n")
        response.writelines("LOAD COMB 397 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 20 1.2\n")
        response.writelines("LOAD COMB 398 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 20 1.2\n")
        response.writelines("LOAD COMB 399 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 20 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 400 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 401 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 402 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 403 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 404 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 405 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 406 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("LOAD COMB 407 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 408 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 409 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 410 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 411 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 412 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 413 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 414 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 415 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 416 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 417 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 418 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("LOAD COMB 419 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 420 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 421 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 422 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 423 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 424 1.2DL+1.2RLL+1.2MLL+1.2CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 17 1.2\n")
        response.writelines("LOAD COMB 425 1.2DL+1.2RLL+1.2MLL+1.2CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 18 1.2\n")
        response.writelines("LOAD COMB 426 1.2DL+1.2RLL+1.2MLL+1.2CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 19 1.2\n")
        response.writelines("LOAD COMB 427 1.2DL+1.2RLL+1.2MLL+1.2CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 20 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 428 0.9DL+1.2RLL+1.2MLL+1.2CRL1\n")
        response.writelines("5 0.9 6 1.2 7 1.2 17 1.2\n")
        response.writelines("LOAD COMB 429 0.9DL+1.2RLL+1.2MLL+1.2CRL2\n")
        response.writelines("5 0.9 6 1.2 7 1.2 18 1.2\n")
        response.writelines("LOAD COMB 430 0.9DL+1.2RLL+1.2MLL+1.2CRL3\n")
        response.writelines("5 0.9 6 1.2 7 1.2 19 1.2\n")
        response.writelines("LOAD COMB 431 0.9DL+1.2RLL+1.2MLL+1.2CRL4\n")
        response.writelines("5 0.9 6 1.2 7 1.2 20 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 432 1.0DL+0.35RLL+0.35MLL+0.35CRL1\n")
        response.writelines("5 1.0 6 0.35 7 0.35 17 0.35\n")
        response.writelines("LOAD COMB 433 1.0DL+0.35RLL+0.35MLL+0.35CRL2\n")
        response.writelines("5 1.0 6 0.35 7 0.35 18 0.35\n")
        response.writelines("LOAD COMB 434 1.0DL+0.35RLL+0.35MLL+0.35CRL3\n")
        response.writelines("5 1.0 6 0.35 7 0.35 19 0.35\n")
        response.writelines("LOAD COMB 435 1.0DL+0.35RLL+0.35MLL+0.35CRL4\n")
        response.writelines("5 1.0 6 0.35 7 0.35 20 0.35\n")

        response.writelines("LOAD COMB 436 1.5DL+1.5RLL+1.05MLL+1.5CL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.5 7 1.05 8 1.5 17 1.05\n")
        response.writelines("LOAD COMB 437 1.5DL+1.5RLL+1.05MLL+1.5CL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.5 7 1.05 8 1.5 18 1.05\n")
        response.writelines("LOAD COMB 438 1.5DL+1.5RLL+1.05MLL+1.5CL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.5 7 1.05 8 1.5 19 1.05\n")
        response.writelines("LOAD COMB 439 1.5DL+1.5RLL+1.05MLL+1.5CL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.5 7 1.05 8 1.5 20 1.05\n")

        response.writelines("LOAD COMB 440 1.5DL+1.05RLL+1.5MLL+1.5CL+1.05CRL1\n")
        response.writelines("5 1.5 6 1.05 7 1.5 8 1.5 17 1.05\n")
        response.writelines("LOAD COMB 441 1.5DL+1.05RLL+1.5MLL+1.5CL+1.05CRL2\n")
        response.writelines("5 1.5 6 1.05 7 1.5 8 1.5 18 1.05\n")
        response.writelines("LOAD COMB 442 1.5DL+1.05RLL+1.5MLL+1.5CL+1.05CRL3\n")
        response.writelines("5 1.5 6 1.05 7 1.5 8 1.5 19 1.05\n")
        response.writelines("LOAD COMB 443 1.5DL+1.05RLL+1.5MLL+1.5CL+1.05CRL4\n")
        response.writelines("5 1.5 6 1.05 7 1.5 8 1.5 20 1.05\n")

        response.writelines("LOAD COMB 444 1.5DL+1.05RLL+1.05MLL+1.5CL+1.5CRL1\n")
        response.writelines("5 1.5 6 1.05 7 1.05 8 1.5 17 1.5\n")
        response.writelines("LOAD COMB 445 1.5DL+1.05RLL+1.05MLL+1.5CL+1.5CRL2\n")
        response.writelines("5 1.5 6 1.05 7 1.05 8 1.5 18 1.5\n")
        response.writelines("LOAD COMB 446 1.5DL+1.05RLL+1.05MLL+1.5CL+1.5CRL3\n")
        response.writelines("5 1.5 6 1.05 7 1.05 8 1.5 19 1.5\n")
        response.writelines("LOAD COMB 447 1.5DL+1.05RLL+1.05MLL+1.5CL+1.5CRL4\n")
        response.writelines("5 1.5 6 1.05 7 1.05 8 1.5 20 1.5\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 448 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 449 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 450 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 451 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 452 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 453 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 454 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 15 0.6 17 1.05\n")
        response.writelines("LOAD COMB 455 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 16 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 456 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 457 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 458 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 459 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 460 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 461 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 462 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 15 0.6 18 1.05\n")
        response.writelines("LOAD COMB 463 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 16 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 464 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 9 0.6 19 1.05\n")
        response.writelines("LOAD COMB 465 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 10 0.6 19 1.05\n")
        response.writelines("LOAD COMB 466 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 11 0.6 19 1.05\n")
        response.writelines("LOAD COMB 467 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 12 0.6 19 1.05\n")
        response.writelines("LOAD COMB 468 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 13 0.6 19 1.05\n")
        response.writelines("LOAD COMB 469 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 14 0.6 19 1.05\n")
        response.writelines("LOAD COMB 470 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 15 0.6 19 1.05\n")
        response.writelines("LOAD COMB 471 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 16 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 472 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 9 0.6 20 1.05\n")
        response.writelines("LOAD COMB 473 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 10 0.6 20 1.05\n")
        response.writelines("LOAD COMB 474 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 11 0.6 20 1.05\n")
        response.writelines("LOAD COMB 475 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 12 0.6 20 1.05\n")
        response.writelines("LOAD COMB 476 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 13 0.6 20 1.05\n")
        response.writelines("LOAD COMB 477 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 14 0.6 20 1.05\n")
        response.writelines("LOAD COMB 478 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 15 0.6 20 1.05\n")
        response.writelines("LOAD COMB 479 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 16 0.6 20 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 480 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 481 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 482 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 483 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 484 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 485 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z+CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 486 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 15 0.6 17 1.05\n")
        response.writelines("LOAD COMB 487 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z-CPI+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 16 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 488 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 489 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 490 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 491 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 492 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 493 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z+CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 494 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 15 0.6 18 1.05\n")
        response.writelines("LOAD COMB 495 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z-CPI+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 16 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 496 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 9 0.6 19 1.05\n")
        response.writelines("LOAD COMB 497 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 10 0.6 19 1.05\n")
        response.writelines("LOAD COMB 498 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 11 0.6 19 1.05\n")
        response.writelines("LOAD COMB 499 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 12 0.6 19 1.05\n")
        response.writelines("LOAD COMB 500 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 13 0.6 19 1.05\n")
        response.writelines("LOAD COMB 501 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z+CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 14 0.6 19 1.05\n")
        response.writelines("LOAD COMB 502 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 15 0.6 19 1.05\n")
        response.writelines("LOAD COMB 503 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z-CPI+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 16 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 504 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 9 0.6 20 1.05\n")
        response.writelines("LOAD COMB 505 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 10 0.6 20 1.05\n")
        response.writelines("LOAD COMB 506 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 11 0.6 20 1.05\n")
        response.writelines("LOAD COMB 507 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 12 0.6 20 1.05\n")
        response.writelines("LOAD COMB 508 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 13 0.6 20 1.05\n")
        response.writelines("LOAD COMB 509 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z+CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 14 0.6 20 1.05\n")
        response.writelines("LOAD COMB 510 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 15 0.6 20 1.05\n")
        response.writelines("LOAD COMB 511 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z-CPI+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 16 0.6 20 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 512 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 513 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 514 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 515 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 516 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 517 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 518 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 15 0.6 17 1.2\n")
        response.writelines("LOAD COMB 519 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 16 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 520 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 9 0.6 18 1.2\n")
        response.writelines("LOAD COMB 521 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 10 0.6 18 1.2\n")
        response.writelines("LOAD COMB 522 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 11 0.6 18 1.2\n")
        response.writelines("LOAD COMB 523 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 12 0.6 18 1.2\n")
        response.writelines("LOAD COMB 524 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 13 0.6 18 1.2\n")
        response.writelines("LOAD COMB 525 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 14 0.6 18 1.2\n")
        response.writelines("LOAD COMB 526 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 15 0.6 18 1.2\n")
        response.writelines("LOAD COMB 527 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 16 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 528 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 9 0.6 19 1.2\n")
        response.writelines("LOAD COMB 529 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 10 0.6 19 1.2\n")
        response.writelines("LOAD COMB 530 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 11 0.6 19 1.2\n")
        response.writelines("LOAD COMB 531 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 12 0.6 19 1.2\n")
        response.writelines("LOAD COMB 532 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 13 0.6 19 1.2\n")
        response.writelines("LOAD COMB 533 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 14 0.6 19 1.2\n")
        response.writelines("LOAD COMB 534 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 15 0.6 19 1.2\n")
        response.writelines("LOAD COMB 535 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 16 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 536 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 9 0.6 20 1.2\n")
        response.writelines("LOAD COMB 537 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 10 0.6 20 1.2\n")
        response.writelines("LOAD COMB 538 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 11 0.6 20 1.2\n")
        response.writelines("LOAD COMB 539 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 12 0.6 20 1.2\n")
        response.writelines("LOAD COMB 540 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 13 0.6 20 1.2\n")
        response.writelines("LOAD COMB 541 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 14 0.6 20 1.2\n")
        response.writelines("LOAD COMB 542 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 15 0.6 20 1.2\n")
        response.writelines("LOAD COMB 543 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 16 0.6 20 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 544 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 545 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 546 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 547 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 548 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 549 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 550 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 551 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 552 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 1 0.6 19 1.05\n")
        response.writelines("LOAD COMB 553 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 2 0.6 19 1.05\n")
        response.writelines("LOAD COMB 554 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 3 0.6 19 1.05\n")
        response.writelines("LOAD COMB 555 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 4 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 556 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 1 0.6 20 1.05\n")
        response.writelines("LOAD COMB 557 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 2 0.6 20 1.05\n")
        response.writelines("LOAD COMB 558 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 3 0.6 20 1.05\n")
        response.writelines("LOAD COMB 559 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 4 0.6 20 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 560 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 561 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLX+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 562 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 563 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLZ+1.05CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 564 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 565 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLX+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 566 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 567 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLZ+1.05CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 568 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 1 0.6 19 1.05\n")
        response.writelines("LOAD COMB 569 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLX+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 2 0.6 19 1.05\n")
        response.writelines("LOAD COMB 570 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 3 0.6 19 1.05\n")
        response.writelines("LOAD COMB 571 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLZ+1.05CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 4 0.6 19 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 572 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 1 0.6 20 1.05\n")
        response.writelines("LOAD COMB 573 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLX+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 2 0.6 20 1.05\n")
        response.writelines("LOAD COMB 574 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 3 0.6 20 1.05\n")
        response.writelines("LOAD COMB 575 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLZ+1.05CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.2  8 1.2 4 0.6 20 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 576 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 577 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 578 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 579 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 4 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 580 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 1 0.6 18 1.2\n")
        response.writelines("LOAD COMB 581 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 2 0.6 18 1.2\n")
        response.writelines("LOAD COMB 582 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 3 0.6 18 1.2\n")
        response.writelines("LOAD COMB 583 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 4 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 584 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 1 0.6 19 1.2\n")
        response.writelines("LOAD COMB 585 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 2 0.6 19 1.2\n")
        response.writelines("LOAD COMB 586 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 3 0.6 19 1.2\n")
        response.writelines("LOAD COMB 587 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 4 0.6 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 588 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 1 0.6 20 1.2\n")
        response.writelines("LOAD COMB 589 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 2 0.6 20 1.2\n")
        response.writelines("LOAD COMB 590 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 3 0.6 20 1.2\n")
        response.writelines("LOAD COMB 591 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 1.05 7 1.05  8 1.2 4 0.6 20 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 592 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 593 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 594 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 595 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 596 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 597 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 598 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 15 1.2 17 0.53\n")
        response.writelines("LOAD COMB 599 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 600 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 601 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 602 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 603 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 604 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 605 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 606 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 15 1.2 18 0.53\n")
        response.writelines("LOAD COMB 607 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 608 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 9 1.2 19 0.53\n")
        response.writelines("LOAD COMB 609 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 10 1.2 19 0.53\n")
        response.writelines("LOAD COMB 610 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 11 1.2 19 0.53\n")
        response.writelines("LOAD COMB 611 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 12 1.2 19 0.53\n")
        response.writelines("LOAD COMB 612 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 13 1.2 19 0.53\n")
        response.writelines("LOAD COMB 613 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 14 1.2 19 0.53\n")
        response.writelines("LOAD COMB 614 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 15 1.2 19 0.53\n")
        response.writelines("LOAD COMB 615 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 616 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 9 1.2 20 0.53\n")
        response.writelines("LOAD COMB 617 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 10 1.2 20 0.53\n")
        response.writelines("LOAD COMB 618 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 11 1.2 20 0.53\n")
        response.writelines("LOAD COMB 619 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 12 1.2 20 0.53\n")
        response.writelines("LOAD COMB 620 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 13 1.2 20 0.53\n")
        response.writelines("LOAD COMB 621 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 14 1.2 20 0.53\n")
        response.writelines("LOAD COMB 622 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 15 1.2 20 0.53\n")
        response.writelines("LOAD COMB 623 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 1.2 20 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 624 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 625 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 626 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 627 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 628 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 629 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z+CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 630 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 15 1.2 17 0.53\n")
        response.writelines("LOAD COMB 631 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z-CPI+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 632 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 633 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 634 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 635 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 636 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 637 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z+CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 638 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 15 1.2 18 0.53\n")
        response.writelines("LOAD COMB 639 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z-CPI+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 640 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 9 1.2 19 0.53\n")
        response.writelines("LOAD COMB 641 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 10 1.2 19 0.53\n")
        response.writelines("LOAD COMB 642 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 11 1.2 19 0.53\n")
        response.writelines("LOAD COMB 643 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 12 1.2 19 0.53\n")
        response.writelines("LOAD COMB 644 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 13 1.2 19 0.53\n")
        response.writelines("LOAD COMB 645 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z+CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 14 1.2 19 0.53\n")
        response.writelines("LOAD COMB 646 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 15 1.2 19 0.53\n")
        response.writelines("LOAD COMB 647 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z-CPI+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2 19 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 648 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 9 1.2 20 0.53\n")
        response.writelines("LOAD COMB 649 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 10 1.2 20 0.53\n")
        response.writelines("LOAD COMB 650 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 11 1.2 20 0.53\n")
        response.writelines("LOAD COMB 651 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 12 1.2 20 0.53\n")
        response.writelines("LOAD COMB 652 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 13 1.2 20 0.53\n")
        response.writelines("LOAD COMB 653 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z+CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 14 1.2 20 0.53\n")
        response.writelines("LOAD COMB 654 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 15 1.2 20 0.53\n")
        response.writelines("LOAD COMB 655 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z-CPI+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2 20 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 656 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 657 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 658 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 659 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 660 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 661 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 662 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 15 1.2 17 1.2\n")
        response.writelines("LOAD COMB 663 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 16 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 664 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 9 1.2 18 1.2\n")
        response.writelines("LOAD COMB 665 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 10 1.2 18 1.2\n")
        response.writelines("LOAD COMB 666 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 11 1.2 18 1.2\n")
        response.writelines("LOAD COMB 667 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 12 1.2 18 1.2\n")
        response.writelines("LOAD COMB 668 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 13 1.2 18 1.2\n")
        response.writelines("LOAD COMB 669 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 14 1.2 18 1.2\n")
        response.writelines("LOAD COMB 670 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 15 1.2 18 1.2\n")
        response.writelines("LOAD COMB 671 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 16 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 672 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 9 1.2 19 1.2\n")
        response.writelines("LOAD COMB 673 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 10 1.2 19 1.2\n")
        response.writelines("LOAD COMB 674 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 11 1.2 19 1.2\n")
        response.writelines("LOAD COMB 675 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 12 1.2 19 1.2\n")
        response.writelines("LOAD COMB 676 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 13 1.2 19 1.2\n")
        response.writelines("LOAD COMB 677 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 14 1.2 19 1.2\n")
        response.writelines("LOAD COMB 678 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 15 1.2 19 1.2\n")
        response.writelines("LOAD COMB 679 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 16 1.2 19 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 680 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 9 1.2 20 1.2\n")
        response.writelines("LOAD COMB 681 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 10 1.2 20 1.2\n")
        response.writelines("LOAD COMB 682 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 11 1.2 20 1.2\n")
        response.writelines("LOAD COMB 683 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 12 1.2 20 1.2\n")
        response.writelines("LOAD COMB 684 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 13 1.2 20 1.2\n")
        response.writelines("LOAD COMB 685 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 14 1.2 20 1.2\n")
        response.writelines("LOAD COMB 686 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 15 1.2 20 1.2\n")
        response.writelines("LOAD COMB 687 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 16 1.2 20 1.2\n")

        response.writelines("LOAD COMB 688 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 689 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 690 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 691 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 692 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 693 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 694 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 695 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 696 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 1 1.2 19 0.53\n")
        response.writelines("LOAD COMB 697 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 2 1.2 19 0.53\n")
        response.writelines("LOAD COMB 698 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 3 1.2 19 0.53\n")
        response.writelines("LOAD COMB 699 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 4 1.2 19 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 700 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 1 1.2 20 0.53\n")
        response.writelines("LOAD COMB 701 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 2 1.2 20 0.53\n")
        response.writelines("LOAD COMB 702 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 3 1.2 20 0.53\n")
        response.writelines("LOAD COMB 703 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 4 1.2 20 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 704 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 705 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLX+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 706 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 707 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLZ+0.53CRL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 708 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 709 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLX+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 710 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 711 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLZ+0.53CRL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 712 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 1 1.2 19 0.53\n")
        response.writelines("LOAD COMB 713 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLX+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 2 1.2 19 0.53\n")
        response.writelines("LOAD COMB 714 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 3 1.2 19 0.53\n")
        response.writelines("LOAD COMB 715 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLZ+0.53CRL3\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 4 1.2 19 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 716 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 1 1.2 20 0.53\n")
        response.writelines("LOAD COMB 717 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLX+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 2 1.2 20 0.53\n")
        response.writelines("LOAD COMB 718 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 3 1.2 20 0.53\n")
        response.writelines("LOAD COMB 719 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLZ+0.53CRL4\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 4 1.2 20 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 720 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 721 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLX+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 722 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 723 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLZ+1.2CRL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 724 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 1 1.2 18 1.2\n")
        response.writelines("LOAD COMB 725 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLX+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 2 1.2 18 1.2\n")
        response.writelines("LOAD COMB 726 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 3 1.2 18 1.2\n")
        response.writelines("LOAD COMB 727 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLZ+1.2CRL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 4 1.2 18 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 728 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 1 1.2 19 1.2\n")
        response.writelines("LOAD COMB 729 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLX+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 2 1.2 19 1.2\n")
        response.writelines("LOAD COMB 730 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 3 1.2 19 1.2\n")
        response.writelines("LOAD COMB 731 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLZ+1.2CRL3\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 4 1.2 19 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 732 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 1 1.2 20 1.2\n")
        response.writelines("LOAD COMB 733 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLX+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 2 1.2 20 1.2\n")
        response.writelines("LOAD COMB 734 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 3 1.2 20 1.2\n")
        response.writelines("LOAD COMB 735 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLZ+1.2CRL4\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 4 1.2 20 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 736 1.5DL+1.5CL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5 9 1.5\n")
        response.writelines("LOAD COMB 737 1.5DL+1.5CL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 8 1.5 10 1.5\n")
        response.writelines("LOAD COMB 738 1.5DL+1.5CL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 8 1.5 11 1.5\n")
        response.writelines("LOAD COMB 739 1.5DL+1.5CL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 8 1.5 12 1.5\n")
        response.writelines("LOAD COMB 740 1.5DL+1.5CL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 8 1.5 13 1.5\n")
        response.writelines("LOAD COMB 741 1.5DL+1.5CL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 8 1.5 14 1.5\n")
        response.writelines("LOAD COMB 742 1.5DL+1.5CL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 8 1.5 15 1.5\n")
        response.writelines("LOAD COMB 743 1.5DL+1.5CL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 8 1.5 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 744 1.5DL+1.5CL+1.5+SLX\n")
        response.writelines("5 1.5 8 1.5 1 1.5\n")
        response.writelines("LOAD COMB 745 1.5DL+1.5CL+1.5-SLX\n")
        response.writelines("5 1.5 8 1.5 2 1.5\n")
        response.writelines("LOAD COMB 746 1.5DL+1.5CL+1.5+SLZ\n")
        response.writelines("5 1.5 8 1.5 3 1.5\n")
        response.writelines("LOAD COMB 747 1.5DL+1.5CL+1.5-SLZ\n")
        response.writelines("5 1.5 8 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 748 0.9DL+0.9CL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 0.9 9 1.5\n")
        response.writelines("LOAD COMB 749 0.9DL+0.9CL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 8 0.9 10 1.5\n")
        response.writelines("LOAD COMB 750 0.9DL+0.9CL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 8 0.9 11 1.5\n")
        response.writelines("LOAD COMB 751 0.9DL+0.9CL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 8 0.9 12 1.5\n")
        response.writelines("LOAD COMB 752 0.9DL+0.9CL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 8 0.9 13 1.5\n")
        response.writelines("LOAD COMB 753 0.9DL+0.9CL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 8 0.9 14 1.5\n")
        response.writelines("LOAD COMB 754 0.9DL+0.9CL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 8 0.9 15 1.5\n")
        response.writelines("LOAD COMB 755 0.9DL+0.9CL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 8 0.9 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 756 0.9DL+0.9CL+1.5+SLX\n")
        response.writelines("5 0.9 8 0.9 1 1.5\n")
        response.writelines("LOAD COMB 757 0.9DL+0.9CL+1.5-SLX\n")
        response.writelines("5 0.9 8 0.9 2 1.5\n")
        response.writelines("LOAD COMB 758 0.9DL+0.9CL+1.5+SLZ\n")
        response.writelines("5 0.9 8 0.9 3 1.5\n")
        response.writelines("LOAD COMB 759 0.9DL+0.9CL+1.5-SLZ\n")
        response.writelines("5 0.9 8 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 760 1.2DL+1.2RLL+1.2MLL+1.2CL+1.2CRL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 17 1.2\n")
        response.writelines("LOAD COMB 761 1.2DL+1.2RLL+1.2MLL+1.2CL+1.2CRL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 18 1.2\n")
        response.writelines("LOAD COMB 762 1.2DL+1.2RLL+1.2MLL+1.2CL+1.2CRL3\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 19 1.2\n")
        response.writelines("LOAD COMB 763 1.2DL+1.2RLL+1.2MLL+1.2CL+1.2CRL4\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 20 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 764 0.9DL+1.2RLL+1.2MLL+0.9CL+1.2CRL1\n")
        response.writelines("5 0.9 6 1.2 7 1.2 8 0.9 17 1.2\n")
        response.writelines("LOAD COMB 765 0.9DL+1.2RLL+1.2MLL+0.9CL+1.2CRL2\n")
        response.writelines("5 0.9 6 1.2 7 1.2 8 0.9 18 1.2\n")
        response.writelines("LOAD COMB 766 0.9DL+1.2RLL+1.2MLL+0.9CL+1.2CRL3\n")
        response.writelines("5 0.9 6 1.2 7 1.2 8 0.9 19 1.2\n")
        response.writelines("LOAD COMB 767 0.9DL+1.2RLL+1.2MLL+0.9CL+1.2CRL4\n")
        response.writelines("5 0.9 6 1.2 7 1.2 8 0.9 20 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 768 1.0DL+0.35RLL+0.35MLL+1.0CL+0.35CRL1\n")
        response.writelines("5 1.0 6 0.35 7 0.35 8 1.0 17 1.2\n")
        response.writelines("LOAD COMB 769 1.0DL+0.35RLL+0.35MLL+1.0CL+0.35CRL2\n")
        response.writelines("5 1.0 6 0.35 7 0.35 8 1.0 18 1.2\n")
        response.writelines("LOAD COMB 770 1.0DL+0.35RLL+0.35MLL+1.0CL+0.35CRL3\n")
        response.writelines("5 1.0 6 0.35 7 0.35 8 1.0 19 1.2\n")
        response.writelines("LOAD COMB 771 1.0DL+0.35RLL+0.35MLL+1.0CL+0.35CRL4\n")
        response.writelines("5 1.0 6 0.35 7 0.35 8 1.0 20 1.2\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 1001 1.0DL+1.0RLL+1.0MLL+1.0CRL1 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 17 1.0\n")
        response.writelines("LOAD COMB 1002 1.0DL+1.0RLL+1.0MLL+1.0CRL2 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 18 1.0\n")
        response.writelines("LOAD COMB 1003 1.0DL+1.0RLL+1.0MLL+1.0CRL3 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 19 1.0\n")
        response.writelines("LOAD COMB 1004 1.0DL+1.0RLL+1.0MLL+1.0CRL4 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 20 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1005 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1006 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1007 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1008 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1009 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1010 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 1011 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1012 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1013 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1014 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1015 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1016 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1017 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1018 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 18 0.8 \n")
        response.writelines("LOAD COMB 1019 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1020 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1021 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1022 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1023 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1024 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1025 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1026 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 19 0.8 \n")
        response.writelines("LOAD COMB 1027 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1028 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1029 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1030 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1031 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1032 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1033 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1034 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 20 0.8 \n")
        response.writelines("LOAD COMB 1035 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1036 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8 20 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1037 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1038 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1039 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1040 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1041 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1042 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1043 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1044 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1045 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1046 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1047 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1048 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1049 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1050 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1051 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1052 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 20 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1053 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 1054 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 1055 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 1056 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 1057 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 1058 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 14 1.0\n")
        response.writelines("LOAD COMB 1059 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 15 1.0\n")
        response.writelines("LOAD COMB 1060 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1061 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 1062 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 1063 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 1064 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("LOAD COMB 1065 1.0DL+1.0RLL+1.0MLL+1.0CL+1.0CRL1 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 8 1.0 17 1.0\n")
        response.writelines("LOAD COMB 1066 1.0DL+1.0RLL+1.0MLL+1.0CL+1.0CRL2 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 8 1.0 18 1.0\n")
        response.writelines("LOAD COMB 1067 1.0DL+1.0RLL+1.0MLL+1.0CL+1.0CRL3 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 8 1.0 19 1.0\n")
        response.writelines("LOAD COMB 1068 1.0DL+1.0RLL+1.0MLL+1.0CL+1.0CRL4 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 8 1.0 20 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1069 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1070 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1071 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1072 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1073 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 13 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1074 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z+CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 14 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 1075 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 15 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1076 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z-CPI+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 16 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1077 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 9 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1078 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 10 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1079 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 11 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1080 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 12 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1081 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 13 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1082 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z+CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 14 0.8 18 0.8 \n")
        response.writelines("LOAD COMB 1083 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 15 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1084 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z-CPI+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 16 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1085 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 9 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1086 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 10 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1087 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 11 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1088 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 12 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1089 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 13 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1090 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z+CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 14 0.8 19 0.8 \n")
        response.writelines("LOAD COMB 1091 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 15 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1092 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z-CPI+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 16 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1093 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 9 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1094 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 10 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1095 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 11 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1096 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 12 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1097 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 13 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1098 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z+CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 14 0.8 20 0.8 \n")
        response.writelines("LOAD COMB 1099 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 15 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1100 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z-CPI+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 16 0.8 20 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1101 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1102 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLX+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1103 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 1104 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLZ+0.8CRL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1105 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 1 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1106 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLX+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 2 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1107 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 3 0.8 18 0.8\n")
        response.writelines("LOAD COMB 1108 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLZ+0.8CRL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 4 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1109 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 1 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1110 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLX+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 2 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1111 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 3 0.8 19 0.8\n")
        response.writelines("LOAD COMB 1112 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLZ+0.8CRL3\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 4 0.8 19 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1113 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 1 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1114 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLX+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 2 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1115 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 3 0.8 20 0.8\n")
        response.writelines("LOAD COMB 1116 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLZ+0.8CRL4\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 4 0.8 20 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1117 1.0DL+1.0CL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 8 1.0 9 1.0\n")
        response.writelines("LOAD COMB 1118 1.0DL+1.0CL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0 10 1.0\n")
        response.writelines("LOAD COMB 1119 1.0DL+1.0CL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 8 1.0 11 1.0\n")
        response.writelines("LOAD COMB 1120 1.0DL+1.0CL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 8 1.0 12 1.0\n")
        response.writelines("LOAD COMB 1121 1.0DL+1.0CL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 8 1.0 13 1.0\n")
        response.writelines("LOAD COMB 1122 1.0DL+1.0CL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 8 1.0 14 1.0\n")
        response.writelines("LOAD COMB 1123 1.0DL+1.0CL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 8 1.0 15 1.0\n")
        response.writelines("LOAD COMB 1124 1.0DL+1.0CL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 8 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 1125 1.0DL+1.0CL+1.0+SLX\n")
        response.writelines("5 1.0 8 1.0 1 1.0\n")
        response.writelines("LOAD COMB 1126 1.0DL+1.0CL+1.0-SLX\n")
        response.writelines("5 1.0 8 1.0 2 1.0\n")
        response.writelines("LOAD COMB 1127 1.0DL+1.0CL+1.0+SLZ\n")
        response.writelines("5 1.0 8 1.0 3 1.0\n")
        response.writelines("LOAD COMB 1128 1.0DL+1.0CL+1.0-SLZ\n")
        response.writelines("5 1.0 8 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 771\n")


    if LOADS_REQUIRED == 'EL-DL-RLL-WL-TL':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 TL1\n")
        response.writelines("MEMBER LOAD\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 TL2\n")
        response.writelines("MEMBER LOAD\n")

        response.writelines("********************************************************************\n")
        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05TL1\n")
        response.writelines("5 1.5 6 1.5 15 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 101 1.5DL+1.5RLL+1.05TL2\n")
        response.writelines("5 1.5 6 1.5 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 102 1.5DL+1.05RLL+1.5TL1\n")
        response.writelines("5 1.5 6 1.05 15 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 103 1.5DL+1.05RLL+1.5TL2\n")
        response.writelines("5 1.5 6 1.05 16 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 104 1.2DL+1.2RLL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.6 15 1.05\n")
        response.writelines("LOAD COMB 105 1.2DL+1.2RLL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 8 0.6 15 1.05\n")
        response.writelines("LOAD COMB 106 1.2DL+1.2RLL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 9 0.6 15 1.05\n")
        response.writelines("LOAD COMB 107 1.2DL+1.2RLL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 10 0.6 15 1.05\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 11 0.6 15 1.05\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 12 0.6 15 1.05\n")
        response.writelines("LOAD COMB 110 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 13 0.6 15 1.05\n")
        response.writelines("LOAD COMB 111 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 14 0.6 15 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 112 1.2DL+1.2RLL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.6 16 1.05\n")
        response.writelines("LOAD COMB 113 1.2DL+1.2RLL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 114 1.2DL+1.2RLL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 115 1.2DL+1.2RLL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 116 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 117 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 14 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 120 1.2DL+1.05RLL+0.6WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 0.6 15 1.2\n")
        response.writelines("LOAD COMB 121 1.2DL+1.05RLL+0.6WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 8 0.6 15 1.2\n")
        response.writelines("LOAD COMB 122 1.2DL+1.05RLL+0.6WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 9 0.6 15 1.2\n")
        response.writelines("LOAD COMB 123 1.2DL+1.05RLL+0.6WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 10 0.6 15 1.2\n")
        response.writelines("LOAD COMB 124 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 11 0.6 15 1.2\n")
        response.writelines("LOAD COMB 125 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 12 0.6 15 1.2\n")
        response.writelines("LOAD COMB 126 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 13 0.6 15 1.2\n")
        response.writelines("LOAD COMB 127 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 14 0.6 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 128 1.2DL+1.05RLL+0.6WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 0.6 16 1.2\n")
        response.writelines("LOAD COMB 129 1.2DL+1.05RLL+0.6WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 8 0.6 16 1.2\n")
        response.writelines("LOAD COMB 130 1.2DL+1.05RLL+0.6WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 9 0.6 16 1.2\n")
        response.writelines("LOAD COMB 131 1.2DL+1.05RLL+0.6WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 10 0.6 16 1.2\n")
        response.writelines("LOAD COMB 132 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 11 0.6 16 1.2\n")
        response.writelines("LOAD COMB 133 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 12 0.6 16 1.2\n")
        response.writelines("LOAD COMB 134 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 13 0.6 16 1.2\n")
        response.writelines("LOAD COMB 135 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 14 0.6 16 1.2\n")

        response.writelines("LOAD COMB 136 1.2DL+1.2RLL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 1 0.6 15 1.05\n")
        response.writelines("LOAD COMB 137 1.2DL+1.2RLL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 2 0.6 15 1.05\n")
        response.writelines("LOAD COMB 138 1.2DL+1.2RLL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 3 0.6 15 1.05\n")
        response.writelines("LOAD COMB 139 1.2DL+1.2RLL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 4 0.6 15 1.05\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 140 1.2DL+1.2RLL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 141 1.2DL+1.2RLL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 142 1.2DL+1.2RLL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 143 1.2DL+1.2RLL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 4 0.6 16 1.05\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 144 1.2DL+1.05RLL+0.6+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 1 0.6 15 1.2\n")
        response.writelines("LOAD COMB 145 1.2DL+1.05RLL+0.6-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 2 0.6 15 1.2\n")
        response.writelines("LOAD COMB 146 1.2DL+1.05RLL+0.6+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 3 0.6 15 1.2\n")
        response.writelines("LOAD COMB 147 1.2DL+1.05RLL+0.6-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 4 0.6 15 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 148 1.2DL+1.05RLL+0.6+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 1 0.6 16 1.2\n")
        response.writelines("LOAD COMB 149 1.2DL+1.05RLL+0.6-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 2 0.6 16 1.2\n")
        response.writelines("LOAD COMB 150 1.2DL+1.05RLL+0.6+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 3 0.6 16 1.2\n")
        response.writelines("LOAD COMB 151 1.2DL+1.05RLL+0.6-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 4 0.6 16 1.2\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 152 1.2DL+1.2RLL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.53\n")
        response.writelines("LOAD COMB 153 1.2DL+1.2RLL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 8 1.2 15 0.53\n")
        response.writelines("LOAD COMB 154 1.2DL+1.2RLL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 9 1.2 15 0.53\n")
        response.writelines("LOAD COMB 155 1.2DL+1.2RLL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 10 1.2 15 0.53\n")
        response.writelines("LOAD COMB 156 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 11 1.2 15 0.53\n")
        response.writelines("LOAD COMB 157 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 12 1.2 15 0.53\n")
        response.writelines("LOAD COMB 158 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 13 1.2 15 0.53\n")
        response.writelines("LOAD COMB 159 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 14 1.2 15 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 160 1.2DL+1.2RLL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 16 0.53\n")
        response.writelines("LOAD COMB 161 1.2DL+1.2RLL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 162 1.2DL+1.2RLL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 163 1.2DL+1.2RLL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 164 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 165 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 166 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 167 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 14 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 168 1.2DL+0.53RLL+1.2WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2\n")
        response.writelines("LOAD COMB 169 1.2DL+0.53RLL+1.2WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 8 1.2 15 1.2\n")
        response.writelines("LOAD COMB 170 1.2DL+0.53RLL+1.2WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 9 1.2 15 1.2\n")
        response.writelines("LOAD COMB 171 1.2DL+0.53RLL+1.2WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 10 1.2 15 1.2\n")
        response.writelines("LOAD COMB 172 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 11 1.2 15 1.2\n")
        response.writelines("LOAD COMB 173 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 12 1.2 15 1.2\n")
        response.writelines("LOAD COMB 174 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 13 1.2 15 1.2\n")
        response.writelines("LOAD COMB 175 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 14 1.2 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 176 1.2DL+0.53RLL+1.2WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2\n")
        response.writelines("LOAD COMB 177 1.2DL+0.53RLL+1.2WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 8 1.2 16 1.2\n")
        response.writelines("LOAD COMB 178 1.2DL+0.53RLL+1.2WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 9 1.2 16 1.2\n")
        response.writelines("LOAD COMB 179 1.2DL+0.53RLL+1.2WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 10 1.2 16 1.2\n")
        response.writelines("LOAD COMB 180 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 11 1.2 16 1.2\n")
        response.writelines("LOAD COMB 181 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 12 1.2 16 1.2\n")
        response.writelines("LOAD COMB 182 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 13 1.2 16 1.2\n")
        response.writelines("LOAD COMB 183 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 14 1.2 16 1.2\n")

        response.writelines("LOAD COMB 184 1.2DL+1.2RLL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 1 1.2 15 0.53\n")
        response.writelines("LOAD COMB 185 1.2DL+1.2RLL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 2 1.2 15 0.53\n")
        response.writelines("LOAD COMB 186 1.2DL+1.2RLL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 3 1.2 15 0.53\n")
        response.writelines("LOAD COMB 187 1.2DL+1.2RLL+1.2-SLZ+0.53TL1 \n")
        response.writelines("5 1.2 6 1.2 4 1.2 15 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 188 1.2DL+1.2RLL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 189 1.2DL+1.2RLL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 190 1.2DL+1.2RLL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 191 1.2DL+1.2RLL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 4 1.2 16 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 192 1.2DL+0.53RLL+1.2+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 1 1.2 15 1.2\n")
        response.writelines("LOAD COMB 193 1.2DL+0.53RLL+1.2-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 2 1.2 15 1.2\n")
        response.writelines("LOAD COMB 194 1.2DL+0.53RLL+1.2+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 3 1.2 15 1.2\n")
        response.writelines("LOAD COMB 195 1.2DL+0.53RLL+1.2-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 4 1.2 15 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 196 1.2DL+0.53RLL+1.2+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 1 1.2 16 1.2\n")
        response.writelines("LOAD COMB 197 1.2DL+0.53RLL+1.2-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 2 1.2 16 1.2\n")
        response.writelines("LOAD COMB 198 1.2DL+0.53RLL+1.2+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 3 1.2 16 1.2\n")
        response.writelines("LOAD COMB 199 1.2DL+0.53RLL+1.2-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 4 1.2 16 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 200 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 7 1.5\n")
        response.writelines("LOAD COMB 201 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 202 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 203 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 204 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 205 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 206 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 207 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 208 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 209 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 210 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 211 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 212 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 7 1.5\n")
        response.writelines("LOAD COMB 213 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 214 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 215 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 216 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 217 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 218 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 219 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 220 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 221 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 222 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 223 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 224 1.2DL+1.2RLL\n")
        response.writelines("5 1.2 6 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 225 1.2DL+1.2TL1\n")
        response.writelines("5 1.2 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 226 1.2DL+1.2TL2\n")
        response.writelines("5 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 227 0.9DL+1.2RLL\n")
        response.writelines("5 0.9 6 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 228 0.9DL+1.2TL1\n")
        response.writelines("5 0.9 15 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 229 0.9DL+1.2TL2\n")
        response.writelines("5 0.9 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 230 1.0DL+0.35RLL\n")
        response.writelines("5 1.0 6 0.35\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 231 1.0DL+0.35TL1\n")
        response.writelines("5 1.0 15 0.35\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 232 1.0DL+0.35TL2\n")
        response.writelines("5 1.0 16 0.35\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 501 1.0DL+1.0RLL+1.0TL1 \n")
        response.writelines("5 1.0 6 1.0 15 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 502 1.0DL+1.0RLL+1.0TL2 \n")
        response.writelines("5 1.0 6 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 503 1.0DL+0.8RLL+0.8WL+X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8\n")
        response.writelines("LOAD COMB 504 1.0DL+0.8RLL+0.8WL+X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 8 0.8 15 0.8\n")
        response.writelines("LOAD COMB 505 1.0DL+0.8RLL+0.8WL-X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 9 0.8 15 0.8\n")
        response.writelines("LOAD COMB 506 1.0DL+0.8RLL+0.8WL-X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 10 0.8 15 0.8\n")
        response.writelines("LOAD COMB 507 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 11 0.8 15 0.8\n")
        response.writelines("LOAD COMB 508 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 12 0.8 15 0.8 \n")
        response.writelines("LOAD COMB 509 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 13 0.8 15 0.8\n")
        response.writelines("LOAD COMB 510 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 14 0.8 15 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 511 1.0DL+0.8RLL+0.8WL+X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8\n")
        response.writelines("LOAD COMB 512 1.0DL+0.8RLL+0.8WL+X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 8 0.8 16 0.8\n")
        response.writelines("LOAD COMB 513 1.0DL+0.8RLL+0.8WL-X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 9 0.8 16 0.8\n")
        response.writelines("LOAD COMB 514 1.0DL+0.8RLL+0.8WL-X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 10 0.8 16 0.8\n")
        response.writelines("LOAD COMB 515 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 11 0.8 16 0.8\n")
        response.writelines("LOAD COMB 516 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 12 0.8 16 0.8 \n")
        response.writelines("LOAD COMB 517 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 13 0.8 16 0.8\n")
        response.writelines("LOAD COMB 518 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 14 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 519 1.0DL+0.8RLL+0.8+SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 1 0.8 15 0.8\n")
        response.writelines("LOAD COMB 520 1.0DL+0.8RLL+0.8-SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 2 0.8 15 0.8\n")
        response.writelines("LOAD COMB 521 1.0DL+0.8RLL+0.8+SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 3 0.8 15 0.8\n")
        response.writelines("LOAD COMB 522 1.0DL+0.8RLL+0.8-SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 4 0.8 15 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 523 1.0DL+0.8RLL+0.8+SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 1 0.8 16 0.8\n")
        response.writelines("LOAD COMB 524 1.0DL+0.8RLL+0.8-SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 2 0.8 16 0.8\n")
        response.writelines("LOAD COMB 525 1.0DL+0.8RLL+0.8+SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 3 0.8 16 0.8\n")
        response.writelines("LOAD COMB 526 1.0DL+0.8RLL+0.8-SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 4 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 527 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0\n")
        response.writelines("LOAD COMB 528 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 529 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 530 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 531 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 532 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 533 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 534 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 535 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 536 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 537 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 538 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 232\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-MLL-WL-TL':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 MLL\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 TL1\n")
        response.writelines("MEMBER LOAD\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 17 TL2\n")
        response.writelines("MEMBER LOAD\n")

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05MLL+1.05TL1\n")
        response.writelines("5 1.5 6 1.5 7 1.05 16 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.05RLL+1.5MLL+1.05TL1\n")
        response.writelines("5 1.5 6 1.05 7 1.5 16 1.05\n")
        response.writelines("LOAD COMB 102 1.5DL+1.05RLL+1.05MLL+1.5TL1\n")
        response.writelines("5 1.5 6 1.05 7 1.05 16 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 103 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 104 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 105 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 106 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 107 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 16 1.05\n")
        response.writelines("LOAD COMB 110 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 111 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 112 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 113 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 114 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 115 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 116 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 117 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 16 1.05\n")
        response.writelines("LOAD COMB 118 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 119 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 0.6 16 1.2\n")
        response.writelines("LOAD COMB 120 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 16 1.2\n")
        response.writelines("LOAD COMB 121 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 16 1.2\n")
        response.writelines("LOAD COMB 122 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 16 1.2\n")
        response.writelines("LOAD COMB 123 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 16 1.2\n")
        response.writelines("LOAD COMB 124 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 16 1.2\n")
        response.writelines("LOAD COMB 125 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 16 1.2\n")
        response.writelines("LOAD COMB 126 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 131 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 132 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 133 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 134 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 135 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 16 1.2\n")
        response.writelines("LOAD COMB 136 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 16 1.2\n")
        response.writelines("LOAD COMB 137 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 16 1.2\n")
        response.writelines("LOAD COMB 138 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 16 1.2\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 139 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 140 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 141 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 142 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 143 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 144 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 145 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 16 0.53\n")
        response.writelines("LOAD COMB 146 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 147 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 148 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 149 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 150 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 151 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 152 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 153 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 16 0.53\n")
        response.writelines("LOAD COMB 154 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 155 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 16 1.2\n")
        response.writelines("LOAD COMB 156 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 16 1.2\n")
        response.writelines("LOAD COMB 157 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 16 1.2\n")
        response.writelines("LOAD COMB 158 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 16 1.2\n")
        response.writelines("LOAD COMB 159 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 16 1.2\n")
        response.writelines("LOAD COMB 160 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 16 1.2\n")
        response.writelines("LOAD COMB 161 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 16 1.2\n")
        response.writelines("LOAD COMB 162 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 16 1.2\n")

        response.writelines("LOAD COMB 163 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 164 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 165 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 166 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 16 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 167 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 168 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 169 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 170 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 16 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 171 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 16 1.2\n")
        response.writelines("LOAD COMB 172 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 16 1.2\n")
        response.writelines("LOAD COMB 173 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 16 1.2\n")
        response.writelines("LOAD COMB 174 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 16 1.2\n")
        response.writelines("****\n")




        response.writelines("LOAD COMB 175 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 176 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 177 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 178 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 179 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 180 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 181 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 182 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 183 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 184 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 185 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 186 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 187 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 188 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 189 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 190 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 191 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 192 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 193 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 194 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 195 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 196 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 197 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 198 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 199 1.2DL+1.2RLL+1.2TL1\n")
        response.writelines("5 1.2 6 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 200 0.9DL+1.2RLL+1.2TL1\n")
        response.writelines("5 0.9 6 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 201 1.0DL+0.35RLL+0.35MLL+0.35TL1\n")
        response.writelines("5 1.0 6 0.35 7 0.35 16 0.35\n")

        response.writelines("LOAD COMB 202 1.5DL+1.5RLL+1.05MLL+1.05TL2\n")
        response.writelines("5 1.5 6 1.5 7 1.05 17 1.05\n")
        response.writelines("LOAD COMB 203 1.5DL+1.05RLL+1.5MLL+1.05TL2\n")
        response.writelines("5 1.5 6 1.05 7 1.5 17 1.05\n")
        response.writelines("LOAD COMB 204 1.5DL+1.05RLL+1.05MLL+1.5TL2\n")
        response.writelines("5 1.5 6 1.05 7 1.05 17 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 205 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 206 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 207 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 208 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 209 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 210 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 211 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 212 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 213 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 214 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 215 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 216 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 217 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 218 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 219 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 220 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 221 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 0.6 17 1.2\n")
        response.writelines("LOAD COMB 222 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 223 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 224 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 225 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 226 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 227 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 228 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 229 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 230 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 231 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 232 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 233 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 234 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 235 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 236 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 237 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 238 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 239 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 240 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 17 1.2\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 241 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 242 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 243 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 244 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 245 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 246 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 247 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 248 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 249 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 250 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 251 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 252 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 253 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 254 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 255 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 256 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 257 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 17 1.2\n")
        response.writelines("LOAD COMB 258 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 259 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 260 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 261 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 262 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 263 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 264 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 17 1.2\n")

        response.writelines("LOAD COMB 265 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 266 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 267 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 268 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 269 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 270 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 271 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 272 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 273 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 274 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 275 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 276 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 277 1.2DL+1.2RLL+1.2TL2\n")
        response.writelines("5 1.2 6 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 278 0.9DL+1.2RLL+1.2TL2\n")
        response.writelines("5 0.9 6 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 279 1.0DL+0.35RLL+0.35MLL+0.35TL2\n")
        response.writelines("5 1.0 6 0.35 7 0.35 17 0.35\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 501 1.0DL+1.0RLL+1.0MLL+1.0TL1 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 502 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 0.8 16 0.8\n")
        response.writelines("LOAD COMB 503 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 16 0.8\n")
        response.writelines("LOAD COMB 504 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 16 0.8\n")
        response.writelines("LOAD COMB 505 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 16 0.8\n")
        response.writelines("LOAD COMB 506 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 16 0.8\n")
        response.writelines("LOAD COMB 507 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 16 0.8 \n")
        response.writelines("LOAD COMB 508 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 16 0.8\n")
        response.writelines("LOAD COMB 509 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 510 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 16 0.8\n")
        response.writelines("LOAD COMB 511 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 16 0.8\n")
        response.writelines("LOAD COMB 512 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 16 0.8\n")
        response.writelines("LOAD COMB 513 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 514 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0\n")
        response.writelines("LOAD COMB 515 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 516 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 517 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 518 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 519 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 520 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 521 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 522 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 523 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 524 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 525 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("LOAD COMB 526 1.0DL+1.0RLL+1.0MLL+1.0TL2 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 17 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 527 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 0.8 17 0.8\n")
        response.writelines("LOAD COMB 528 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 529 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 530 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 531 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 532 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 533 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 17 0.8\n")
        response.writelines("LOAD COMB 534 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 535 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 536 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 537 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 538 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 17 0.8\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 279\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-CL-WL-TL':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("**COLLATERAL LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 CL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 TL1\n")
        response.writelines("MEMBER LOAD\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 17 TL2\n")
        response.writelines("MEMBER LOAD\n")

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05TL1\n")
        response.writelines("5 1.5 6 1.5 16 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.05RLL+1.5TL1\n")
        response.writelines("5 1.5 6 1.05 16 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 102 1.2DL+1.2RLL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 103 1.2DL+1.2RLL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 104 1.2DL+1.2RLL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 105 1.2DL+1.2RLL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 106 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 107 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 14 0.6 16 1.05\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 15 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 110 1.2DL+1.05RLL+0.6WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 8 0.6 16 1.2\n")
        response.writelines("LOAD COMB 111 1.2DL+1.05RLL+0.6WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 9 0.6 16 1.2\n")
        response.writelines("LOAD COMB 112 1.2DL+1.05RLL+0.6WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 10 0.6 16 1.2\n")
        response.writelines("LOAD COMB 113 1.2DL+1.05RLL+0.6WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 11 0.6 16 1.2\n")
        response.writelines("LOAD COMB 114 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 12 0.6 16 1.2\n")
        response.writelines("LOAD COMB 115 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 13 0.6 16 1.2\n")
        response.writelines("LOAD COMB 116 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 14 0.6 16 1.2\n")
        response.writelines("LOAD COMB 117 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 15 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 118 1.2DL+1.2RLL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 119 1.2DL+1.2RLL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 120 1.2DL+1.2RLL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 121 1.2DL+1.2RLL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 4 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 122 1.2DL+1.05RLL+0.6+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 1 0.6 16 1.2\n")
        response.writelines("LOAD COMB 123 1.2DL+1.05RLL+0.6-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 2 0.6 16 1.2\n")
        response.writelines("LOAD COMB 124 1.2DL+1.05RLL+0.6+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 3 0.6 16 1.2\n")
        response.writelines("LOAD COMB 125 1.2DL+1.05RLL+0.6-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 4 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 126 1.2DL+1.2RLL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 131 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 132 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 14 1.2 16 0.53\n")
        response.writelines("LOAD COMB 133 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 15 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 134 1.2DL+0.53RLL+1.2WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 8 1.2 16 1.2\n")
        response.writelines("LOAD COMB 135 1.2DL+0.53RLL+1.2WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 9 1.2 16 1.2\n")
        response.writelines("LOAD COMB 136 1.2DL+0.53RLL+1.2WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 10 1.2 16 1.2\n")
        response.writelines("LOAD COMB 137 1.2DL+0.53RLL+1.2WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 11 1.2 16 1.2\n")
        response.writelines("LOAD COMB 138 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 12 1.2 16 1.2\n")
        response.writelines("LOAD COMB 139 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 13 1.2 16 1.2\n")
        response.writelines("LOAD COMB 140 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 14 1.2 16 1.2\n")
        response.writelines("LOAD COMB 141 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 15 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 142 1.2DL+1.2RLL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 143 1.2DL+1.2RLL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 144 1.2DL+1.2RLL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 145 1.2DL+1.2RLL+1.2-SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 4 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 146 1.2DL+0.53RLL+1.2+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 1 1.2 16 1.2\n")
        response.writelines("LOAD COMB 147 1.2DL+0.53RLL+1.2-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 2 1.2 16 1.2\n")
        response.writelines("LOAD COMB 148 1.2DL+0.53RLL+1.2+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 3 1.2 16 1.2\n")
        response.writelines("LOAD COMB 149 1.2DL+0.53RLL+1.2-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 4 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 150 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5\n")
        response.writelines("LOAD COMB 151 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 152 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 153 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 154 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 155 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 156 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 157 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 158 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 159 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 160 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 161 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 162 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 1.5\n")
        response.writelines("LOAD COMB 163 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 164 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 165 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 166 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 167 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 168 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 169 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 170 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 171 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 172 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 173 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 174 1.2DL+1.2RLL+1.2TL1\n")
        response.writelines("5 1.2 6 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 175 0.9DL+1.2RLL+1.2TL1\n")
        response.writelines("5 0.9 6 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 176 1.0DL+0.35RLL+0.35TL1\n")
        response.writelines("5 1.0 6 0.35 16 0.35\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 177 1.5DL+1.5RLL+1.5CL+1.05TL1\n")
        response.writelines("5 1.5 6 1.5 7 1.5 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 178 1.2DL+1.2RLL+1.2CL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 0.6 16 1.05\n")
        response.writelines("LOAD COMB 179 1.2DL+1.2RLL+1.2CL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 0.6 16 1.05\n")
        response.writelines("LOAD COMB 180 1.2DL+1.2RLL+1.2CL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 0.6 16 1.05\n")
        response.writelines("LOAD COMB 181 1.2DL+1.2RLL+1.2CL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 0.6 16 1.05\n")
        response.writelines("LOAD COMB 182 1.2DL+1.2RLL+1.2CL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 0.6 16 1.05\n")
        response.writelines("LOAD COMB 183 1.2DL+1.2RLL+1.2CL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 0.6 16 1.05\n")
        response.writelines("LOAD COMB 184 1.2DL+1.2RLL+1.2CL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 0.6 16 1.05\n")
        response.writelines("LOAD COMB 185 1.2DL+1.2RLL+1.2CL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 186 1.2DL+1.05RLL+1.2CL+0.6WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 16 1.2\n")
        response.writelines("LOAD COMB 187 1.2DL+1.05RLL+1.2CL+0.6WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 16 1.2\n")
        response.writelines("LOAD COMB 188 1.2DL+1.05RLL+1.2CL+0.6WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 16 1.2\n")
        response.writelines("LOAD COMB 189 1.2DL+1.05RLL+1.2CL+0.6WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 16 1.2\n")
        response.writelines("LOAD COMB 190 1.2DL+1.05RLL+1.2CL+0.6WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 16 1.2\n")
        response.writelines("LOAD COMB 191 1.2DL+1.05RLL+1.2CL+0.6WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 16 1.2\n")
        response.writelines("LOAD COMB 192 1.2DL+1.05RLL+1.2CL+0.6WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 16 1.2\n")
        response.writelines("LOAD COMB 193 1.2DL+1.05RLL+1.2CL+0.6WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 194 1.2DL+1.2RLL+1.2CL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 0.6 16 1.05\n")
        response.writelines("LOAD COMB 195 1.2DL+1.2RLL+1.2CL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 0.6 16 1.05\n")
        response.writelines("LOAD COMB 196 1.2DL+1.2RLL+1.2CL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 0.6 16 1.05\n")
        response.writelines("LOAD COMB 197 1.2DL+1.2RLL+1.2CL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 0.6 16 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 198 1.2DL+1.05RLL+1.2CL+0.6+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 16 1.2\n")
        response.writelines("LOAD COMB 199 1.2DL+1.05RLL+1.2CL+0.6-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 16 1.2\n")
        response.writelines("LOAD COMB 200 1.2DL+1.05RLL+1.2CL+0.6+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 16 1.2\n")
        response.writelines("LOAD COMB 201 1.2DL+1.05RLL+1.2CL+0.6-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 202 1.2DL+1.2RLL+1.2CL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 16 0.53\n")
        response.writelines("LOAD COMB 203 1.2DL+1.2RLL+1.2CL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 1.2 16 0.53\n")
        response.writelines("LOAD COMB 204 1.2DL+1.2RLL+1.2CL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 1.2 16 0.53\n")
        response.writelines("LOAD COMB 205 1.2DL+1.2RLL+1.2CL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 1.2 16 0.53\n")
        response.writelines("LOAD COMB 206 1.2DL+1.2RLL+1.2CL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 1.2 16 0.53\n")
        response.writelines("LOAD COMB 207 1.2DL+1.2RLL+1.2CL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 1.2 16 0.53\n")
        response.writelines("LOAD COMB 208 1.2DL+1.2RLL+1.2CL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 1.2 16 0.53\n")
        response.writelines("LOAD COMB 209 1.2DL+1.2RLL+1.2CL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 1.2 16 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 210 1.2DL+0.53RLL+1.2CL+1.2WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2\n")
        response.writelines("LOAD COMB 211 1.2DL+0.53RLL+1.2CL+1.2WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 16 1.2\n")
        response.writelines("LOAD COMB 212 1.2DL+0.53RLL+1.2CL+1.2WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 16 1.2\n")
        response.writelines("LOAD COMB 213 1.2DL+0.53RLL+1.2CL+1.2WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 16 1.2\n")
        response.writelines("LOAD COMB 214 1.2DL+0.53RLL+1.2CL+1.2WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 16 1.2\n")
        response.writelines("LOAD COMB 215 1.2DL+0.53RLL+1.2CL+1.2WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 16 1.2\n")
        response.writelines("LOAD COMB 216 1.2DL+0.53RLL+1.2CL+1.2WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 16 1.2\n")
        response.writelines("LOAD COMB 217 1.2DL+0.53RLL+1.2CL+1.2WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 218 1.2DL+1.2RLL+1.2CL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 1.2 16 0.53\n")
        response.writelines("LOAD COMB 219 1.2DL+1.2RLL+1.2CL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 1.2 16 0.53\n")
        response.writelines("LOAD COMB 220 1.2DL+1.2RLL+1.2CL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 1.2 16 0.53\n")
        response.writelines("LOAD COMB 221 1.2DL+1.2RLL+1.2CL+1.2-SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 1.2 16 0.53\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 222 1.2DL+0.53RLL+1.2CL+1.2+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 16 1.2\n")
        response.writelines("LOAD COMB 223 1.2DL+0.53RLL+1.2CL+1.2-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 16 1.2\n")
        response.writelines("LOAD COMB 224 1.2DL+0.53RLL+1.2CL+1.2+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 16 1.2\n")
        response.writelines("LOAD COMB 225 1.2DL+0.53RLL+1.2CL+1.2-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 16 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 226 1.5DL+1.5CL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 7 1.5 8 1.5\n")
        response.writelines("LOAD COMB 227 1.5DL+1.5CL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 7 1.5 9 1.5\n")
        response.writelines("LOAD COMB 228 1.5DL+1.5CL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 7 1.5 10 1.5\n")
        response.writelines("LOAD COMB 229 1.5DL+1.5CL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 7 1.5 11 1.5\n")
        response.writelines("LOAD COMB 230 1.5DL+1.5CL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 7 1.5 12 1.5\n")
        response.writelines("LOAD COMB 231 1.5DL+1.5CL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 7 1.5 13 1.5\n")
        response.writelines("LOAD COMB 232 1.5DL+1.5CL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 7 1.5 14 1.5\n")
        response.writelines("LOAD COMB 233 1.5DL+1.5CL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 7 1.5 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 234 1.5DL+1.5CL+1.5+SLX\n")
        response.writelines("5 1.5 7 1.5 1 1.5\n")
        response.writelines("LOAD COMB 235 1.5DL+1.5CL+1.5-SLX\n")
        response.writelines("5 1.5 7 1.5 2 1.5\n")
        response.writelines("LOAD COMB 236 1.5DL+1.5CL+1.5+SLZ\n")
        response.writelines("5 1.5 7 1.5 3 1.5\n")
        response.writelines("LOAD COMB 237 1.5DL+1.5CL+1.5-SLZ\n")
        response.writelines("5 1.5 7 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 238 0.9DL+0.9CL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 7 0.9 8 1.5\n")
        response.writelines("LOAD COMB 239 0.9DL+0.9CL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 7 0.9 9 1.5\n")
        response.writelines("LOAD COMB 240 0.9DL+0.9CL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 7 0.9 10 1.5\n")
        response.writelines("LOAD COMB 241 0.9DL+0.9CL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 7 0.9 11 1.5\n")
        response.writelines("LOAD COMB 242 0.9DL+0.9CL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 7 0.9 12 1.5\n")
        response.writelines("LOAD COMB 243 0.9DL+0.9CL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 7 0.9 13 1.5\n")
        response.writelines("LOAD COMB 244 0.9DL+0.9CL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 7 0.9 14 1.5\n")
        response.writelines("LOAD COMB 245 0.9DL+0.9CL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 7 0.9 15 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 246 0.9DL+0.9CL+1.5+SLX\n")
        response.writelines("5 0.9 7 0.9 1 1.5\n")
        response.writelines("LOAD COMB 247 0.9DL+0.9CL+1.5-SLX\n")
        response.writelines("5 0.9 7 0.9 2 1.5\n")
        response.writelines("LOAD COMB 248 0.9DL+0.9CL+1.5+SLZ\n")
        response.writelines("5 0.9 7 0.9 3 1.5\n")
        response.writelines("LOAD COMB 249 0.9DL+0.9CL+1.5-SLZ\n")
        response.writelines("5 0.9 7 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 250 1.2DL+1.2RLL+1.2CL+1.2TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.2 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 251 0.9DL+1.2RLL+0.9CL+1.2TL1\n")
        response.writelines("5 0.9 6 1.2 7 0.9 16 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 252 1.0DL+0.35RLL+1.0CL+0.35TL1\n")
        response.writelines("5 1.0 6 0.35 7 1.0 16 0.35\n")

        response.writelines("LOAD COMB 253 1.5DL+1.5RLL+1.05TL2\n")
        response.writelines("5 1.5 6 1.5 17 1.05\n")
        response.writelines("LOAD COMB 254 1.5DL+1.05RLL+1.5TL2\n")
        response.writelines("5 1.5 6 1.05 17 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 255 1.2DL+1.2RLL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 256 1.2DL+1.2RLL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 257 1.2DL+1.2RLL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 258 1.2DL+1.2RLL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 259 1.2DL+1.2RLL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 260 1.2DL+1.2RLL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 261 1.2DL+1.2RLL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 262 1.2DL+1.2RLL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 15 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 263 1.2DL+1.05RLL+0.6WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 8 0.6 17 1.2\n")
        response.writelines("LOAD COMB 264 1.2DL+1.05RLL+0.6WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 265 1.2DL+1.05RLL+0.6WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 266 1.2DL+1.05RLL+0.6WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 267 1.2DL+1.05RLL+0.6WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 268 1.2DL+1.05RLL+0.6WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 269 1.2DL+1.05RLL+0.6WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 270 1.2DL+1.05RLL+0.6WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 15 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 271 1.2DL+1.2RLL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 272 1.2DL+1.2RLL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 273 1.2DL+1.2RLL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 274 1.2DL+1.2RLL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 275 1.2DL+1.05RLL+0.6+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 276 1.2DL+1.05RLL+0.6-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 277 1.2DL+1.05RLL+0.6+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 278 1.2DL+1.05RLL+0.6-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 4 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 279 1.2DL+1.2RLL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 280 1.2DL+1.2RLL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 281 1.2DL+1.2RLL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 282 1.2DL+1.2RLL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 283 1.2DL+1.2RLL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 284 1.2DL+1.2RLL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 285 1.2DL+1.2RLL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 286 1.2DL+1.2RLL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 15 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 287 1.2DL+0.53RLL+1.2WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 8 1.2 17 1.2\n")
        response.writelines("LOAD COMB 288 1.2DL+0.53RLL+1.2WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 289 1.2DL+0.53RLL+1.2WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 290 1.2DL+0.53RLL+1.2WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 291 1.2DL+0.53RLL+1.2WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 292 1.2DL+0.53RLL+1.2WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 293 1.2DL+0.53RLL+1.2WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 294 1.2DL+0.53RLL+1.2WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 15 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 295 1.2DL+1.2RLL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 296 1.2DL+1.2RLL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 297 1.2DL+1.2RLL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 298 1.2DL+1.2RLL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 4 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 299 1.2DL+0.53RLL+1.2+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 300 1.2DL+0.53RLL+1.2-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 301 1.2DL+0.53RLL+1.2+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 302 1.2DL+0.53RLL+1.2-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 4 1.2 17 1.2\n")

        response.writelines("LOAD COMB 303 1.2DL+1.2RLL+1.2TL2\n")
        response.writelines("5 1.2 6 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 304 0.9DL+1.2RLL+1.2TL2\n")
        response.writelines("5 0.9 6 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 305 1.0DL+0.35RLL+0.35TL2\n")
        response.writelines("5 1.0 6 0.35 17 0.35\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 306 1.5DL+1.5RLL+1.5CL+1.05TL2\n")
        response.writelines("5 1.5 6 1.5 7 1.5 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 307 1.2DL+1.2RLL+1.2CL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 0.6 17 1.05\n")
        response.writelines("LOAD COMB 308 1.2DL+1.2RLL+1.2CL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 309 1.2DL+1.2RLL+1.2CL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 310 1.2DL+1.2RLL+1.2CL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 311 1.2DL+1.2RLL+1.2CL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 312 1.2DL+1.2RLL+1.2CL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 313 1.2DL+1.2RLL+1.2CL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 314 1.2DL+1.2RLL+1.2CL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 315 1.2DL+1.05RLL+1.2CL+0.6WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 0.6 17 1.2\n")
        response.writelines("LOAD COMB 316 1.2DL+1.05RLL+1.2CL+0.6WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 317 1.2DL+1.05RLL+1.2CL+0.6WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 318 1.2DL+1.05RLL+1.2CL+0.6WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 319 1.2DL+1.05RLL+1.2CL+0.6WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 320 1.2DL+1.05RLL+1.2CL+0.6WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 321 1.2DL+1.05RLL+1.2CL+0.6WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 322 1.2DL+1.05RLL+1.2CL+0.6WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 323 1.2DL+1.2RLL+1.2CL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 324 1.2DL+1.2RLL+1.2CL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 325 1.2DL+1.2RLL+1.2CL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 326 1.2DL+1.2RLL+1.2CL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 327 1.2DL+1.05RLL+1.2CL+0.6+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 328 1.2DL+1.05RLL+1.2CL+0.6-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 329 1.2DL+1.05RLL+1.2CL+0.6+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 330 1.2DL+1.05RLL+1.2CL+0.6-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 331 1.2DL+1.2RLL+1.2CL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 8 1.2 17 0.53\n")
        response.writelines("LOAD COMB 332 1.2DL+1.2RLL+1.2CL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 333 1.2DL+1.2RLL+1.2CL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 334 1.2DL+1.2RLL+1.2CL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 335 1.2DL+1.2RLL+1.2CL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 336 1.2DL+1.2RLL+1.2CL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 337 1.2DL+1.2RLL+1.2CL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 338 1.2DL+1.2RLL+1.2CL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 15 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 339 1.2DL+0.53RLL+1.2CL+1.2WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 17 1.2\n")
        response.writelines("LOAD COMB 340 1.2DL+0.53RLL+1.2CL+1.2WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 341 1.2DL+0.53RLL+1.2CL+1.2WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 342 1.2DL+0.53RLL+1.2CL+1.2WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 343 1.2DL+0.53RLL+1.2CL+1.2WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 344 1.2DL+0.53RLL+1.2CL+1.2WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 345 1.2DL+0.53RLL+1.2CL+1.2WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 346 1.2DL+0.53RLL+1.2CL+1.2WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 347 1.2DL+1.2RLL+1.2CL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 348 1.2DL+1.2RLL+1.2CL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 349 1.2DL+1.2RLL+1.2CL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 350 1.2DL+1.2RLL+1.2CL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 351 1.2DL+0.53RLL+1.2CL+1.2+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 352 1.2DL+0.53RLL+1.2CL+1.2-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 353 1.2DL+0.53RLL+1.2CL+1.2+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 354 1.2DL+0.53RLL+1.2CL+1.2-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 355 1.2DL+1.2RLL+1.2CL+1.2TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 356 0.9DL+1.2RLL+0.9CL+1.2TL2\n")
        response.writelines("5 0.9 6 1.2 7 0.9 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 357 1.0DL+0.35RLL+1.0CL+0.35TL2\n")
        response.writelines("5 1.0 6 0.35 7 1.0 17 0.35\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 501 1.0DL+1.0RLL+1.0TL1 \n")
        response.writelines("5 1.0 6 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 502 1.0DL+0.8RLL+0.8WL+X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 8 0.8 16 0.8\n")
        response.writelines("LOAD COMB 503 1.0DL+0.8RLL+0.8WL+X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 9 0.8 16 0.8\n")
        response.writelines("LOAD COMB 504 1.0DL+0.8RLL+0.8WL-X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 10 0.8 16 0.8\n")
        response.writelines("LOAD COMB 505 1.0DL+0.8RLL+0.8WL-X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 11 0.8 16 0.8\n")
        response.writelines("LOAD COMB 506 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 12 0.8 16 0.8\n")
        response.writelines("LOAD COMB 507 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 13 0.8 16 0.8 \n")
        response.writelines("LOAD COMB 508 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 14 0.8 16 0.8\n")
        response.writelines("LOAD COMB 509 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 15 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 510 1.0DL+0.8RLL+0.8+SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 1 0.8 16 0.8\n")
        response.writelines("LOAD COMB 511 1.0DL+0.8RLL+0.8-SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 2 0.8 16 0.8\n")
        response.writelines("LOAD COMB 512 1.0DL+0.8RLL+0.8+SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 3 0.8 16 0.8\n")
        response.writelines("LOAD COMB 513 1.0DL+0.8RLL+0.8-SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 4 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 514 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 8 1.0\n")
        response.writelines("LOAD COMB 515 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 516 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 517 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 518 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 519 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 520 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 14 1.0\n")
        response.writelines("LOAD COMB 521 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 15 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 522 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 523 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 524 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 525 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 526 1.0DL+1.0RLL+1.0CL+1.0TL1 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 527 1.0DL+0.8RLL+1.0CL+0.8WL+X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 8 0.8 16 0.8\n")
        response.writelines("LOAD COMB 528 1.0DL+0.8RLL+1.0CL+0.8WL+X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 9 0.8 16 0.8\n")
        response.writelines("LOAD COMB 529 1.0DL+0.8RLL+1.0CL+0.8WL-X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 10 0.8 16 0.8\n")
        response.writelines("LOAD COMB 530 1.0DL+0.8RLL+1.0CL+0.8WL-X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 11 0.8 16 0.8\n")
        response.writelines("LOAD COMB 531 1.0DL+0.8RLL+1.0CL+0.8WL+Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 12 0.8 16 0.8\n")
        response.writelines("LOAD COMB 532 1.0DL+0.8RLL+1.0CL+0.8WL-Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 13 0.8 16 0.8 \n")
        response.writelines("LOAD COMB 533 1.0DL+0.8RLL+1.0CL+0.8WL+Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 14 0.8 16 0.8\n")
        response.writelines("LOAD COMB 534 1.0DL+0.8RLL+1.0CL+0.8WL-Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 15 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 535 1.0DL+0.8RLL+1.0CL+0.8+SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 1 0.8 16 0.8\n")
        response.writelines("LOAD COMB 536 1.0DL+0.8RLL+1.0CL+0.8-SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 2 0.8 16 0.8\n")
        response.writelines("LOAD COMB 537 1.0DL+0.8RLL+1.0CL+0.8+SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 3 0.8 16 0.8\n")
        response.writelines("LOAD COMB 538 1.0DL+0.8RLL+1.0CL+0.8-SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 1.0 4 0.8 16 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 539 1.0DL+1.0CL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 7 1.0 8 1.0\n")
        response.writelines("LOAD COMB 540 1.0DL+1.0CL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 7 1.0 9 1.0\n")
        response.writelines("LOAD COMB 541 1.0DL+1.0CL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 7 1.0 10 1.0\n")
        response.writelines("LOAD COMB 542 1.0DL+1.0CL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 7 1.0 11 1.0\n")
        response.writelines("LOAD COMB 543 1.0DL+1.0CL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 7 1.0 12 1.0\n")
        response.writelines("LOAD COMB 544 1.0DL+1.0CL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 7 1.0 13 1.0\n")
        response.writelines("LOAD COMB 545 1.0DL+1.0CL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 7 1.0 14 1.0\n")
        response.writelines("LOAD COMB 546 1.0DL+1.0CL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 7 1.0 15 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 547 1.0DL+1.0CL+1.0+SLX\n")
        response.writelines("5 1.0 7 1.0 1 1.0\n")
        response.writelines("LOAD COMB 548 1.0DL+1.0CL+1.0-SLX\n")
        response.writelines("5 1.0 7 1.0 2 1.0\n")
        response.writelines("LOAD COMB 549 1.0DL+1.0CL+1.0+SLZ\n")
        response.writelines("5 1.0 7 1.0 3 1.0\n")
        response.writelines("LOAD COMB 550 1.0DL+1.0CL+1.0-SLZ\n")
        response.writelines("5 1.0 7 1.0 4 1.0\n")

        response.writelines("LOAD COMB 551 1.0DL+1.0RLL+1.0TL2 \n")
        response.writelines("5 1.0 6 1.0 17 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 552 1.0DL+0.8RLL+0.8WL+X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 8 0.8 17 0.8\n")
        response.writelines("LOAD COMB 553 1.0DL+0.8RLL+0.8WL+X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 554 1.0DL+0.8RLL+0.8WL-X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 555 1.0DL+0.8RLL+0.8WL-X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 556 1.0DL+0.8RLL+0.8WL+Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 557 1.0DL+0.8RLL+0.8WL-Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 13 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 558 1.0DL+0.8RLL+0.8WL+Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 14 0.8 17 0.8\n")
        response.writelines("LOAD COMB 559 1.0DL+0.8RLL+0.8WL-Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 15 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 560 1.0DL+0.8RLL+0.8+SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 561 1.0DL+0.8RLL+0.8-SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 562 1.0DL+0.8RLL+0.8+SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 563 1.0DL+0.8RLL+0.8-SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 564 1.0DL+1.0RLL+1.0CL+1.0TL2 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 17 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 565 1.0DL+0.8RLL+1.0CL+0.8WL+X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 8 0.8 17 0.8\n")
        response.writelines("LOAD COMB 566 1.0DL+0.8RLL+1.0CL+0.8WL+X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 567 1.0DL+0.8RLL+1.0CL+0.8WL-X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 568 1.0DL+0.8RLL+1.0CL+0.8WL-X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 569 1.0DL+0.8RLL+1.0CL+0.8WL+Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 570 1.0DL+0.8RLL+1.0CL+0.8WL-Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 13 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 571 1.0DL+0.8RLL+1.0CL+0.8WL+Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 14 0.8 17 0.8\n")
        response.writelines("LOAD COMB 572 1.0DL+0.8RLL+1.0CL+0.8WL-Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 15 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 573 1.0DL+0.8RLL+1.0CL+0.8+SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 574 1.0DL+0.8RLL+1.0CL+0.8-SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 575 1.0DL+0.8RLL+1.0CL+0.8+SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 576 1.0DL+0.8RLL+1.0CL+0.8-SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 1.0 4 0.8 17 0.8\n")



        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 357\n")

    if LOADS_REQUIRED == 'EL-DL-RLL-MLL-CL-WL-TL':

        response.writelines("********************************************************************\n")
        response.writelines("**SEISMIC PARAMETERS**\n")
        response.writelines("********************************************************************\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005':
            response.writelines("DEFINE 1893 LOAD\n")
        if SEISMIC_CODE == 'IS 1893-2002/2005(WITH PART-4)':
            response.writelines("DEFINE 1893 LOAD PART4\n")
        if SEISMIC_CODE == 'IS 1893(PART-1)-2016':
            response.writelines("DEFINE IS1893 2016 LOAD\n")
        if SEISMIC_CODE == 'IS 1893(PART-4)-2015':
            response.writelines("DEFINE IS1893 2015 LOAD PART4\n")
        response.writelines("ZONE 0.1 RF 4 I 1 SS 2 ST 2 DM 0.02\n")
        response.writelines("SELFWEIGHT 1.15\n")

        response.writelines("**DEAD LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI {abs(round((DL*((SW2[x]+SW2[x+1])/2)),4))}\n")
            x=x+1

        response.writelines("**COLLATERAL LOADS**\n")
        response.writelines("MEMBER WEIGHT\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1


        response.writelines("********************************************************************\n")
        response.writelines("LOAD 1 EQ+X\n")
        response.writelines("1893 LOAD X 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 2 EQ-X\n")
        response.writelines("1893 LOAD X -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 3 EQ+Z\n")
        response.writelines("1893 LOAD Z 1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 4 EQ-Z\n")
        response.writelines("1893 LOAD Z -1\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("CHANGE\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 5 DL\n")
        response.writelines("SELFWEIGHT Y -1.15\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1

            response.writelines(f"UNI GY {round((DL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1
        response.writelines("********************************************************************\n")
        response.writelines("LOAD 6 LL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((LL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 7 MLL\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 8 CL\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            while i<(len(EWX)-1):
                if i>1 and i<len(EWX):
                    CRET.append(i+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            CRET1=[]
            y=1
            while y<=len(CRET):
                if len(CRET)>=15:
                    CRET1.append(CRET[y-1])
                    if y%15==0 or y%len(CRET)==0:
                        st=' '.join(map(str,CRET1))
                        if y==len(CRET):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRET1)
                        print(st)
                        CRET1=[]
                else:
                    if y==len(CRET):
                        st=' '.join(map(str,CRET))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI GY {round((CL*((SW2[x]+SW2[x+1])/2)),4)}\n")
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 9 WL1\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 - Cpi)),4)}\n")

            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            print("CRET4")
            st=' '.join(map(str,CRET4))
            print(CRET5)
            print("CRET5")
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 10 WL2\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 11 WL3\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 12 WL4\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4 + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3 - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe2 - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1 - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5 + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6 - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 13 WL5\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 14 WL6\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe1a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe4a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 15 WL7\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a + Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a + Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a - Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a + Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 16 WL8\n")
        response.writelines("MEMBER LOAD\n")

        x=0
        while x<(len(SW1)):
            i=0
            CRET=[]
            CRET1=[]
            CRET2=[]
            CRET3=[]
            while i<=(len(EWX)-1):
                if i==0:
                    CRET.append(1+((len(EWX)-1)*x))
                if i>0 and i<((len(EWX)-1)/2):
                    CRET1.append((i+1)+((len(EWX)-1)*x))
                if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                    CRET2.append((i+1)+((len(EWX)-1)*x))
                if i==len(EWX)-1:
                    CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
                i=i+1
            print(CRET)
            st=' '.join(map(str,CRET))
            print(CRET1)
            st1=' '.join(map(str,CRET1))
            print(CRET2)
            st2=' '.join(map(str,CRET2))
            print(CRET3)
            st3=' '.join(map(str,CRET3))
            print(st)
            response.writelines(f"{st} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (Cpe4a + Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET1):
                if len(CRET1)>=15:
                    CRETA1.append(CRET1[y-1])
                    if y%15==0 or y%len(CRET1)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET1):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET1):
                        st=' '.join(map(str,CRET1))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            CRETA1=[]
            y=1
            while y<=len(CRET2):
                if len(CRET2)>=15:
                    CRETA1.append(CRET2[y-1])
                    if y%15==0 or y%len(CRET2)==0:
                        st=' '.join(map(str,CRETA1))
                        if y==len(CRET2):
                            response.writelines(f"{st} -\n")
                        else:
                            response.writelines(f"{st} -\n")
                        print(CRETA1)
                        print(st)
                        CRETA1=[]
                else:
                    if y==len(CRET2):
                        st=' '.join(map(str,CRET2))
                        response.writelines(f"{st} -\n")
                y=y+1
            response.writelines(f"UNI Y {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe3a - Cpi)),4)}\n")
            response.writelines(f"{st3} UNI GX {round((WL*((SW2[x + 1] + SW2[x]) / 2)* (-Cpe1a - Cpi)),4)}\n")
            x=x+1

        x=0
        while x<2:
            i=0
            CRET4=[]
            CRET5=[]
            while i<((len(EW4)-1)-len(ICO)-2):
                if x==0:
                    CRET4.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                if x==1:
                    CRET5.append((i+1)+((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(x*((len(EW4)-1)-len(ICO)-2)))
                i=i+1
            CRET4.sort()
            CRET5.sort()
            if x==0:
                CRET4.insert(0,1)
                CRET4.insert((len(EW4)-2),len(EWX)-1)
                z=0
                while z<len(ICO):
                    CRET4.insert(ICO_Nodes1[z],((len(EWX)-1)*len(SW1))+(1+z))
                    z=z+1
            if x==1:
                CRET5.insert(0,1+((len(EWX)-1)*(len(SW1)-1)))
                CRET5.insert((len(EW4)-2),(len(EWX)-1)+((len(EWX)-1)*(len(SW1)-1)))
                z=1
                while z<=len(ICO):
                    CRET5.insert(ICO_Nodes1[z-1],((len(EWX)-1)*len(SW1))+(z+ (len(ICO)*(len(SW1)-1)) ))
                    z=z+1

            print(CRET4)
            st=' '.join(map(str,CRET4))
            print(CRET5)
            st1=' '.join(map(str,CRET5))
            print(st)
            if x==0:
                y=0
                while y<len(CRET4):
                    response.writelines(f"{CRET4[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (Cpe5a + Cpi)),4)}\n")
                    y=y+1
            if x==1:
                y=0
                while y<len(CRET5):
                    response.writelines(f"{CRET5[y]} UNI GZ {round((WL*((EW4[y + 1] + EW4[y]) / 2)* (-Cpe6a - Cpi)),4)}\n")
                    y=y+1
            x=x+1

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 17 TL1\n")
        response.writelines("MEMBER LOAD\n")

        response.writelines("********************************************************************\n")
        response.writelines("LOAD 18 TL2\n")
        response.writelines("MEMBER LOAD\n")

        response.writelines("********************************************************************\n")

        response.writelines("*************LOAD COMBINATIONS (IS 800:2007 LSD)********************\n")
        response.writelines("****************LOAD COMBINATIONS - STRENGTH************************\n")

        response.writelines("LOAD COMB 100 1.5DL+1.5RLL+1.05MLL+1.05TL1\n")
        response.writelines("5 1.5 6 1.5 7 1.05 17 1.05\n")
        response.writelines("LOAD COMB 101 1.5DL+1.05RLL+1.5MLL+1.05TL1\n")
        response.writelines("5 1.5 6 1.05 7 1.5 17 1.05\n")
        response.writelines("LOAD COMB 102 1.5DL+1.05RLL+1.05MLL+1.5TL1\n")
        response.writelines("5 1.5 6 1.05 7 1.05 17 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 103 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 104 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 105 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 106 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 107 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 108 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 109 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 17 1.05\n")
        response.writelines("LOAD COMB 110 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 16 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 111 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 112 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 113 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 114 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 115 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 116 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 117 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 17 1.05\n")
        response.writelines("LOAD COMB 118 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 16 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 119 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 120 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 121 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 122 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 123 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 124 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 125 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 17 1.2\n")
        response.writelines("LOAD COMB 126 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 16 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 127 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 128 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 129 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 130 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 131 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 132 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 133 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 134 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 135 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 136 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 137 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 138 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 17 1.2\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 139 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 140 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 141 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 142 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 143 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 144 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 145 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 17 0.53\n")
        response.writelines("LOAD COMB 146 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 16 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 147 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 148 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 149 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 150 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 151 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 152 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 153 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 17 0.53\n")
        response.writelines("LOAD COMB 154 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 155 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 156 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 157 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 158 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 159 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 160 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 161 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 17 1.2\n")
        response.writelines("LOAD COMB 162 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 16 1.2 17 1.2\n")

        response.writelines("LOAD COMB 163 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 164 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 165 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 166 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 167 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 168 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 169 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 170 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 171 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 172 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 173 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 174 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 175 1.5DL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 9 1.5\n")
        response.writelines("LOAD COMB 176 1.5DL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 10 1.5\n")
        response.writelines("LOAD COMB 177 1.5DL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 11 1.5\n")
        response.writelines("LOAD COMB 178 1.5DL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 12 1.5\n")
        response.writelines("LOAD COMB 179 1.5DL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 13 1.5\n")
        response.writelines("LOAD COMB 180 1.5DL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 14 1.5\n")
        response.writelines("LOAD COMB 181 1.5DL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 15 1.5\n")
        response.writelines("LOAD COMB 182 1.5DL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 183 1.5DL+1.5+SLX\n")
        response.writelines("5 1.5 1 1.5\n")
        response.writelines("LOAD COMB 184 1.5DL+1.5-SLX\n")
        response.writelines("5 1.5 2 1.5\n")
        response.writelines("LOAD COMB 185 1.5DL+1.5+SLZ\n")
        response.writelines("5 1.5 3 1.5\n")
        response.writelines("LOAD COMB 186 1.5DL+1.5-SLZ\n")
        response.writelines("5 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 187 0.9DL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 9 1.5\n")
        response.writelines("LOAD COMB 188 0.9DL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 10 1.5\n")
        response.writelines("LOAD COMB 189 0.9DL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 11 1.5\n")
        response.writelines("LOAD COMB 190 0.9DL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 12 1.5\n")
        response.writelines("LOAD COMB 191 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 13 1.5\n")
        response.writelines("LOAD COMB 192 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 14 1.5\n")
        response.writelines("LOAD COMB 193 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 15 1.5\n")
        response.writelines("LOAD COMB 194 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 195 0.9DL+1.5+SLX\n")
        response.writelines("5 0.9 1 1.5\n")
        response.writelines("LOAD COMB 196 0.9DL+1.5-SLX\n")
        response.writelines("5 0.9 2 1.5\n")
        response.writelines("LOAD COMB 197 0.9DL+1.5+SLZ\n")
        response.writelines("5 0.9 3 1.5\n")
        response.writelines("LOAD COMB 198 0.9DL+1.5-SLZ\n")
        response.writelines("5 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 199 1.2DL+1.2RLL+1.2TL1\n")
        response.writelines("5 1.2 6 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 200 0.9DL+1.2RLL+1.2TL1\n")
        response.writelines("5 0.9 6 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 201 1.0DL+0.35RLL+0.35MLL+0.35TL1\n")
        response.writelines("5 1.0 6 0.35 7 0.35 17 0.35\n")

        response.writelines("LOAD COMB 202 1.5DL+1.5RLL+1.05MLL+1.5CL+1.05TL1\n")
        response.writelines("5 1.5 6 1.5 7 1.05 8 1.5 17 1.05\n")
        response.writelines("LOAD COMB 203 1.5DL+1.05RLL+1.5MLL+1.5CL+1.05TL1\n")
        response.writelines("5 1.5 6 1.05 7 1.5 8 1.5 17 1.05\n")
        response.writelines("LOAD COMB 204 1.5DL+1.05RLL+1.05MLL+1.5CL+1.5TL1\n")
        response.writelines("5 1.5 6 1.05 7 1.05 8 1.5 17 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 205 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 206 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 207 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 208 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 209 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 210 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 211 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 15 0.6 17 1.05\n")
        response.writelines("LOAD COMB 212 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 16 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 213 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 9 0.6 17 1.05\n")
        response.writelines("LOAD COMB 214 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 10 0.6 17 1.05\n")
        response.writelines("LOAD COMB 215 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 11 0.6 17 1.05\n")
        response.writelines("LOAD COMB 216 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 12 0.6 17 1.05\n")
        response.writelines("LOAD COMB 217 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 13 0.6 17 1.05\n")
        response.writelines("LOAD COMB 218 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z+CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 14 0.6 17 1.05\n")
        response.writelines("LOAD COMB 219 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 15 0.6 17 1.05\n")
        response.writelines("LOAD COMB 220 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z-CPI+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 16 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 221 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 9 0.6 17 1.2\n")
        response.writelines("LOAD COMB 222 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 10 0.6 17 1.2\n")
        response.writelines("LOAD COMB 223 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 11 0.6 17 1.2\n")
        response.writelines("LOAD COMB 224 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 12 0.6 17 1.2\n")
        response.writelines("LOAD COMB 225 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 13 0.6 17 1.2\n")
        response.writelines("LOAD COMB 226 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 14 0.6 17 1.2\n")
        response.writelines("LOAD COMB 227 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 15 0.6 17 1.2\n")
        response.writelines("LOAD COMB 228 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 16 0.6 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 229 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 230 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 231 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 232 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 233 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 1 0.6 17 1.05\n")
        response.writelines("LOAD COMB 234 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLX+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 2 0.6 17 1.05\n")
        response.writelines("LOAD COMB 235 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 3 0.6 17 1.05\n")
        response.writelines("LOAD COMB 236 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLZ+1.05TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 4 0.6 17 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 237 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 1 0.6 17 1.2\n")
        response.writelines("LOAD COMB 238 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 2 0.6 17 1.2\n")
        response.writelines("LOAD COMB 239 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 3 0.6 17 1.2\n")
        response.writelines("LOAD COMB 240 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 4 0.6 17 1.2\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 241 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 242 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 243 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 244 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 245 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 246 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 247 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 15 1.2 17 0.53\n")
        response.writelines("LOAD COMB 248 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 249 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 9 1.2 17 0.53\n")
        response.writelines("LOAD COMB 250 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 10 1.2 17 0.53\n")
        response.writelines("LOAD COMB 251 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 11 1.2 17 0.53\n")
        response.writelines("LOAD COMB 252 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 12 1.2 17 0.53\n")
        response.writelines("LOAD COMB 253 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 13 1.2 17 0.53\n")
        response.writelines("LOAD COMB 254 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z+CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 14 1.2 17 0.53\n")
        response.writelines("LOAD COMB 255 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 15 1.2 17 0.53\n")
        response.writelines("LOAD COMB 256 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z-CPI+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2 17 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 257 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 9 1.2 17 1.2\n")
        response.writelines("LOAD COMB 258 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 10 1.2 17 1.2\n")
        response.writelines("LOAD COMB 259 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 11 1.2 17 1.2\n")
        response.writelines("LOAD COMB 260 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 12 1.2 17 1.2\n")
        response.writelines("LOAD COMB 261 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 13 1.2 17 1.2\n")
        response.writelines("LOAD COMB 262 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 14 1.2 17 1.2\n")
        response.writelines("LOAD COMB 263 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 15 1.2 17 1.2\n")
        response.writelines("LOAD COMB 264 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 16 1.2 17 1.2\n")

        response.writelines("LOAD COMB 265 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 266 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 267 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 268 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 269 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLX+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 1 1.2 17 0.53\n")
        response.writelines("LOAD COMB 270 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLX+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 2 1.2 17 0.53\n")
        response.writelines("LOAD COMB 271 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 3 1.2 17 0.53\n")
        response.writelines("LOAD COMB 272 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLZ+0.53TL1\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 4 1.2 17 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 273 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 1 1.2 17 1.2\n")
        response.writelines("LOAD COMB 274 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLX+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 2 1.2 17 1.2\n")
        response.writelines("LOAD COMB 275 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 3 1.2 17 1.2\n")
        response.writelines("LOAD COMB 276 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLZ+1.2TL1\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 4 1.2 17 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 277 1.5DL+1.5CL+1.5WL+X+CPI\n")
        response.writelines("5 1.5 8 1.5 9 1.5\n")
        response.writelines("LOAD COMB 278 1.5DL+1.5CL+1.5WL-X+CPI\n")
        response.writelines("5 1.5 8 1.5 10 1.5\n")
        response.writelines("LOAD COMB 279 1.5DL+1.5CL+1.5WL+X-CPI\n")
        response.writelines("5 1.5 8 1.5 11 1.5\n")
        response.writelines("LOAD COMB 280 1.5DL+1.5CL+1.5WL-X-CPI\n")
        response.writelines("5 1.5 8 1.5 12 1.5\n")
        response.writelines("LOAD COMB 281 1.5DL+1.5CL+1.5WL+Z+CPI\n")
        response.writelines("5 1.5 8 1.5 13 1.5\n")
        response.writelines("LOAD COMB 282 1.5DL+1.5CL+1.5WL-Z+CPI\n")
        response.writelines("5 1.5 8 1.5 14 1.5\n")
        response.writelines("LOAD COMB 283 1.5DL+1.5CL+1.5WL+Z-CPI\n")
        response.writelines("5 1.5 8 1.5 15 1.5\n")
        response.writelines("LOAD COMB 284 1.5DL+1.5CL+1.5WL-Z-CPI\n")
        response.writelines("5 1.5 8 1.5 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 285 1.5DL+1.5CL+1.5+SLX\n")
        response.writelines("5 1.5 8 1.5 1 1.5\n")
        response.writelines("LOAD COMB 286 1.5DL+1.5CL+1.5-SLX\n")
        response.writelines("5 1.5 8 1.5 2 1.5\n")
        response.writelines("LOAD COMB 287 1.5DL+1.5CL+1.5+SLZ\n")
        response.writelines("5 1.5 8 1.5 3 1.5\n")
        response.writelines("LOAD COMB 288 1.5DL+1.5CL+1.5-SLZ\n")
        response.writelines("5 1.5 8 1.5 4 1.5\n")
        response.writelines("****\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 289 0.9DL+0.9CL+1.5WL+X+CPI\n")
        response.writelines("5 0.9 8 0.9 9 1.5\n")
        response.writelines("LOAD COMB 290 0.9DL+0.9CL+1.5WL-X+CPI\n")
        response.writelines("5 0.9 8 0.9 10 1.5\n")
        response.writelines("LOAD COMB 291 0.9DL+0.9CL+1.5WL+X-CPI\n")
        response.writelines("5 0.9 8 0.9 11 1.5\n")
        response.writelines("LOAD COMB 292 0.9DL+0.9CL+1.5WL-X-CPI\n")
        response.writelines("5 0.9 8 0.9 12 1.5\n")
        response.writelines("LOAD COMB 293 0.9DL+1.5WL+Z+CPI\n")
        response.writelines("5 0.9 8 0.9 13 1.5\n")
        response.writelines("LOAD COMB 294 0.9DL+1.5WL-Z+CPI\n")
        response.writelines("5 0.9 8 0.9 14 1.5\n")
        response.writelines("LOAD COMB 295 0.9DL+1.5WL+Z-CPI\n")
        response.writelines("5 0.9 8 0.9 15 1.5\n")
        response.writelines("LOAD COMB 296 0.9DL+1.5WL-Z-CPI\n")
        response.writelines("5 0.9 8 0.9 16 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 297 0.9DL+0.9CL+1.5+SLX\n")
        response.writelines("5 0.9 8 0.9 1 1.5\n")
        response.writelines("LOAD COMB 298 0.9DL+0.9CL+1.5-SLX\n")
        response.writelines("5 0.9 8 0.9 2 1.5\n")
        response.writelines("LOAD COMB 299 0.9DL+0.9CL+1.5+SLZ\n")
        response.writelines("5 0.9 8 0.9 3 1.5\n")
        response.writelines("LOAD COMB 300 0.9DL+0.9CL+1.5-SLZ\n")
        response.writelines("5 0.9 8 0.9 4 1.5\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 301 1.2DL+1.2RLL+1.2CL+1.2TL1\n")
        response.writelines("5 1.2 6 1.2 8 1.2 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 302 0.9DL+1.2RLL+0.9CL+1.2TL1\n")
        response.writelines("5 0.9 6 1.2 8 0.9 17 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 303 1.0DL+0.35RLL+0.35MLL+1.0CL+0.35TL1\n")
        response.writelines("5 1.0 6 0.35 7 0.35 8 1.0 17 0.35\n")

        response.writelines("LOAD COMB 304 1.5DL+1.5RLL+1.05MLL+1.05TL2\n")
        response.writelines("5 1.5 6 1.5 7 1.05 18 1.05\n")
        response.writelines("LOAD COMB 305 1.5DL+1.05RLL+1.5MLL+1.05TL2\n")
        response.writelines("5 1.5 6 1.05 7 1.5 18 1.05\n")
        response.writelines("LOAD COMB 306 1.5DL+1.05RLL+1.05MLL+1.5TL2\n")
        response.writelines("5 1.5 6 1.05 7 1.05 18 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 307 1.2DL+1.2RLL+1.05MLL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 308 1.2DL+1.2RLL+1.05MLL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 309 1.2DL+1.2RLL+1.05MLL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 310 1.2DL+1.2RLL+1.05MLL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 311 1.2DL+1.2RLL+1.05MLL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 312 1.2DL+1.2RLL+1.05MLL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 313 1.2DL+1.2RLL+1.05MLL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 15 0.6 18 1.05\n")
        response.writelines("LOAD COMB 314 1.2DL+1.2RLL+1.05MLL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 16 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 315 1.2DL+1.05RLL+1.2MLL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 316 1.2DL+1.05RLL+1.2MLL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 317 1.2DL+1.05RLL+1.2MLL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 318 1.2DL+1.05RLL+1.2MLL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 319 1.2DL+1.05RLL+1.2MLL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 320 1.2DL+1.05RLL+1.2MLL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 321 1.2DL+1.05RLL+1.2MLL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 15 0.6 18 1.05\n")
        response.writelines("LOAD COMB 322 1.2DL+1.05RLL+1.2MLL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 16 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 323 1.2DL+1.05RLL+1.05MLL+0.6WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 9 0.6 18 1.2\n")
        response.writelines("LOAD COMB 324 1.2DL+1.05RLL+1.05MLL+0.6WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 10 0.6 18 1.2\n")
        response.writelines("LOAD COMB 325 1.2DL+1.05RLL+1.05MLL+0.6WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 11 0.6 18 1.2\n")
        response.writelines("LOAD COMB 326 1.2DL+1.05RLL+1.05MLL+0.6WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 12 0.6 18 1.2\n")
        response.writelines("LOAD COMB 327 1.2DL+1.05RLL+1.05MLL+0.6WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 13 0.6 18 1.2\n")
        response.writelines("LOAD COMB 328 1.2DL+1.05RLL+1.05MLL+0.6WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 14 0.6 18 1.2\n")
        response.writelines("LOAD COMB 329 1.2DL+1.05RLL+1.05MLL+0.6WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 15 0.6 18 1.2\n")
        response.writelines("LOAD COMB 330 1.2DL+1.05RLL+1.05MLL+0.6WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 16 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 331 1.2DL+1.2RLL+1.05MLL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 332 1.2DL+1.2RLL+1.05MLL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 333 1.2DL+1.2RLL+1.05MLL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 334 1.2DL+1.2RLL+1.05MLL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 335 1.2DL+1.05RLL+1.2MLL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 336 1.2DL+1.05RLL+1.2MLL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 337 1.2DL+1.05RLL+1.2MLL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 338 1.2DL+1.05RLL+1.2MLL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 339 1.2DL+1.05RLL+1.05MLL+0.6+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 1 0.6 18 1.2\n")
        response.writelines("LOAD COMB 340 1.2DL+1.05RLL+1.05MLL+0.6-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 2 0.6 18 1.2\n")
        response.writelines("LOAD COMB 341 1.2DL+1.05RLL+1.05MLL+0.6+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 3 0.6 18 1.2\n")
        response.writelines("LOAD COMB 342 1.2DL+1.05RLL+1.05MLL+0.6-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 4 0.6 18 1.2\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 343 1.2DL+1.2RLL+0.53MLL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 344 1.2DL+1.2RLL+0.53MLL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 345 1.2DL+1.2RLL+0.53MLL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 346 1.2DL+1.2RLL+0.53MLL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 347 1.2DL+1.2RLL+0.53MLL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 348 1.2DL+1.2RLL+0.53MLL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 349 1.2DL+1.2RLL+0.53MLL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 15 1.2 18 0.53\n")
        response.writelines("LOAD COMB 350 1.2DL+1.2RLL+0.53MLL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 16 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 351 1.2DL+0.53RLL+1.2MLL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 352 1.2DL+0.53RLL+1.2MLL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 353 1.2DL+0.53RLL+1.2MLL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 354 1.2DL+0.53RLL+1.2MLL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 355 1.2DL+0.53RLL+1.2MLL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 356 1.2DL+0.53RLL+1.2MLL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 357 1.2DL+0.53RLL+1.2MLL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 15 1.2 18 0.53\n")
        response.writelines("LOAD COMB 358 1.2DL+0.53RLL+1.2MLL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 16 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 359 1.2DL+0.53RLL+0.53MLL+1.2WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 9 1.2 18 1.2\n")
        response.writelines("LOAD COMB 360 1.2DL+0.53RLL+0.53MLL+1.2WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 10 1.2 18 1.2\n")
        response.writelines("LOAD COMB 361 1.2DL+0.53RLL+0.53MLL+1.2WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 11 1.2 18 1.2\n")
        response.writelines("LOAD COMB 362 1.2DL+0.53RLL+0.53MLL+1.2WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 12 1.2 18 1.2\n")
        response.writelines("LOAD COMB 363 1.2DL+0.53RLL+0.53MLL+1.2WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 13 1.2 18 1.2\n")
        response.writelines("LOAD COMB 364 1.2DL+0.53RLL+0.53MLL+1.2WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 14 1.2 18 1.2\n")
        response.writelines("LOAD COMB 365 1.2DL+0.53RLL+0.53MLL+1.2WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 15 1.2 18 1.2\n")
        response.writelines("LOAD COMB 366 1.2DL+0.53RLL+0.53MLL+1.2WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 16 1.2 18 1.2\n")

        response.writelines("LOAD COMB 367 1.2DL+1.2RLL+0.53MLL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 368 1.2DL+1.2RLL+0.53MLL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 369 1.2DL+1.2RLL+0.53MLL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 370 1.2DL+1.2RLL+0.53MLL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 371 1.2DL+0.53RLL+1.2MLL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 372 1.2DL+0.53RLL+1.2MLL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 373 1.2DL+0.53RLL+1.2MLL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 374 1.2DL+0.53RLL+1.2MLL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 375 1.2DL+0.53RLL+0.53MLL+1.2+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 1 1.2 18 1.2\n")
        response.writelines("LOAD COMB 376 1.2DL+0.53RLL+0.53MLL+1.2-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 2 1.2 18 1.2\n")
        response.writelines("LOAD COMB 377 1.2DL+0.53RLL+0.53MLL+1.2+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 3 1.2 18 1.2\n")
        response.writelines("LOAD COMB 378 1.2DL+0.53RLL+0.53MLL+1.2-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 4 1.2 18 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 379 1.2DL+1.2RLL+1.2TL2\n")
        response.writelines("5 1.2 6 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 380 0.9DL+1.2RLL+1.2TL2\n")
        response.writelines("5 0.9 6 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 381 1.0DL+0.35RLL+0.35MLL+0.35TL2\n")
        response.writelines("5 1.0 6 0.35 7 0.35 18 0.35\n")

        response.writelines("LOAD COMB 382 1.5DL+1.5RLL+1.05MLL+1.5CL+1.05TL2\n")
        response.writelines("5 1.5 6 1.5 7 1.05 8 1.5 18 1.05\n")
        response.writelines("LOAD COMB 383 1.5DL+1.05RLL+1.5MLL+1.5CL+1.05TL2\n")
        response.writelines("5 1.5 6 1.05 7 1.5 8 1.5 18 1.05\n")
        response.writelines("LOAD COMB 384 1.5DL+1.05RLL+1.05MLL+1.5CL+1.5TL2\n")
        response.writelines("5 1.5 6 1.05 7 1.05 8 1.5 18 1.5\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 385 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 386 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 387 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 388 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 389 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 390 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 391 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 15 0.6 18 1.05\n")
        response.writelines("LOAD COMB 392 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 16 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 393 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 9 0.6 18 1.05\n")
        response.writelines("LOAD COMB 394 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 10 0.6 18 1.05\n")
        response.writelines("LOAD COMB 395 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 11 0.6 18 1.05\n")
        response.writelines("LOAD COMB 396 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-X-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 12 0.6 18 1.05\n")
        response.writelines("LOAD COMB 397 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 13 0.6 18 1.05\n")
        response.writelines("LOAD COMB 398 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z+CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 14 0.6 18 1.05\n")
        response.writelines("LOAD COMB 399 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL+Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 15 0.6 18 1.05\n")
        response.writelines("LOAD COMB 400 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6WL-Z-CPI+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 16 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 401 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 9 0.6 18 1.2\n")
        response.writelines("LOAD COMB 402 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 10 0.6 18 1.2\n")
        response.writelines("LOAD COMB 403 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 11 0.6 18 1.2\n")
        response.writelines("LOAD COMB 404 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 12 0.6 18 1.2\n")
        response.writelines("LOAD COMB 405 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 13 0.6 18 1.2\n")
        response.writelines("LOAD COMB 406 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 14 0.6 18 1.2\n")
        response.writelines("LOAD COMB 407 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 15 0.6 18 1.2\n")
        response.writelines("LOAD COMB 408 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 16 0.6 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 409 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 410 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 411 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 412 1.2DL+1.2RLL+1.05MLL+1.2CL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.2 7 1.05 8 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 413 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 1 0.6 18 1.05\n")
        response.writelines("LOAD COMB 414 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLX+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 2 0.6 18 1.05\n")
        response.writelines("LOAD COMB 415 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6+SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 3 0.6 18 1.05\n")
        response.writelines("LOAD COMB 416 1.2DL+1.05RLL+1.2MLL+1.2CL+0.6-SLZ+1.05TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.2 8 1.2 4 0.6 18 1.05\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 417 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 1 0.6 18 1.2\n")
        response.writelines("LOAD COMB 418 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 2 0.6 18 1.2\n")
        response.writelines("LOAD COMB 419 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 3 0.6 18 1.2\n")
        response.writelines("LOAD COMB 420 1.2DL+1.05RLL+1.05MLL+1.2CL+0.6-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 1.05 7 1.05 8 1.2 4 0.6 18 1.2\n")


        response.writelines("****\n")
        response.writelines("LOAD COMB 421 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 422 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 423 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 424 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 425 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 426 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 427 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 15 1.2 18 0.53\n")
        response.writelines("LOAD COMB 428 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 16 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 429 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 9 1.2 18 0.53\n")
        response.writelines("LOAD COMB 430 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 10 1.2 18 0.53\n")
        response.writelines("LOAD COMB 431 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 11 1.2 18 0.53\n")
        response.writelines("LOAD COMB 432 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-X-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 12 1.2 18 0.53\n")
        response.writelines("LOAD COMB 433 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 13 1.2 18 0.53\n")
        response.writelines("LOAD COMB 434 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z+CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 14 1.2 18 0.53\n")
        response.writelines("LOAD COMB 435 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL+Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 15 1.2 18 0.53\n")
        response.writelines("LOAD COMB 436 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2WL-Z-CPI+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 16 1.2 18 0.53\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 437 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 9 1.2 18 1.2\n")
        response.writelines("LOAD COMB 438 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 10 1.2 18 1.2\n")
        response.writelines("LOAD COMB 439 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 11 1.2 18 1.2\n")
        response.writelines("LOAD COMB 440 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-X-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 12 1.2 18 1.2\n")
        response.writelines("LOAD COMB 441 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 13 1.2 18 1.2\n")
        response.writelines("LOAD COMB 442 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z+CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 14 1.2 18 1.2\n")
        response.writelines("LOAD COMB 443 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL+Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 15 1.2 18 1.2\n")
        response.writelines("LOAD COMB 444 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2WL-Z-CPI+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 16 1.2 18 1.2\n")

        response.writelines("LOAD COMB 445 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 446 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 447 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 448 1.2DL+1.2RLL+0.53MLL+1.2CL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 1.2 7 0.53 8 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 449 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLX+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 1 1.2 18 0.53\n")
        response.writelines("LOAD COMB 450 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLX+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 2 1.2 18 0.53\n")
        response.writelines("LOAD COMB 451 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2+SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 3 1.2 18 0.53\n")
        response.writelines("LOAD COMB 452 1.2DL+0.53RLL+1.2MLL+1.2CL+1.2-SLZ+0.53TL2\n")
        response.writelines("5 1.2 6 0.53 7 1.2 8 1.2 4 1.2 18 0.53\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 453 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 1 1.2 18 1.2\n")
        response.writelines("LOAD COMB 454 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLX+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 2 1.2 18 1.2\n")
        response.writelines("LOAD COMB 455 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2+SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 3 1.2 18 1.2\n")
        response.writelines("LOAD COMB 456 1.2DL+0.53RLL+0.53MLL+1.2CL+1.2-SLZ+1.2TL2\n")
        response.writelines("5 1.2 6 0.53 7 0.53 8 1.2 4 1.2 18 1.2\n")
        response.writelines("****\n")

        response.writelines("LOAD COMB 457 1.2DL+1.2RLL+1.2CL+1.2TL2\n")
        response.writelines("5 1.2 6 1.2 8 1.2 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 458 0.9DL+1.2RLL+0.9CL+1.2TL2\n")
        response.writelines("5 0.9 6 1.2 8 0.9 18 1.2\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 459 1.0DL+0.35RLL+0.35MLL+1.0CL+0.35TL2\n")
        response.writelines("5 1.0 6 0.35 7 0.35 8 1.0 18 0.35\n")

        response.writelines("********************************************************************\n")
        response.writelines("****************LOAD COMBINATIONS - SERVICEABILITY******************\n")
        response.writelines("********************************************************************\n")
        response.writelines("LOAD COMB 501 1.0DL+1.0RLL+1.0MLL+1.0TL1 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 17 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 502 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 503 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 504 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 505 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 506 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 17 0.8\n")
        response.writelines("LOAD COMB 507 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 508 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 17 0.8\n")
        response.writelines("LOAD COMB 509 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 510 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 511 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 512 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 513 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 514 1.0DL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 9 1.0\n")
        response.writelines("LOAD COMB 515 1.0DL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 10 1.0\n")
        response.writelines("LOAD COMB 516 1.0DL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 11 1.0\n")
        response.writelines("LOAD COMB 517 1.0DL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 12 1.0\n")
        response.writelines("LOAD COMB 518 1.0DL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 13 1.0\n")
        response.writelines("LOAD COMB 519 1.0DL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 14 1.0\n")
        response.writelines("LOAD COMB 520 1.0DL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 15 1.0\n")
        response.writelines("LOAD COMB 521 1.0DL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 522 1.0DL+1.0+SLX\n")
        response.writelines("5 1.0 1 1.0\n")
        response.writelines("LOAD COMB 523 1.0DL+1.0-SLX\n")
        response.writelines("5 1.0 2 1.0\n")
        response.writelines("LOAD COMB 524 1.0DL+1.0+SLZ\n")
        response.writelines("5 1.0 3 1.0\n")
        response.writelines("LOAD COMB 525 1.0DL+1.0-SLZ\n")
        response.writelines("5 1.0 4 1.0\n")

        response.writelines("LOAD COMB 526 1.0DL+1.0RLL+1.0MLL+1.0CL+1.0TL1 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 8 1.0 17 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 527 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 9 0.8 17 0.8\n")
        response.writelines("LOAD COMB 528 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 10 0.8 17 0.8\n")
        response.writelines("LOAD COMB 529 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 11 0.8 17 0.8\n")
        response.writelines("LOAD COMB 530 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 12 0.8 17 0.8\n")
        response.writelines("LOAD COMB 531 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 13 0.8 17 0.8\n")
        response.writelines("LOAD COMB 532 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z+CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 14 0.8 17 0.8 \n")
        response.writelines("LOAD COMB 533 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 15 0.8 17 0.8\n")
        response.writelines("LOAD COMB 534 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z-CPI+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 16 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 535 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 1 0.8 17 0.8\n")
        response.writelines("LOAD COMB 536 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLX+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 2 0.8 17 0.8\n")
        response.writelines("LOAD COMB 537 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 3 0.8 17 0.8\n")
        response.writelines("LOAD COMB 538 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLZ+0.8TL1\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 4 0.8 17 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 539 1.0DL+1.0CL+1.0WL+X+CPI\n")
        response.writelines("5 1.0 8 1.0 9 1.0\n")
        response.writelines("LOAD COMB 540 1.0DL+1.0CL+1.0WL-X+CPI\n")
        response.writelines("5 1.0 8 1.0 10 1.0\n")
        response.writelines("LOAD COMB 541 1.0DL+1.0CL+1.0WL+X-CPI\n")
        response.writelines("5 1.0 8 1.0 11 1.0\n")
        response.writelines("LOAD COMB 542 1.0DL+1.0CL+1.0WL-X-CPI\n")
        response.writelines("5 1.0 8 1.0 12 1.0\n")
        response.writelines("LOAD COMB 543 1.0DL+1.0CL+1.0WL+Z+CPI\n")
        response.writelines("5 1.0 8 1.0 13 1.0\n")
        response.writelines("LOAD COMB 544 1.0DL+1.0CL+1.0WL-Z+CPI\n")
        response.writelines("5 1.0 8 1.0 14 1.0\n")
        response.writelines("LOAD COMB 545 1.0DL+1.0CL+1.0WL+Z-CPI\n")
        response.writelines("5 1.0 8 1.0 15 1.0\n")
        response.writelines("LOAD COMB 546 1.0DL+1.0CL+1.0WL-Z-CPI\n")
        response.writelines("5 1.0 8 1.0 16 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 547 1.0DL+1.0CL+1.0+SLX\n")
        response.writelines("5 1.0 8 1.0 1 1.0\n")
        response.writelines("LOAD COMB 548 1.0DL+1.0CL+1.0-SLX\n")
        response.writelines("5 1.0 8 1.0 2 1.0\n")
        response.writelines("LOAD COMB 549 1.0DL+1.0CL+1.0+SLZ\n")
        response.writelines("5 1.0 8 1.0 3 1.0\n")
        response.writelines("LOAD COMB 550 1.0DL+1.0CL+1.0-SLZ\n")
        response.writelines("5 1.0 8 1.0 4 1.0\n")

        response.writelines("LOAD COMB 551 1.0DL+1.0RLL+1.0MLL+1.0TL2 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 18 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 552 1.0DL+0.8RLL+0.8MLL+0.8WL+X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 9 0.8 18 0.8\n")
        response.writelines("LOAD COMB 553 1.0DL+0.8RLL+0.8MLL+0.8WL+X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 10 0.8 18 0.8\n")
        response.writelines("LOAD COMB 554 1.0DL+0.8RLL+0.8MLL+0.8WL-X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 11 0.8 18 0.8\n")
        response.writelines("LOAD COMB 555 1.0DL+0.8RLL+0.8MLL+0.8WL-X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 12 0.8 18 0.8\n")
        response.writelines("LOAD COMB 556 1.0DL+0.8RLL+0.8MLL+0.8WL+Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 13 0.8 18 0.8\n")
        response.writelines("LOAD COMB 557 1.0DL+0.8RLL+0.8MLL+0.8WL-Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 14 0.8 18 0.8 \n")
        response.writelines("LOAD COMB 558 1.0DL+0.8RLL+0.8MLL+0.8WL+Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 15 0.8 18 0.8\n")
        response.writelines("LOAD COMB 559 1.0DL+0.8RLL+0.8MLL+0.8WL-Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 16 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 560 1.0DL+0.8RLL+0.8MLL+0.8+SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 1 0.8 18 0.8\n")
        response.writelines("LOAD COMB 561 1.0DL+0.8RLL+0.8MLL+0.8-SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 2 0.8 18 0.8\n")
        response.writelines("LOAD COMB 562 1.0DL+0.8RLL+0.8MLL+0.8+SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 3 0.8 18 0.8\n")
        response.writelines("LOAD COMB 563 1.0DL+0.8RLL+0.8MLL+0.8-SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 4 0.8 18 0.8\n")

        response.writelines("LOAD COMB 564 1.0DL+1.0RLL+1.0MLL+1.0CL+1.0TL2 \n")
        response.writelines("5 1.0 6 1.0 7 1.0 8 1.0 18 1.0\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 565 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 9 0.8 18 0.8\n")
        response.writelines("LOAD COMB 566 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 10 0.8 18 0.8\n")
        response.writelines("LOAD COMB 567 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 11 0.8 18 0.8\n")
        response.writelines("LOAD COMB 568 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-X-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 12 0.8 18 0.8\n")
        response.writelines("LOAD COMB 569 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 13 0.8 18 0.8\n")
        response.writelines("LOAD COMB 570 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z+CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 14 0.8 18 0.8 \n")
        response.writelines("LOAD COMB 571 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL+Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 15 0.8 18 0.8\n")
        response.writelines("LOAD COMB 572 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8WL-Z-CPI+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 16 0.8 18 0.8\n")

        response.writelines("****\n")
        response.writelines("LOAD COMB 573 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 1 0.8 18 0.8\n")
        response.writelines("LOAD COMB 574 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLX+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 2 0.8 18 0.8\n")
        response.writelines("LOAD COMB 575 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8+SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 3 0.8 18 0.8\n")
        response.writelines("LOAD COMB 576 1.0DL+0.8RLL+0.8MLL+1.0CL+0.8-SLZ+0.8TL2\n")
        response.writelines("5 1.0 6 0.8 7 0.8 8 1.0 4 0.8 18 0.8\n")

        response.writelines("********************************************************************\n")
        response.writelines("PERFORM ANALYSIS\n")
        response.writelines("LOAD LIST 100 TO 459\n")


    response.writelines("PARAMETER 1\n")
    response.writelines("CODE IS800 LSD\n")

    Memb_total = ((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)
    MEMB=[]
    i=0
    while i<=(Memb_total-1):
        MEMB.append(i+1)
        i=i+1
    print(MEMB)
    st=' '.join(map(str,MEMB))
    print(st)

    response.writelines(f"FYLD 345000 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(MEMB):
        if len(MEMB)>=15:
            CRETA1.append(MEMB[y-1])
            if y%15==0 or y%len(MEMB)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(MEMB):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(MEMB):
                st=' '.join(map(str,MEMB))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"FU 490000 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(MEMB):
        if len(MEMB)>=15:
            CRETA1.append(MEMB[y-1])
            if y%15==0 or y%len(MEMB)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(MEMB):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(MEMB):
                st=' '.join(map(str,MEMB))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"BEAM 1 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(MEMB):
        if len(MEMB)>=15:
            CRETA1.append(MEMB[y-1])
            if y%15==0 or y%len(MEMB)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(MEMB):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(MEMB):
                st=' '.join(map(str,MEMB))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"STP 2 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(MEMB):
        if len(MEMB)>=15:
            CRETA1.append(MEMB[y-1])
            if y%15==0 or y%len(MEMB)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(MEMB):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(MEMB):
                st=' '.join(map(str,MEMB))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"MAIN 180 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(MEMB):
        if len(MEMB)>=15:
            CRETA1.append(MEMB[y-1])
            if y%15==0 or y%len(MEMB)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(MEMB):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(MEMB):
                st=' '.join(map(str,MEMB))
                response.writelines(f"{st}\n")
        y=y+1


    i=((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))
    CRET=[]
    while i<(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+(len(Braced_bay_location)*(len(BR_Nodes)-1)*2)+(len(Braced_bay_location)*2*2)):
        CRET.append(i+1)
        i=i+1
    print(CRET)
    st=' '.join(map(str,CRET))
    print(st)

    response.writelines(f"FYLD 250000 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"FU 410000 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"STP 1 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"MAIN 250 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1



    x=0
    CRET=[]
    CRET1=[]
    CRET2=[]
    CRET3=[]
    while x<(len(SW1)):
        i=0
        while i<=(len(EWX)-1):
            if i==0:
                CRET.append(1+((len(EWX)-1)*x))
            if i>0 and i<((len(EWX)-1)/2):
                CRET1.append((i+1)+((len(EWX)-1)*x))
            if i>=((len(EWX)-1)/2) and i<(len(EWX)-2):
                CRET2.append((i+1)+((len(EWX)-1)*x))
            if i==len(EWX)-1:
                CRET3.append((len(EWX)-1)+((len(EWX)-1)*x))
            i=i+1
        print(CRET)
        st=' '.join(map(str,CRET))
        print(CRET1)
        st1=' '.join(map(str,CRET1))
        print(CRET2)
        st2=' '.join(map(str,CRET2))
        print(CRET3)
        st3=' '.join(map(str,CRET3))
        print(st)
        x=x+1
    response.writelines(f"LZ {Height} MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1

    if NSC_SUPPORT=='PINNED':
        response.writelines(f"KZ 2 MEMB -\n")
    else:
        response.writelines(f"KZ 1.2 MEMB -\n")

    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"LY 1.5 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"LX 1.5 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1


    Ibay=[]
    nodes=0
    while nodes<=len(ICO_Nodes):
        Ibay_1=[]
        y=0
        while y<(len(SW1)):
            x=ICO_nodes_for_Rafter_Lz[nodes]
            while x<ICO_nodes_for_Rafter_Lz[nodes+1]:
                Ibay_1.append(x+(y*(len(EWY)-1)))
                x=x+1
            y=y+1
        print(Ibay_1)
        Ibay.append(Ibay_1)

        nodes = nodes + 1


    x=0
    while x<len(Ibay):
        response.writelines(f"LZ {round((ICO_for_rafter_Lz[x]**2+(ICO_for_rafter_Lz[x]*Slope)**2)**0.5,3)} MEMB -\n")
        CRETA1=[]
        y=1
        while y<=len(Ibay[x]):
            if len(Ibay[x])>=15:
                CRETA1.append(Ibay[x][y-1])
                if y%15==0 or y%len(Ibay[x])==0:
                    st1=' '.join(map(str,CRETA1))
                    if y==len(Ibay[x]):
                        response.writelines(f"{st1}\n")
                    else:
                        response.writelines(f"{st1} -\n")
                    print(CRETA1)
                    print(st1)
                    CRETA1=[]
            else:
                if y==len(Ibay[x]):
                    st1=' '.join(map(str,Ibay[x]))
                    response.writelines(f"{st1}\n")
            y=y+1
        x=x+1

    x=0
    while x<len(Ibay):
        response.writelines(f"LY 1.5 MEMB -\n")
        CRETA1=[]
        y=1
        while y<=len(Ibay[x]):
            if len(Ibay[x])>=15:
                CRETA1.append(Ibay[x][y-1])
                if y%15==0 or y%len(Ibay[x])==0:
                    st1=' '.join(map(str,CRETA1))
                    if y==len(Ibay[x]):
                        response.writelines(f"{st1}\n")
                    else:
                        response.writelines(f"{st1} -\n")
                    print(CRETA1)
                    print(st1)
                    CRETA1=[]
            else:
                if y==len(Ibay[x]):
                    st1=' '.join(map(str,Ibay[x]))
                    response.writelines(f"{st1}\n")
            y=y+1
        x=x+1

    x=0
    while x<len(Ibay):
        response.writelines(f"LX 1.5 MEMB -\n")
        CRETA1=[]
        y=1
        while y<=len(Ibay[x]):
            if len(Ibay[x])>=15:
                CRETA1.append(Ibay[x][y-1])
                if y%15==0 or y%len(Ibay[x])==0:
                    st1=' '.join(map(str,CRETA1))
                    if y==len(Ibay[x]):
                        response.writelines(f"{st1}\n")
                    else:
                        response.writelines(f"{st1} -\n")
                    print(CRETA1)
                    print(st1)
                    CRETA1=[]
            else:
                if y==len(Ibay[x]):
                    st1=' '.join(map(str,Ibay[x]))
                    response.writelines(f"{st1}\n")
            y=y+1
        x=x+1


    response.writelines(f"LZ {Height} MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET3):
        if len(CRET3)>=15:
            CRETA1.append(CRET3[y-1])
            if y%15==0 or y%len(CRET3)==0:
                st3=' '.join(map(str,CRETA1))
                if y==len(CRET3):
                    response.writelines(f"{st3}\n")
                else:
                    response.writelines(f"{st3} -\n")
                print(CRETA1)
                print(st3)
                CRETA1=[]
        else:
            if y==len(CRET3):
                st3=' '.join(map(str,CRET3))
                response.writelines(f"{st3}\n")
        y=y+1

    response.writelines(f"KZ 2 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET3):
        if len(CRET3)>=15:
            CRETA1.append(CRET3[y-1])
            if y%15==0 or y%len(CRET3)==0:
                st3=' '.join(map(str,CRETA1))
                if y==len(CRET3):
                    response.writelines(f"{st3}\n")
                else:
                    response.writelines(f"{st3} -\n")
                print(CRETA1)
                print(st3)
                CRETA1=[]
        else:
            if y==len(CRET3):
                st3=' '.join(map(str,CRET3))
                response.writelines(f"{st3}\n")
        y=y+1

    response.writelines(f"LY 1.5 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET3):
        if len(CRET3)>=15:
            CRETA1.append(CRET3[y-1])
            if y%15==0 or y%len(CRET3)==0:
                st3=' '.join(map(str,CRETA1))
                if y==len(CRET3):
                    response.writelines(f"{st3}\n")
                else:
                    response.writelines(f"{st3} -\n")
                print(CRETA1)
                print(st3)
                CRETA1=[]
        else:
            if y==len(CRET3):
                st3=' '.join(map(str,CRET3))
                response.writelines(f"{st3}\n")
        y=y+1

    response.writelines(f"LX 1.5 MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET3):
        if len(CRET3)>=15:
            CRETA1.append(CRET3[y-1])
            if y%15==0 or y%len(CRET3)==0:
                st3=' '.join(map(str,CRETA1))
                if y==len(CRET3):
                    response.writelines(f"{st3}\n")
                else:
                    response.writelines(f"{st3} -\n")
                print(CRETA1)
                print(st3)
                CRETA1=[]
        else:
            if y==len(CRET3):
                st3=' '.join(map(str,CRET3))
                response.writelines(f"{st3}\n")
        y=y+1


    x=0
    while x<len(EW_for_WC_Lz):
        response.writelines(f"LZ {(EW_for_WC_Lz[x]*Slope)+Height} MEMB -\n")
        CRETA1=[]
        CRETA1.append(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+1+x)
        CRETA1.append(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+1+x+len(EW_for_WC_Lz))
        st1=' '.join(map(str,CRETA1))
        response.writelines(f"{st1}\n")
        x=x+1

    x=0
    while x<len(EW_for_WC_Lz):
        response.writelines(f"LY 1.5 MEMB -\n")
        CRETA1=[]
        CRETA1.append(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+1+x)
        CRETA1.append(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+1+x+len(EW_for_WC_Lz))
        st1=' '.join(map(str,CRETA1))
        response.writelines(f"{st1}\n")
        x=x+1

    x=0
    while x<len(EW_for_WC_Lz):
        response.writelines(f"LX 1.5 MEMB -\n")
        CRETA1=[]
        CRETA1.append(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+1+x)
        CRETA1.append(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+1+x+len(EW_for_WC_Lz))
        st1=' '.join(map(str,CRETA1))
        response.writelines(f"{st1}\n")
        x=x+1

    MEMB=[]
    i=0
    while i<=(Memb_total-1):
        MEMB.append(i+1)
        i=i+1
    print(MEMB)
    st=' '.join(map(str,MEMB))
    print(st)
    response.writelines(f"CHECK CODE MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(MEMB):
        if len(MEMB)>=15:
            CRETA1.append(MEMB[y-1])
            if y%15==0 or y%len(MEMB)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(MEMB):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(MEMB):
                st=' '.join(map(str,MEMB))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"STEEL MEMBER TAKE OFF LIST -\n")
    CRETA1=[]
    y=1
    while y<=len(MEMB):
        if len(MEMB)>=15:
            CRETA1.append(MEMB[y-1])
            if y%15==0 or y%len(MEMB)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(MEMB):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(MEMB):
                st=' '.join(map(str,MEMB))
                response.writelines(f"{st}\n")
        y=y+1

    i=((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))
    CRET=[]
    while i<(((len(EWX)-1)*len(SW1))+(len(ICO)*len(SW1))+(len(Only_WC_Nodes)*2)+(len(BR_Nodes)*(len(SW1)-1))+(len(Braced_bay_location)*(len(BR_Nodes)-1)*2)+(len(Braced_bay_location)*2*2)):
        CRET.append(i+1)
        i=i+1
    print(CRET)
    st=' '.join(map(str,CRET))
    print(st)
    response.writelines(f"CHECK CODE MEMB -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1

    response.writelines(f"STEEL MEMBER TAKE OFF LIST -\n")
    CRETA1=[]
    y=1
    while y<=len(CRET):
        if len(CRET)>=15:
            CRETA1.append(CRET[y-1])
            if y%15==0 or y%len(CRET)==0:
                st=' '.join(map(str,CRETA1))
                if y==len(CRET):
                    response.writelines(f"{st}\n")
                else:
                    response.writelines(f"{st} -\n")
                print(CRETA1)
                print(st)
                CRETA1=[]
        else:
            if y==len(CRET):
                st=' '.join(map(str,CRET))
                response.writelines(f"{st}\n")
        y=y+1


    # END
    response.writelines("FINISH")


    return response
